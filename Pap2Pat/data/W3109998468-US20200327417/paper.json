{
    "id": "https://semopenalex.org/work/W3109998468",
    "authors": [
        "Jiang Hu",
        "Yiran Chen",
        "Sheng Ye",
        "Zhiyao Xie",
        "Haoxing Ren",
        "Brucek Khailany",
        "Santosh Santosh"
    ],
    "title": "PowerNet: Transferable Dynamic IR Drop Estimation via Maximum Convolutional Neural Network",
    "date": "2020-01-01",
    "abstract": "IR drop is a fundamental constraint required by almost all chip designs. However, its evaluation usually takes a long time that hinders mitigation techniques for fixing its violations. In this work, we develop a fast dynamic IR drop estimation technique, named PowerNet, based on a convolutional neural network (CNN). It can handle both vector-based and vectorless IR analyses. Moreover, the proposed CNN model is general and transferable to different designs. This is in contrast to most existing machine learning (ML) approaches, where a model is applicable only to a specific design. Experimental results show that PowerNet outperforms the latest ML method by 9% in accuracy for the challenging case of vectorless IR drop and achieves a 30 times speedup compared to an accurate IR drop commercial tool. Further, a mitigation tool guided by PowerNet reduces IR drop hotspots by 26% and 31% on two industrial designs, respectively, with very limited modification on their power grids.",
    "sections": [
        {
            "title": "I. INTRODUCTION",
            "paragraphs": [
                "Dynamic IR drop is the deviation of the power supply level from its specification caused by localized power demand and switching patterns. It must be restricted in order for a circuit to meet its timing target and function properly. As such, it is vitally important to verify if IR drop satisfies design constraints and identify constraint violation regions, a.k.a. hotspots. As chip complexity continues to grow, IR drop evaluation becomes increasingly challenging.",
                "In industrial designs, dynamic IR drop estimation is often obtained by running simulation-based commercial tools, which are known to be accurate but very time-consuming. Machine learning (ML)based approaches have been explored in an effort to achieve faster estimation. Many of these previous works are summarized in Table I. These works learn to predict dynamic IR drop of each cell through features such as cell positions, timing windows, path resistance, etc. with supervised machine learning techniques.",
                "A major weakness shared by most of the previous works is that they are not \"design independent\", i.e., transferable to new designs that are not seen in its training dataset. In other words, most of these previous works need to train a new model for each distinct design. Some work [1] even dedicates one model for every single cell.",
                "Training a new model with new labels entails a long simulation and training time, which defeats the original purpose of fast estimation. The only exception is [2], which is based on unsupervised learning and does not learn any previous knowledge.",
                "In addition, most previous ML approaches to IR drop estimation only focus on vector-based analysis, ignoring vectorless IR drop. For dynamic IR drop, the peak IR drop in the design can be analyzed either using vectorless analysis or vector-based analysis using simulation patterns from value change dump (VCD) files. Vectorless IR drop analysis is highly desirable for IR mitigation during physical design for two main reasons. Firstly, for a large chiplet, vector-based IR drop analysis requires a huge number of simulation patterns to cover most regions and thus can be unbearably slow. Secondly, designers are unable to obtain accurate power simulation patterns early in the design process. For large industrial designs, multiple teams work on different RTL units in parallel and the overall simulation patterns change throughout the design process. Vectorless IR drop provides a faster and earlier estimation in this case, however, accurate estimation is more difficult than vector-based due to the increased diversity in switching activity distribution. We will demonstrate the accuracy difference between vector-based and vectorless IR drop analysis in Section V-E. Our CNN-based method PowerNet provides a transferable ML model for both vectorless and vector-based IR drop estimations. We put more emphasis on vectorless estimation in our experiments, considering its higher difficulty and usability. PowerNet addresses these challenges by its innovative preprocessed features and CNN architecture. In previous works [5], the design dependent features such as coordinates and timing information of each cell are directly fed into the ML model. Since locations and timing do not directly cause IR drop, directly fitting a model based on these features would likely introduce the overfitting problem, making the model inaccurate on unseen designs. Instead, design-dependent information should be preprocessed to correlate with IR drop before feeding to ML models. It is known that IR drop directly correlates with cell power consumption. Therefore, PowerNet carefully incorporates these designdependent features into power maps during preprocessing. It also utilizes an innovative CNN architecture to capture maximum transient IR drop. The main contributions of our work include:",
                "\u2022 We propose PowerNet, an innovative CNN method targeting both vectorless and vector-based IR drop estimation. It is the first method that claims to perform design-independent fast IR drop estimations. II. PROBLEM FORMULATION This work aims at detecting locations of IR drop hotspots. Hotspots are regions where IR drop is greater than a specified threshold. To estimate IR drop, every design is tessellated into an array of tiles, each of which is an l\u00d7l square. The tile size l controls the granularity of our solution. In this way, a design with the size of W \u00d7 H is represented as a w \u00d7 h matrix, where w = W/l and h = H/l. The IR drop at each tile is the mean value of IR drop of all cells within it. Then IR drop for the whole design is IR \u2208 R w\u00d7h . The ground-truth IR is also referred to as label in this paper. As for input features, different types of power dissipation values are calculated for each tile. We refer to each w \u00d7 h power matrix as a power map. Essentially, power maps are the distribution of power density. PowerNet F tries to give the closest estimation F * on IR based on all G different power maps {Pmap1 ... PmapG}. "
            ],
            "subsections": []
        },
        {
            "title": "A. Feature Extraction",
            "paragraphs": [
                "According to Ohm's Law, excessive IR drop can be caused by either high current or high resistance. As is typical in state-of-the-art VLSI design, we assume a uniform power grid in the power delivery network (PDN), which means the resistance distribution across a whole design is also rather uniform. Thus in PowerNet, we choose not to spend extra time calculating resistance for each cell. For designs with a non-uniform PDN, each cell's power value can be scaled by its resistance. The influence of resistance is further elaborated in Section V-D. When resistance is considered consistent, current becomes the only key issue in IR drop estimation. Since local power consumption is proportional to local current, PowerNet utilizes cell power as its input features.",
                "For each cell c, we do not exhaust all possible features that seem to be relevant, which make the model too complex and overfit. Instead, we select features that prove to provide essential information for IR drop estimation. Hard macros are not included. Below are the details of all features and the labels extracted from them:",
                "\u2022 Power: Three types of power values are extracted.",
                "-Internal power (pi) -Switching power (ps) -Leakage power (p l )",
                "\u2022 Signal arrival time: The minimum and maximum signal arrival times to the cell within a clock cycle.",
                "-Min arrival time (tmin) -Max arrival time (tmax)",
                "\u2022 Coordinates: The cell location after placement.",
                "-Min and max x axis (xmin, xmax) -Min and max y axis (ymin, ymax)",
                "\u2022 Toggle rate: Describes how often output changes with regard to a given clock input.",
                "-Rate (rtog)",
                "\u2022 IR drop: The difference between the nominal supply voltage and the actual voltage arrived at each cell. (ir) All of the above features are scalar values. For these power types, internal power pi means power dissipated by capacitance internal to each cell; switching power ps is power dissipated by the load capacitance at the output of the cell; leakage power p l , which is relatively small in the experiment, is consumed by unintended leakage that does not contribute to function. Based on these basic power types, we can generate more power information for each cell:",
                "Both psca and p all reflect the overall power dissipated by cells, but psca scales the overall power by toggle rate of each cell. PowerNet learns to combine the total power from these different sources of power dissipation.",
                "l \ud835\udf07\ud835\udc5a l \ud835\udf07\ud835\udc5a Preprocess:  Pi += M * pi/s 12:",
                "Ps += M * ps/s 13:",
                "Psca += M * psca/s 14:",
                "P all += M * p all /s 15:",
                "if tmin < j * t and tmax > j * t then 17:"
            ],
            "subsections": []
        },
        {
            "title": "B. Preprocessing by Decomposition",
            "paragraphs": [
                "After power is extracted, the IR drop seen at each cell is not just simply proportional to its own cell power but also depends on its neighborhood due to both spatial and temporal current distributions. Spatially, local current is proportional to the sum of power demand of all cells in a local region. Hence, the power of neighboring cells also contributes to IR drop of the analyzed cell. We amortize cell power into grid tiles by a space decomposition. This also motivates us to adopt a CNN model in PowerNet, which is inherently designed for learning scalable two-dimensional patterns. Even when considering spatial information, a region with high overall power demand may still not be IR drop hotspot. This case arises when cells in the region do not switch at the same time. Such asynchronous switching disperses voltage drop into a larger timing window. As a result, maximum dynamic IR drop, i.e. the highest-transient voltage drop, can still be low. PowerNet measures such influence by time decomposition during preprocessing.",
                "Algorithm 1 shows our preprocessing method. It generates power maps based on cell information. For each design, two types of power maps are generated. The first type includes {Pi, Ps, Psca, P all }. They only go through spatial decomposition and do not carry timing information. The second type {Pt[ j] \u2208 R w\u00d7h | j \u2208 [1, N ]} goes through both a space decomposition and a time decomposition.",
                "As illustrated in Figure 1, space decomposition (Lines 7 to 14) amortizes cell power into any grid tiles occupied by the cell. Assume the regular squares are grid tiles and grey rectangles are cells. P1 to P5 are cell power. For the leftmost highlighted tile, its power equals P1 + P2 + P3 + P4/3 + P5/2. The long cell with power P4  only contributes one-third of its power to that of the highlighted tile, because altogether it overlaps with three tiles. Similarly, in line 7 to 14, each cell contributes p/s, where s is the number of overlapping tiles.",
                "Lines 15 to 17 perform time decomposition. Every power map Pt[ j] corresponds to one time instant j * t. For each cell at j * t, it contributes power to a corresponding power map Pt[ j] only when j * t falls between its signal arriving time [tmin, tmax]. In other words, only cells that can possibly switch at that instant are considered. Figure 2 demonstrates the mechanism. Vertical dashed lines are measured instants 1 * t to j * t, and horizontal bars are the signal arrival time intervals of cells. In this example, only cells 1 and 3 will be counted for Pt[ j] and no cells are counted for Pt [1]."
            ],
            "subsections": []
        },
        {
            "title": "C. PowerNet Model",
            "paragraphs": [
                "Algorithm 2 shows how PowerNet F handles power maps with its CNN model f . For each training epoch, it iterates through every tile (x, y) in training designs. For every tile, it crops k \u00d7 k input windows surrounding it from all relevant w \u00d7 h power maps by the function GETINPUT.",
                "As shown in Lines 11 to 12 and Figure 3, for all N timedecomposed power maps {Pt ",
                "Training:",
                "Stack features I = {Pi, Ps, Psca, P all , Pt[j]} \u2208 R w\u00d7h\u00d75 3:  The C under each tensor gives the number of kernels defined in each convolutional layer. This CNN structure and hyperparameters like N , k are tuned based on the performance during cross-validation. Choosing larger input k, more layers or kernels turns out to reduce model generalization and slow down the prediction, while a simpler structure underfits the data. Batch normalization (BN) [6] is applied to accelerate model convergence. Adam method [7] is used for optimization. We adopt the mean absolute error between prediction and label (L1 loss) as loss function. In our experiment, we use six industrial designs in a sub-10nm technology node (Table II) with an IR drop hotspot threshold of 56mV , 6% of the supply voltage (0.94V ). Features and IR drop labels are extracted after clock tree synthesis (CTS). Though tested at the CTS stage, PowerNet can also be applied to other stages. We perform vectorless analysis and use results from a commercial IR drop analysis tool as labels. We train the models and measure their accuracy on D1 to D4, then mitigate the IR drop of MD1 and MD2 with the estimation from PowerNet. When testing estimation accuracy on D1 to D4, the ML model is trained only on data from the other three designs. It ensures that the tested design is totally unseen to the corresponding model, which eliminates the possibility of information leakage between the testing and training datasets."
            ],
            "subsections": []
        },
        {
            "title": "A. Experiment Setup",
            "paragraphs": [
                "We implemented CNN and tree-based XGBoost models similar to [5] as a comparison with PowerNet. Similar to [5], two types of features are extracted, named cell features and map features. Cell features are one-dimensional and map features are two-dimensional. For each cell c, cell features include its signal arrival time, coordinates, capacitance, unscaled overall cell power p all , toggle rate rtog and cell type. The current of each cell is not included because it is not available in our design flow. Since voltages at different regions are all close to the supply voltage, current can be viewed as proportional to power. Then, local maps of both unscaled overall power p all and rtog around it are constructed as its map feature. Notice that compared with PowerNet, only one type of power p all is used. For the treebased XGBoost model, all map features and cell features are directly used as model input. To fit into XGBoost, the two-dimensional map features are flattened into one dimension. For the CNN model, map features firstly go through three convolutional layers, each with 25, 25 and 50 filters. Then, the output of convolutional layers together with all cell features are fed into three fully connected layers, each with 512 neurons. A 0.4 dropout rate [8] is applied. Other hyperparameters like optimizer or learning rate of baselines are carefully  All algorithms are implemented in Python. CNN-related models are built on PyTorch 1.0 [9]. For PowerNet, we set tile size l = 1 \u00b5m, number of measured instants N = 50, and an input window size k = 31 in the experiment. Both training and testing are implemented on an 8-core CPU machine with 100 GB memory and one NVIDIA Tesla V100 GPU."
            ],
            "subsections": []
        },
        {
            "title": "B. Result Measured in ROC Curve",
            "paragraphs": [
                "Figures 5 and6 show the performance on different designs when measured in 1 \u00d7 1 tiles and 5 \u00d7 5 tiles, respectively. Measurement in 5 \u00d7 5 tiles means tessellating both predictions and labels with a larger tile, whose size is 5l \u00d7 5l. In this case IR \u2208 R w 5 \u00d7 h 5 . Sometimes when designers fix IR drop by performing power grid (PG) enhancements, hotspots shown in 5l \u00d7 5l tile already provide sufficient information. Accuracy is measured by the area under the ROC curve (AUC \u2208 [0, 1]). A larger area means a better accuracy in hotspot identification. PowerNet achieves AUC higher than 0.9 and 0.95 for all designs for the aforementioned two granularity's, respectively. On average, for 1\u00d71 tiles, the AUC for CNN, XGBoost and PowerNet are around 0.83, 0.84 and 0.93. For 5 \u00d7 5 tiles, their AUC are around 0.86, 0.86 and 0.96. PowerNet's improvement in accuracy is 9%.",
                "Figure 7 shows visualizations of both ground truth and the prediction results from PowerNet. Only subsets of each design containing IR drop hotspot regions are displayed. Red color indicates higher values while blue corresponds to lower values and white means zero values. The white blocks in ground truth are usually the regions "
            ],
            "subsections": []
        },
        {
            "title": "C. Results Measured in Error and Ranking",
            "paragraphs": [
                "Besides ROC curves, which reflect how well models recognize hotspots, we also measured how models fit and rank tiles according to their IR drop values in Figure 8. The metrics are mean squared error (MSE) and Kendall rank coefficient [10] \u03c4 \u2208 [-1, 1] between the estimation and ground-truth IR values for all tiles. A higher value of \u03c4 implies a more accurate ranking of tiles based on IR drop. The MSE and rank coefficients of PowerNet are consistently better than those of other ML methods. Note that a high MSE may be largely contributed by a consistent bias for all inferenced tiles, which means the model always gives a higher or lower prediction for all tiles in one design. In this case, it can still identify those higher-IR tiles or most serious hotspots if it ranks the IR value of tiles accurately. The runtimes of the commercial IR drop analysis tool and ML inferences are measured on a design with around two million cells. Results are shown in Table III. PowerNet achieves a 30\u00d7 speedup over the commercial tool. For a fair comparison, the 2.5 hour for the commercial tool only includes analysis time. Its overall runtime is more than 4 hours. Other ML methods are even faster than PowerNet, but are less accurate. PowerNet is slower than the baseline ML methods because its CNN f generates N outputs oj for each tile. "
            ],
            "subsections": []
        },
        {
            "title": "E. IR Drop Mitigation in Design Flow",
            "paragraphs": [
                "We also integrated PowerNet into a design flow to mitigate the IR drop of MD1 and MD2. Based on PowerNet's estimation, we enhanced the local power grid (PG) in hotspot regions. Notice that the hotspot portions of MD1 and MD2 are much lower than D1 to D4 in the training set. This is because MD1 and MD2 were already close to tapeout and most serious IR drop problems were already fixed, making further IR drop mitigation even more challenging.",
                "Table IV shows the IR drop mitigation result. We only add very thin PG straps (0.04 \u00b5m) at the PowerNet-estimated hotspots. This is the simplest and most basic fixing method. We choose such conservative fixing method to prevent occupying too many routing resources. \"All IR\" and \"Hotspot IR\" mean the averaged IR drop values among all tiles and all hotspots. After PG enhancement, the averaged IR drop for all tiles improves only 0.4 mV, which indicates that the modification on PG is very small. In comparison, when measured only on hotspots, IR drop improves 4.3 mV and 2.6 mV. It shows that PG enhancement is effective at the right places. With such a limited amount of modification in PG, 23% of IR drop violation cells or around 30% of hotspots are mitigated. We highlight four weaknesses of previous CNN and XGBoost baseline models that prevent them from outperforming PowerNet. First, unnecessary features can confuse ML models. If cell coordinates and time information are used as features but do not directly correlate with IR drop, a model can overfit to designs in the training set. Other features such as cell capacitance can be redundant when power is already provided. To verify this, we implemented an XGBoost model without cell coordinates or time information, and its averaged 1 \u00d7 1 tiles AUC improved from 0.84 to 0.865. When we further removed cell capacitance from features, the averaged AUC remained at 0.865. Second, different feature formats make the model inefficient. Notice that cell features are one dimensional but map features are two dimensional. For XGBoost, map features must be converted into one dimension, which loses spatial information. For CNN, cell features must be provided through a fully connected layer. In such an unusual CNN structure, cell features tend to be overwhelmed by more than 10,000 outputs from the 50 channels  in the last convolutional layer. In comparison, PowerNet only uses two-dimensional features. Third, power information may not be fully utilized. When only overall power P all is chosen as a feature, the rich information from other power types Pi, Ps, Psca is lost. Advanced ML models like CNN are complex enough to learn patterns from different power types. Fourth, time information is not well incorporated or captured. Baselines do not have features like the timedecomposed power maps in PowerNet to measure the worst transient local IR drop.",
                "Figure 9 isolates the contribution of including both time decomposition and multiple power types in variations of PowerNet. Average inference AUC accuracy over D1 to D4 is plotted on the Y-axis and the X-axis shows the number of sampled time instants. A higher N means sampling more time instants and generating more corresponding power maps Pt[ j] within a given clock period T . For any region, more power maps better approximate its actual transient power. The \"N=0\" indicates no time-decomposed power is adopted at all. As expected, the time-decomposed power maps improve accuracy by capturing transient IR drop. When N > 50, the improvement in accuracy by increasing N diminishes. Baseline models also differ from PowerNet by only using maps of features (P all and rtog) instead of {Pi, Ps, Psca, P all }. This variation is indicated as red and green marks in Figure 9, where time-decomposed power maps Pt[ j] are kept the same for both variations. In addition to the 2.5% accuracy improvement from time decomposition, adopting multiple types of power improves accuracy by more than 2%.   "
            ],
            "subsections": []
        },
        {
            "title": "C. Training Accuracy",
            "paragraphs": [
                "Table V shows the training accuracy for three ML methods. XGBoost shows a higher training accuracy than the CNN baseline, consistent with its better design-dependent performance in previous work [5]. PowerNet provides the highest training and inference accuracy among all ML models."
            ],
            "subsections": []
        },
        {
            "title": "D. Influence of Resistance",
            "paragraphs": [
                "We measured the distribution of resistance in our benchmark design. Take D1 for example, the standard deviation in resistance across the whole design is only 2.8\u2126, 0.6% of its average resistance. For such a uniform distribution, we chose not to spend extra time calculating per-cell resistance. However, we did implement another variation of PowerNet where each cell's power is scaled with resistance, denoted as \"PRNet\" in Table VI. \"Ave\" means accuracy averaged over all four designs. On average, the resistance-scaled PowerNet shows similar accuracy to the original one. This demonstrates that using per-cell resistance as a feature is not necessary for designs with uniform PDNs. By scaling power with resistance, \"PRNet\" can be further applied to designs with non-uniform PDNs."
            ],
            "subsections": []
        },
        {
            "title": "E. Vector-Based IR Drop Estimation",
            "paragraphs": [
                "We also measured PowerNet's performance on vector-based IR drop. The PowerNet architecture remains exactly the same, but cell power and IR drop are now collected when the commercial tool simulates IR drop with given simulation patterns. Figure 12 shows the vector-based power map P all and label IR. Unlike the vectorless case in Figure 10 or 11, the power of a portion of activated cells is significantly higher than the others. As we mentioned, the correlation  between power and IR drop value turns out to be very strong, which largely reduced the estimation difficulty.",
                "We perform vector-based estimation on four other industrial designs VD1 to VD4. All models and procedures are the same as the vectorless case, except using cell power and IR drop from vectorbased simulation. Table VII shows vector-based estimation accuracy. As expected, all methods provide better estimation than vectorless scenario. But PowerNet still gives the best accuracy for every single design. The 1% to 2% improvement should not be underestimated when accuracy is already very high. To a certain extent, boosting accuracy from 98% to 99% means reducing half of the errors. VI. CONCLUSION In this paper, we present a CNN-based dynamic IR drop estimator. Unlike existing ML works, our model is general and transferable to new designs. We validate the high accuracy of our approach on multiple industrial designs. It takes an order of magnitude less estimation time than commercial tools and significantly outperforms state-of-the-art ML methods in both vector-based and vectorless IR drop scenarios. The IR drop mitigation tool guided by our model reduces IR drop by more than 20% with very limited PG modification."
            ],
            "subsections": [
                {
                    "title": "ACKNOWLEDGMENTS",
                    "paragraphs": [
                        "This work is partially supported by Semiconductor Research Corporation Tasks 2810.021 and 2810.022 through UT Dallas' Texas Analog Center of Excellence (TxACE)."
                    ],
                    "subsections": []
                }
            ]
        }
    ]
}