{
    "id": "US20200160482",
    "authors": [
        "Venkatesh Kodukula",
        "Saad Katrawala",
        "Britton Jones",
        "Robert LiKamWa"
    ],
    "title": "FIDELITY-DRIVEN RUNTIME THERMAL MANAGEMENT FOR NEAR-SENSOR ARCHITECTURES",
    "date": "2019-11-15 00:00:00",
    "abstract": "Fidelity-driven runtime thermal management for near-sensor architectures is provided. In this regard, a runtime controller is provided for controlling an operational mode of a vision or imaging system driven by fidelity demands. The runtime controller is responsible for guaranteeing the fidelity demands of a vision application and coordinating state transfer between operating modes to ensure a smooth transition. Under this approach, the vision application only needs to provide the runtime controller with high-level vision/imaging fidelity demands and when to trigger them. The runtime controller translates these demands into effective thermal management. To do this, the runtime controller applies application-specific requirements into appropriate policy parameters and activates temperature reduction mechanisms, such as clock gating and task offload. Furthermore, the runtime controller continuously adapts the policy parameters to situational settings, such as ambient temperature and ambient lighting, to meet ongoing fidelity demands.",
    "sections": [
        {
            "title": "DESCRIPTION",
            "paragraphs": [],
            "subsections": [
                {
                    "title": "FIELD OF THE DISCLOSURE",
                    "paragraphs": [
                        "The present disclosure relates to imaging and vision systems and in particular to imaging and vision systems having near-sensor architectures."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "define field of disclosure"
                    ],
                    "num_characters": 142,
                    "outline_medium": [
                        "define field of disclosure"
                    ],
                    "outline_short": [
                        "define field of disclosure"
                    ]
                },
                {
                    "title": "BACKGROUND",
                    "paragraphs": [
                        "Imaging and vision systems allow computing systems to sense and react to real-world situations and to capture images for human consumption. This affords a range of utilities on many devices spanning a wide variety of power profiles, including smartphones and tablets, wearable headsets, personal computers, security cameras, drones, automobiles, and security and monitoring systems. Unfortunately, imaging requires high data rates to transfer pixel data from the image sensor to computational units.",
                        "FIG. 1A is a schematic diagram of a traditional vision system 10. In such a traditional vision system 10, computational units 12 are separated from a sensor element 14 via long interconnects 16 (e.g., ribbon cables), yielding data rates which create bottlenecks to energy efficiency and processing. Thus, the traditional vision system 10 results in power profiles on the order of multiple watts (W). For example, it has been shown that a state-of-the-art convolutional neural network needs at least 1 W of processing power to process low resolution quarter video graphics array (QVGA) frames at 30 frames per second (fps) using the traditional vision system 10. For high performance processing at high resolutions and framerates, the power requirements rapidly rise, easily going up to over 10 W of processing power on mobile-based implementations.",
                        "This power consumption has motivated a trend towards three-dimensional \u201cstacked\u201d integrated circuit architectures for sensor capture and processing, also referred to as near sensor processing. FIG. 1B is a schematic diagram of a near-sensor vision system 18. A three-dimensional (3D) stacked vision sensor 20 stacks the sensor element 14, vision processing unit (VPU) 22, and memory 24 on top of each other in the same package. By processing data near the sensor element 14, various proposed and implemented systems can achieve energy-efficient vision processing, as well as bursts of high-speed capture. With advances in fabrication, 3D stacked vision sensors 20 have been commercially released since 2012, and are still under active development for high performance and efficiency.",
                        "Unfortunately, sensitivity of the sensor element 14 to temperature prevents a full adoption of near-sensor processing, creating noise in captured images. Furthermore, low light environments force the sensor element 14 to operate at high exposure and ISO to capture the scene, which increases a vulnerability of the sensor element 14 to noise. Despite a plethora of central processing unit (CPU) dynamic thermal management (DTM) mechanisms, current techniques do not suffice imaging requirements; traditional DTM reduces package cooling costs and maintains maximum temperature limits (e.g., thermal design power (TDP)), turning a blind eye to the transient imaging needs of near-sensor processing. Thus, despite performance and energy benefits of near-sensor processing, the temperature profile of visual computing limits stacked architectures in many situations."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "introduce imaging and vision systems",
                        "describe traditional vision system limitations",
                        "motivate near-sensor processing",
                        "describe near-sensor vision system",
                        "highlight temperature sensitivity limitations"
                    ],
                    "num_characters": 2998,
                    "outline_medium": [
                        "introduce imaging and vision systems",
                        "limitations of traditional vision systems"
                    ],
                    "outline_short": [
                        "motivate near-sensor architectures"
                    ]
                },
                {
                    "title": "SUMMARY",
                    "paragraphs": [
                        "Embodiments described herein include fidelity-driven runtime thermal management for near-sensor architectures. Vision processing on traditional architectures is inefficient due to energy-expensive off-chip data movements. Many researchers advocate pushing processing close to the sensor to substantially reduce data movements. However, continuous near-sensor processing raises the sensor temperature, impairing the fidelity of imaging/vision tasks. This disclosure characterizes the thermal implications of using three-dimensional (3D) stacked image sensors with near-sensor vision processing units (VPUs). The characterization reveals that near-sensor processing reduces system power but degrades image quality.",
                        "For reasonable image fidelity, the sensor temperature needs to stay below a threshold, situationally determined by application needs. Fortunately, the characterization also identifies opportunities\u2014unique to the needs of near-sensor processing\u2014to regulate temperature based on dynamic visual task requirements and rapidly increase capture quality on demand. Based on the characterization, this disclosure proposes and investigates two thermal management control policies\u2014stop-capture-go and seasonal migration\u2014for imaging-aware thermal management. This disclosure presents parameters that govern the policy decisions and explores the trade-offs between system power and policy overhead. An evaluation shows that novel dynamic thermal management strategies can unlock the energy-efficiency potential of near-sensor processing with minimal performance impact, without compromising image fidelity.",
                        "In this regard, embodiments disclosed herein provide a runtime controller for controlling an operational mode of a vision or imaging system driven by fidelity demands. The runtime controller is responsible for guaranteeing the fidelity demands of a vision application and coordinating state transfer between operating modes to ensure a smooth transition. Under this approach, the vision application only needs to provide the runtime controller with high-level vision/imaging fidelity demands and when to trigger them. The runtime controller translates these demands into effective thermal management. To do this, the runtime controller applies application-specific requirements into appropriate policy parameters and activates temperature reduction mechanisms, such as clock gating and task offload. Furthermore, the runtime controller continuously adapts the policy parameters to situational settings, such as ambient temperature and ambient lighting, to meet ongoing fidelity demands.",
                        "An exemplary embodiment provides a vision system. The vision system includes a stacked vision sensor operable in a capture (CAP) mode and a near-sensor processing (NSP) mode. The vision system further includes a runtime controller coupled to the stacked vision sensor. The runtime controller is configured to receive an image fidelity constraint from a vision application and cycle the stacked vision sensor between the CAP mode and the NSP mode based on the image fidelity constraint.",
                        "Another exemplary embodiment provides a method for thermally managing a vision system. The method includes receiving an indication of operating temperature for a stacked vision sensor. The method further includes transitioning the stacked vision sensor between a CAP mode and an NSP mode based on the operating temperature and an image fidelity constraint for the stacked vision sensor.",
                        "Another exemplary embodiment provides vision circuitry. The vision circuitry includes a stacked vision sensor, which includes a sensor element and a VPU. The vision circuitry further includes a runtime controller coupled to the stacked vision sensor and configured to dynamically manage a temperature of the stacked vision sensor by selectively offloading image processing from the VPU to a remote processing unit.",
                        "Those skilled in the art will appreciate the scope of the present disclosure and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "introduce fidelity-driven runtime thermal management",
                        "motivate near-sensor processing",
                        "describe thermal implications of near-sensor processing",
                        "propose thermal management control policies",
                        "describe runtime controller functionality",
                        "introduce vision system embodiment",
                        "introduce method for thermally managing vision system",
                        "introduce vision circuitry embodiment"
                    ],
                    "num_characters": 4136,
                    "outline_medium": [
                        "motivate near-sensor architectures",
                        "describe thermal implications of near-sensor processing",
                        "propose thermal management control policies",
                        "summarize embodiments of runtime controller"
                    ],
                    "outline_short": [
                        "summarize limitations of near-sensor processing",
                        "introduce fidelity-driven runtime thermal management"
                    ]
                },
                {
                    "title": "DETAILED DESCRIPTION",
                    "paragraphs": [
                        "The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the embodiments and illustrate the best mode of practicing the embodiments. Upon reading the following description in light of the accompanying drawing figures, those skilled in the art will understand the concepts of the disclosure and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.",
                        "It will be understood that, although the terms first, second, etc. may be used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first element could be termed a second element, and, similarly, a second element could be termed a first element, without departing from the scope of the present disclosure. As used herein, the term \u201cand/or\u201d includes any and all combinations of one or more of the associated listed items.",
                        "It will be understood that when an element such as a layer, region, or substrate is referred to as being \u201con\u201d or extending \u201conto\u201d another element, it can be directly on or extend directly onto the other element or intervening elements may also be present. In contrast, when an element is referred to as being \u201cdirectly on\u201d or extending \u201cdirectly onto\u201d another element, there are no intervening elements present. Likewise, it will be understood that when an element such as a layer, region, or substrate is referred to as being \u201cover\u201d or extending \u201cover\u201d another element, it can be directly over or extend directly over the other element or intervening elements may also be present. In contrast, when an element is referred to as being \u201cdirectly over\u201d or extending \u201cdirectly over\u201d another element, there are no intervening elements present. It will also be understood that when an element is referred to as being \u201cconnected\u201d or \u201ccoupled\u201d to another element, it can be directly connected or coupled to the other element or intervening elements may be present. In contrast, when an element is referred to as being \u201cdirectly connected\u201d or \u201cdirectly coupled\u201d to another element, there are no intervening elements present.",
                        "Relative terms such as \u201cbelow\u201d or \u201cabove\u201d or \u201cupper\u201d or \u201clower\u201d or \u201chorizontal\u201d or \u201cvertical\u201d may be used herein to describe a relationship of one element, layer, or region to another element, layer, or region as illustrated in the Figures. It will be understood that these terms and those discussed above are intended to encompass different orientations of the device in addition to the orientation depicted in the Figures.",
                        "The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the disclosure. As used herein, the singular forms \u201ca,\u201d \u201can,\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises,\u201d \u201ccomprising,\u201d \u201cincludes,\u201d and/or \u201cincluding\u201d when used herein specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.",
                        "Unless otherwise defined, all terms (including technical and scientific terms) used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure belongs. It will be further understood that terms used herein should be interpreted as having a meaning that is consistent with their meaning in the context of this specification and the relevant art and will not be interpreted in an idealized or overly formal sense unless expressly so defined herein.",
                        "Embodiments described herein include fidelity-driven runtime thermal management for near-sensor architectures. Vision processing on traditional architectures is inefficient due to energy-expensive off-chip data movements. Many researchers advocate pushing processing close to the sensor to substantially reduce data movements. However, continuous near-sensor processing raises the sensor temperature, impairing the fidelity of imaging/vision tasks. This disclosure characterizes the thermal implications of using three-dimensional (3D) stacked image sensors with near-sensor vision processing units (VPUs). The characterization reveals that near-sensor processing reduces system power but degrades image quality. For reasonable image fidelity, the sensor temperature needs to stay below a threshold, situationally determined by application needs. Fortunately, the characterization also identifies opportunities\u2014unique to the needs of near-sensor processing\u2014to regulate temperature based on dynamic visual task requirements and rapidly increase capture quality on demand. Based on the characterization, this disclosure proposes and investigates two thermal management control policies\u2014stop-capture-go and seasonal migration\u2014for imaging-aware thermal management. This disclosure presents parameters that govern the policy decisions and explores the trade-offs between system power and policy overhead. An evaluation shows that novel dynamic thermal management strategies can unlock the energy-efficiency potential of near-sensor processing with minimal performance impact, without compromising image fidelity.",
                        "In this regard, embodiments disclosed herein provide a runtime controller for controlling an operational mode of a vision or imaging system driven by fidelity demands. The runtime controller is responsible for guaranteeing the fidelity demands of a vision application and coordinating state transfer between operating modes to ensure a smooth transition. Under this approach, the vision application only needs to provide the runtime controller with high-level vision/imaging fidelity demands and when to trigger them. The runtime controller translates these demands into effective thermal management. To do this, the runtime controller applies application-specific requirements into appropriate policy parameters and activates temperature reduction mechanisms, such as clock gating and task offload. Furthermore, the runtime controller continuously adapts the policy parameters to situational settings, such as ambient temperature and ambient lighting, to meet ongoing fidelity demands.",
                        "As described further below with respect to FIGS. 2A-5, the thermal implications of using 3D stacked image sensors with near-sensor VPUs are characterized. In addition to confirming and modeling relationships between near-sensor processing power and sensor temperature, the characterization reveals a consequential insight: despite the long time constants for the sensor to settle to steady-state temperatures, removing near-sensor power from image capture systems results in an immediate and dramatic reduction in transient junction temperature of the sensor. For example, for a 2.5 watt (W) system, the sensor temperature drops by 13\u00b0 C. in 20 milliseconds (ms), when the processing is turned off. This stems from the high thermal capacitance of chip packaging and low thermal capacitance of the die. This immediate temperature drop is neglected by existing dynamic thermal management approaches, whose primary aim is to confine chip temperature below an emergency limit. However, as reducing transient temperature raises sensing fidelity, this observation allows on-demand high-fidelity capture.",
                        "With respect to FIGS. 6 and 7 below, imaging-specific control policies for thermal management are described which build on characterized challenges and opportunities. Two exemplary thermal management control policies are described\u2014stop-capture-go and seasonal migration\u2014for effective near-sensor vision processing that minimizes system energy consumption and affords performance computation and high fidelity capture. Stop-capture-go suspends the processing briefly to allow for a high fidelity capture and resumes the processing after the capture. On the other hand, seasonal migration occasionally shifts processing to a thermally isolated far-sensor processing unit for high fidelity capture. A runtime controller (also referred to herein as Stagioni) is described which orchestrates the temperature management for near-sensor processing.",
                        "An exemplary embodiment of the disclosure is further described with respect to FIGS. 8A-8B below. The effectiveness of the control policies are evaluated for managing sensor temperature to suit imaging needs with respect to FIGS. 9A-10B below. The robustness of exemplary embodiments in smoothly handling the dynamic fidelity needs is also demonstrated.",
                        "Enabling high performance and high efficiency near-sensor processing with the embodiments described herein can unlock the potential for several vision/imaging applications, including sophisticated dashboard cameras, continuous augmented reality tracking, and other futuristic use cases. Throughout this disclosure, the implications of near-sensor processing are studied and the policies are evaluated around a lifelogger case study, in which a wearable life-logger device chronicles important events and objects in a user's life. The life-logger device runs object detection and tracking algorithms to continuously determine objects in a scene surrounding the user and track those objects. Meanwhile, the life-logger device performs occasional captures upon detecting any important event (e.g., a person entering the scene). This can form the basis for personalized real-world search engines, and assist those with memory impairments or visual impairments.",
                        "With reference to FIGS. 2A-5, the thermal implications of using 3D stacked vision sensors 20 with near-sensor VPUs 22 are characterized. In particular, the relationship of near-sensor processing with system energy, sensor element 14 temperature, and image noise is studied. The studies confirm that near-sensor processing minimizes off-chip data movements, thereby substantially reducing system power. With near-sensor processing in this case study, the system power of residual neural network (ResNet)-based classification can be reduced by 36%.",
                        "In addition, near-sensor processing power is related to image fidelity through temperature simulation, confirming that image fidelity degrades over time with additional near-sensor processing power. However, it is also observed that removal of near-sensor processing power favorably leads to rapid drops in sensor element 14 temperature, reducing sensor element 14 temperature by 13\u00b0 C. in 20 milliseconds (ms). This observation can be exploited to allow the sensor to operate at higher temperatures and lower image fidelities for energy-efficient vision (e.g., continuous object detection), while immediately switching to low temperature operation for high-fidelity image capture when an application needs high quality imaging (e.g., photographing a particular object).",
                        "As described above with respect to FIGS. 1A and 1B, near-sensor processing reduces energy-expensive data movement across the lengthy interconnects between different chips. The traditional vision system 10 of FIG. 1A includes a pipeline operating across chips to connect a variety of subsystems: a camera chip 26 (including the sensor element 14), a processing unit (e.g., a system-on-chip (SoC) 28), and memory 24. The camera chip 26 connects to processing units on the SoC 28 through interconnects 16, such as a standard camera serial interface (CSI) for data transfer and an inter-integrated circuit (I2C) interface for control and configuration. Meanwhile, the SoC 28 uses the memory 24, such as dynamic random-access memory (DRAM), through an external interface 30 (e.g., a double data rate (DDR) interface) to buffer image frames for processing.",
                        "Using regression models on measurements and reported values, a coarse energy profile model is constructed to motivate the need for near-sensor processing. As shown in Table 1, sensing, processing, and storage consume energy on the order of 100s of picojoules (pJ) per pixel. On the other hand, communication interfaces draw more than 3 nanojoules (nJ) per pixel.",
                        "Sensing requires an energy of 595 pJ/pixel, mostly drawn from three components: pixel array, read-out circuits, and analog signal chain, which consume 25 pJ/pixel, 43 pJ/pixel, and 527 pJ/pixel, respectively. DRAM storage on standard mobile-class memory chips (e.g., 8 Gb, 32-bit LPDDR4) draws 677 pJ/pixel for writing and reading a pixel value. This roughly divides into 283 pJ/pixel for reading and 394 pJ/pixel for writing. Communication over CSI and DDR interfaces incur 3.7 nJ/pixel, mostly due to operational amplifiers on both transmitter and receiver. The interface power consumption is measured on 4-lane CSI interfaces and LPDDR4 interfaces by inputting several data rates. From this information, a linear-regression model is constructed to estimate the energy per pixel to be 0.9 nJ/pixel over CSI and 2.8 nJ/pixel over DDR. For computation, reported power consumptions of various convolutional neural network (ConvNet) architectures are gathered from the literature.",
                        "For example, when operating at full high definition (HD) (1920\u00d71080) at 30 frames per second (fps), and using residual neural network (ResNet) for inference on the SoC 28 at 30 fps, a modeled traditional vision system 10 uses 4 W of power. On the other hand, increasing the framerate to 60 fps demands 10 W of power on a field programmable gate array (FPGA). It should be understood that this energy model provides coarse estimation; actual numbers may depend on architectural decisions, patterns of execution, and several other factors. For further examples, Table 3 below compares power estimates of several example systems with embodiments of the present disclosure.",
                        "With reference to FIG. 1B, on-chip data movement is known to be significantly more efficient than off-chip data movement by six orders of magnitude. The near-sensor vision system 18 leverages this insight for energy-efficiency gains. Near-sensor processing moves the memory 24 into the 3D stacked vision sensor 20 to eliminate offchip DDR movement, and moves the VPU 22 into the 3D stacked vision sensor 20 to reduce the CSI interface data rate. Thus, the output of the 3D stacked vision sensor 20 can be reduced from a few megabytes (MB) to a few bytes. This information can be sent across efficient low data rate interconnects 16 (e.g., I2C). Altogether, when applying these energy profile models to the processing pipeline of the near-sensor vision system 18, a full HD near-sensor vision system 18 consumes 2.5 W, thereby yielding 36% savings over traditional architectures.",
                        "FIG. 2A is a schematic diagram of an exemplary 3D stacked vision sensor 20 package. The 3D stacked vision sensor 20 can be implemented in the near-sensor vision system 18 of FIG. 1B. Inside the 3D stacked vision sensor 20 package, a stack 32 includes sensor element 14, memory 24, and VPU 22 layers stacked on top of each other (e.g., with the sensor element 14 over the memory 24, and the memory 24 over the VPU 22). The sensor element 14, memory 24, and VPU 22 can be connected to each other using through-silicon vias (TSVs) 34. The top of the stack 32 opens to the surroundings through microlenses 36, while the bottom of the stack 32 sits on a substrate 38 that opens to a circuit assembly 40. The circuit assembly 40 can be a printed circuit board (PCB), and can connect to components of the stack 32 through solder balls 42 or another conductive element.",
                        "Though tight integration yields energy-efficiency and performance benefits, near-sensor processing in the 3D stacked vision sensor 20 generates heat at the sensor element 14 through thermal coupling between the tightly integrated components of the stack 32. Dynamic thermal management for many processors, such as a central processing unit (CPU), is only concerned with keeping the maximum temperature below a thermal design power (TDP), but embodiments disclosed herein give close attention to temperature patterns, as the transient temperature affects image fidelity.",
                        "FIG. 2B is a schematic diagram of an equivalent thermal resistance-capacitance (RC) model 44 of the 3D stacked vision 20 sensor package of FIG. 2A. Conduction is the dominant heat transfer mechanism in integrated circuits. Mobile class image sensors, such as the 3D stacked vision sensor 20, omit heat sinks or cooling fans, due to their size, weight, and placement challenges. The sensor element 14, memory 24, and VPU 22 consume power when active, which dissipates as heat. To model temperature dynamics, thermal RC modeling techniques are used to determine the thermal characteristics of the 3D stacked vision sensor 20. Vertical heat transfer is primarily considered; vertical resistances are several orders of magnitude smaller than the lateral resistances of convective heat transfer. Component values of the layers are obtained through a mixture of analytical and empirical approaches.",
                        "Table 2 shows different RC component values derived for the thermal RC model 44. Previous works report layer dimension values of typical 3D stacked vision sensors 20. In these works, the layer thickness ranges in the order of a few microns to 10s of microns, while the layer's area ranges from 10s of mm2 to 100s of mm2. The international technology roadmap for semiconductors (ITRS) provides layer dimensions and material property constants \u03c1 and c to define the guidelines for semiconductor fabrication. From these, the thermal resistance can be derived as R=\u03c1t/A and thermal capacitance as C=ctA where A is the layer's cross sectional area and t is the thickness.",
                        "Package capacitance can be deduced empirically by observing the temperature trace of an image sensor chip while subjecting the sensor element 14 to thermal stress. Regression models are constructed from the temperature trace of an OnSemi AR0330 smartphone-class image sensor to derive package capacitance, as an example. Finally, termination thermal resistance depends on the type of casing and board properties. Sensor companies make these values available through datasheets. Such provided values for typical packages are used directly in this model.",
                        "It should be noted that off-sensor power generally does not affect sensor element 14 temperature. While processing far from the sensor element 14, the off-sensor SoC 28 components of FIG. 1B do not influence the sensor element 14 temperature. Even in tightly integrated mobile systems, (e.g., smartphones) the sensor element 14 and the SoC 28 reside on two different boards and communicate over a ribbon cable (e.g., the interconnect 16). As a result, the sensor element 14 and the SoC 28 are nearly in thermal isolation. That is, any increase in temperature of one component will not cause appreciable change in temperature of the other. This effect is verified by running a CPU-bound workload on the SoC 28 on a smartphone while keeping the camera idle. The instruments do not report any rise in sensor element 14 temperature with rise in SoC 28 temperature. Thus, in the study, thermal coupling effects from off-sensor components are not considered.",
                        "FIG. 3A is a graphical representation of temperature measurements of the sensor element 14 junction and the 3D stacked vision sensor 20 package of FIGS. 2A-2B due to near-sensor power consumption. Through simulation on the RC model 44, the thermal behavior of near-sensor processing architectures is estimated. Temperature profiles are evaluated as the 3D stacked vision sensor 20 operates in two different modes: near-sensor processing (NSP) mode, in which power consumptions are representative of capturing image frames and processing vision workloads near the sensor element 14, and capture (CAP) mode, in which power consumptions are representative of capturing image frames and transmitting frames to a remote processing unit (e.g., the SoC 28). With various execution patterns, the thermal behavior of the sensor element 14 can be simulated as the 3D stacked vision sensor 20 operates among different sensor modes.",
                        "Previous analysis has reported that spatial variations in temperature can be safely ignored if the chip power density is within 20 W/cm2, as is the case in NSP mode. Power density, which is the power dissipated over chip area, measures the degree of spatial non-uniformities in temperature. The physical dimensions of the 3D stacked vision sensor 20 combined with the power profile of the case study results in a power density of 16 W/cm2. Therefore, the spatial variations of temperature inside the stack are not considered for modeling near-sensor processing architectures.",
                        "Steady-State Temperature:",
                        "Inter-layer resistances are at least two orders of magnitude smaller than termination resistances. This results in negligible drop across the resistor, leading to minuscule temperature gradients among a layer. For example, for 1 W of VPU 22 power, the sensor element 14, the memory 24, and the VPU 22 will be at 60.7\u00b0 C., 60.9\u00b0 C., and 61.0\u00b0 C., respectively. Thus, the layers can be combined and the temperature of the sensor element 14 can be treated as a single junction. Consequently, termination resistance largely influences the sensor element 14 junction's steady-state temperature.",
                        "In addition to resistances, power consumption plays a crucial role in deciding steady-state. High power dissipates more heat in the physical structures resulting in a hotter sensor element 14 junction. Conversely, low power consumption relieves the heat generation, allowing for a drop in steady-state temperature. Reducing near-sensor power consumption from 1 W to 100 mW results in a temperature drop of 5\u00b0 C. Finally, a higher ambient temperature leads to raised steady state temperatures.",
                        "Transient temperature: Thermal dynamic time constants govern the transient temperature of the 3D stacked vision sensor 20. As chip package capacitance is several orders of magnitude greater than die capacitance, the chip package time constant dominates the time constant of the overall approach to steady-state temperature, taking 10s of seconds to reach a steady state temperature. This allows dynamic temperature management policies ample time to form decisions, e.g., altering steady state temperature by changing near-sensor power draw.",
                        "As illustrated in FIG. 3A, near-sensor power consumption raises a transient temperature 46 of the sensor element 14 die above a package temperature 48. This is because the heat source is on the sensor element 14 die itself, dissipating heat through the package into the ambient environment. Consequently, reducing power consumption rapidly reduces the gap between the sensor element 14 die transient temperature 46 and the package temperature 48. The speed of this drop is governed by the sensor element 14 junction die time constant, which is on the order of milliseconds.",
                        "FIG. 3B is an expanded view of the graphical representation of FIG. 3A, further illustrating the temperature drop due to reduced power consumption. Because the transient temperature 46 affects image fidelity, rapid temperature drops\u2014such as the charted 13\u00b0 C. drop in 20 ms\u2014provide unique opportunities for dynamic thermal management for on-demand image sensor fidelity. This is discussed in more detail below with respect to FIGS. 6 and 7.",
                        "FIG. 4 is a graphical representation of a thermal characterization 50 of an example sensor element 14, illustrating noise sensitivity to temperature, exposure, and ISO. While raised temperatures cause reliability and packaging issues for integrated circuits, they introduce another problem for image sensors: noise. The influence of noise on vision tasks has been widely reported. It has been found that neural networks have difficulty predicting semantics of an image when challenged by different types of image noise. Similar findings indicate that image classification accuracy generally degrades with increase in temperature/noise. Thus, reliable vision demands images of reasonable fidelity.",
                        "Images for human consumption further raise the fidelity bar for imaging needs; high fidelity is often needed in many real-life scenarios. For example, if a set of dashcam images is to be used in an auto insurance claim, the images need to have superior quality to obtain maximal information to make decisions on benefits. While denoising can help mitigate fidelity issues, denoising algorithms often create imaging artifacts which can also impair perceived image quality. Thus, as images are required to accurately represent the real physical world, imaging fidelity needs are even more stringent than other vision-based needs.",
                        "The sources of image noise are theoretically well understood. However, to understand the practical relationship between temperature and image quality on commercial sensors, the thermal characterization 50 is performed on the sensor element 14, in this example a 3 megapixel (MP) OnSemi AR0330 sensor connected to a Microsemi SmartFusion2 FPGA. The AR0330 sensor includes noise correction stages inside the sensor, as is common in commercial sensors. A heat gun is used to raise the sensor element 14 temperature and capture raw images in a dark room setting while the sensor element 14 temperature is monitored with a FLIR One thermal camera.",
                        "FIG. 4 charts a trend: sensor elements 14 are particularly susceptible to noise above a particular temperature value. This is despite the presence of noise correction stages inside the sensor. The correction blocks could bring the noise under control but only for lower temperature settings. For high temperatures, the denoising appears to fail to exercise control on noise minimization. Notably, this knee shifts with exposure and analog gain settings, presumably due to noise amplification. For instance, at high exposure and high analog gain, which correspond to low light situations, sensor elements 14 start to become thermally sensitive even at low temperatures, e.g., 52\u00b0 C. To adapt to all experienced conditions, the thermal management of the 3D stacked vision sensor 20 should be adaptive to the varying needs of different lighting conditions.",
                        "Thermal noise is visibly apparent on images, whether in low light or bright light conditions. For example, FIG. 5A is an image of a scene 52 captured with the sensor element 14 at 44\u00b0 C. FIG. 5B is an image of the scene 52 of FIG. 5A captured with the sensor element 14 at 92\u00b0 C. Each of these images was captured under daylight conditions at the respective sensor element 14 temperatures. Graininess in the hotter image of FIG. 5B can be observed due to the strong influence of noise.",
                        "FIG. 5C is a graphical representation of histograms for the images of FIGS. 5A and 5B. Paired with the noisy images, the histograms represent the pixel intensity distribution of an image. The wider peaks in the distribution signify the variance of pixel intensity, while the mean of the peaks represent average pixel intensity. The histogram of the hotter image (e.g., FIG. 5B) shifts to the right, increasing pixel intensity due to dark current. In addition, the variance of the pixel intensity increases, due to increased thermal noise.",
                        "To summarize, the following insights can be drawn for near-sensor processing:\n\n\n- - Near-sensor processing architectures promote system\n    energy-efficiency, but also increase sensor element **14**\n    temperature.\n  - Raised sensor element **14** temperatures aggravate thermal noise.\n  - Transient sensor element **14** junction temperatures crucially\n    determine fidelity.\n  - Smaller (ms) sensor element **14** junction time constants\n    facilitate immediate drop in temperature allowing on-demand high\n    fidelity.\n  - Fidelity needs are highly dynamic, depending on environmental\n    factors such as lighting and ambient temperature.\n  - Imaging demands more fidelity than other vision applications.",
                        "These observations motivate the need for novel dynamic thermal management strategies for near-sensor processing at sufficient vision and imaging fidelity.",
                        "With reference to FIGS. 6 and 7, imaging-specific control policies for thermal management can build on these characterized challenges and opportunities. The characterization described above shows that near-sensor processing increases system energy efficiency, but sacrifices image fidelity due to raised sensor element 14 temperatures. This raises a natural question: Can near-sensor processing be leveraged to create efficiency benefits while maintaining sufficient image fidelity for vision and imaging tasks? Driven by this, an exemplary aspect disclosed herein applies novel control policies that can efficiently regulate sensor element 14 temperature for continuous and on-demand image fidelity needs. These control policies can be governed by a runtime controller, which is referred to herein as Stagioni.",
                        "Dynamic thermal management (DTM) for microprocessors is a mature research area. However, traditional processor DTM mechanisms are not designed to suit imaging needs. Rather than simply being limited by TDP, image fidelity is impaired by the immediate transient sensor element 14 temperature during image capture. Furthermore, thermal management for near-sensor processing should adapt to the situational needs of the vision/imaging application, such as by allowing higher temperatures when in brighter environments and rapidly dropping temperature when high fidelity is required.",
                        "To account for near-sensor processing temperature management, an exemplary aspect modifies traditional DTM techniques to introduce two potential control policies that quell image quality concerns, while striving to optimize for system power and performance. The first exemplary control policy, stop-capture-go, temporarily halts near-sensor processing for temperature regulation and on-demand high fidelity capture. The second exemplary control policy, seasonal migration, occasionally migrates the processing to a thermally isolated remote processing unit (e.g., SoC 28) for temperature regulation and on-demand high fidelity captures.",
                        "Principles for Managing Sensor Temperature:",
                        "To design control policies for thermal management that are effective for near-sensor processing, three core principles are introduced. Under the first principle, situational temperature regulation, the control policy should confine sensor element 14 temperature within a threshold that suffices for imaging fidelity needs. Under the second principle, on-demand fidelity, upon application request the control policy should quickly drop the temperature to a desired capture temperature for high fidelity imaging. Under the third principle, system power minimization through duty cycle, the duty cycle governs system efficiency. These principles are discussed in more detail below.",
                        "As discussed above, vision tasks have varying fidelity needs, which are sensitive to camera settings (e.g., ISO and exposure) and lighting situation (e.g., bright conditions). This translates directly to temperature requirements, resulting in a simple upper bound:",
                        "Tsensor<Tvision\u2003\u2003Equation 1",
                        "Thus, temperature management must be cognizant and respectful of immediate vision task requirements in situational conditions to provision for effective vision accuracy.",
                        "While vision processing can operate on low fidelity images, certain applications may require high fidelity images on demand, such as life logging capture after object detection. Such capture must be immediate, before the object leaves the view of the camera. Fortunately, as characterized above with respect to FIGS. 3A and 3B, sensor element 14 temperature rapidly drops with the removal of near-sensor power, such as by entering CAP mode. For example, when the 3D stacked vision sensor 20 drops its near-sensor power consumption from 2.5 W to 100 mW the sensor element 14 drops in temperature by 13.2\u00b0 C. The time it takes the temperature to reduce by 98% of the drop is defined as timejump=4\u00d7RCdie. In some examples, the timejump amounts to 20 ms. Temperature management can leverage this drop to provision for on-demand high fidelity.",
                        "This temperature drop is directly proportional to the disparity between the near-sensor power before and after power reduction: Tjump=\u03b1(PNSP\u2212PCAP). For a modeled 3D stacked vision sensor 20, it is experimentally found that every 1 W of power causes a 5.5\u00b0 C. temperature jump (e.g., \u03b1=5.5\u00b0 C./W). When constrained by a latency deadline (e.g., to immediately capture a moving object or to meet a synchronization deadline), the achievable jump within the latency deadline is a fraction of the time it takes to drop: Tjumplatency=Tjump\u00d7(e\u2212t/RC). Thus, to provision for predicted fidelity needs and latency needs of an application, the temperature management control policy can set reduced bounds:",
                        "Tsensor<Timaging+Tjumplatency\u2003\u2003Equation 2",
                        "FIG. 6 is a graphical representation of power consumption 54 of an exemplary embodiment at various duty cycles between NSP mode and CAP mode. While removal of processing power from the 3D stacked vision sensor 20 can effectively regulate temperature and provide on-demand high fidelity captures, the scheduling of operations should also strive to optimize for average system power. This can be characterized through the duty cycle and frequency of switches between the NSP and CAP modes. For duty cycle d, switching frequency fswitch and energy per switch Eswitch, average system power can be modeled as:",
                        "Pavg=d\u00d7PNSPsystem+(1\u2212d)\u00d7PCAPsystem+fswitch\u00d7Eswitch\u2003\u2003Equation 3",
                        "In minimizing average power, there is a notable tradeoff between the duty cycle and the frequency of switches. Spending more time in CAP mode allows the sensor element 14 to cool down, as does decreasing the length of time spent in NSP mode. This can also reduce the number of switches. On the other hand, spending less time in CAP mode allows the 3D stacked vision sensor 20 to spend a greater proportion of time in NSP mode, promoting energy savings through the duty cycle, at the expense of a larger number of switches. Notably, the time spent in each mode must be a multiple of the time spent capturing an image. In some cases it may not possible to switch to CAP mode for a partial frame duration while an image is being captured. As shown in FIG. 6, for this implementation, which has minimal switching overhead, higher duty-cycles tend to provide favorable average system power profiles.",
                        "Stop-Capture-go for Near-Sensor Processing:",
                        "The traditional stop-go DTM technique regulates processor temperature by halting execution through clock gating. For near-sensor processing, the 3D stacked vision sensor 20 can be similarly placed in CAP mode, gating near-sensor units for some time before resuming NSP mode. The resulting \u201ctemporal slack\u201d allows the 3D stacked vision sensor 20 to regulate capture fidelity at the expense of task performance. Stop-go techniques are architecturally simple, requiring only the ability to gate (e.g., enable and disable) the clock or power of various components.",
                        "Unlike traditional stop-go, the proposed stop-capture-go policy requires unique modifications to be sensitive to near-sensor processing tasks. First, frequently clock gating the entire 3D stacked vision sensor 20 is not advisable: interruptions to the camera pipeline create substantial capture delays on the order of multiples of frames. Instead, the system will clock gate (e.g., disable a system clock) the near-sensor VPU 22 and memory 24, placing the 3D stacked vision sensor 20 into CAP mode. Second, rather than being governed by TDP, the temperature regulation will trigger as the sensor element 14 reaches a situational upper bound specified by the principles, such that Tsensor<Tvision and Tsensor<Timaging+Tjumplatency. Third, the execution halt can be triggered by the controller to achieve on-demand fidelity upon application request. For this, the 3D stacked vision sensor 20 simply enters CAP mode to retrieve the requested frame.",
                        "The amount of \u201cstop\u201d time (the amount of time the processor is halted) is an important policy parameter under stop-capture-go. During the stop time, the system will \u201cdrop\u201d frames, failing to process them. Elongated stop times allow a sensor element 14 to cool down further, which reduces the number of switches. For vision tasks, stop times can be detrimental, as contiguously dropped frames may contain important ephemeral visual information. Thus, if a system wishes to prioritize a continuity of visual information, stop time should be reduced. In the simulated study, it is found that the minimal stop time of 33 ms (one frame time) is sufficient to cool down the sensor element 14 from 87\u00b0 C. to 74\u00b0 C., enabling sufficient continuous temperature regulation and on-demand fidelity.",
                        "Due to the architectural simplicity of the stop-capture-go policy, the system overhead is minimal, promoting a continuously low system power. However, frequent frame drops will impair the visual task performance. Thus, stop-capture-go is suitable for systems that demand low power but are not performance-critical and/or systems that require minimal architecture modifications.",
                        "Seasonal Migration:",
                        "While stop-capture-go is a simple policy for temperature regulation and high-fidelity captures, it degrades application performance by halting execution. Towards minimizing performance loss, seasonal migration for near-sensor processing is investigated. The seasonal migration policy shifts the processing to a thermally isolated computational unit, allowing continuous computing. As modeled above, spatial thermal isolation between the 3D stacked vision sensor 20 and a remote processing unit (e.g., SoC 28) allows thermal relief. Enabling seasonal migration comes at the expense of duplicated computational units near to and far from the sensor element 14, but effectively regulates sensor element 14 temperature without sacrificing task performance.",
                        "FIG. 7 is a graphical representation of a transient response 56 of the seasonal migration policy with a 77% duty cycle to confine sensor element 14 temperature within thermal boundaries. As illustrated in FIG. 7, the process for seasonal migration is governed by two temperature limits: Thigh and Tlow. In an efficiency phase, triggered when the sensor element 14 reaches a temperature below Tlow, the 3D stacked vision sensor 20 will enter NSP mode, performing near-sensor processing for system efficiency. In a cooling phase, triggered when the 3D stacked vision sensor 20 reaches a temperature above Thigh, the 3D stacked vision sensor 20 will enter CAP mode, performing off-sensor processing on the remote processing unit (e.g., SoC 28), allowing the sensor element 14 to cool down. The alternation between these phases allows the system to balance efficiency with sensor element 14 temperature. For on-demand fidelity, the system simply enters the cooling phase regardless of current sensor element 14 temperature.",
                        "Thigh and Tlow are important policy parameters for the seasonal migration policy, controlling the balance of efficiency and temperature. Thigh forces the sensor element 14 temperature regulation, and thus should be set to shift to situational needs:",
                        "Thigh=min(Tvision,Timaging+Tjumplatency)",
                        "Meanwhile, the gap between Thigh and Tlow controls the system efficiency implications of the policy. Because it takes more time for the sensor element 14 temperature to bridge a larger gap, larger gaps decrease the frequency of switches, while smaller gaps increase the frequency of switches. The Thigh\u2212Tlow gap also controls the duty cycle of the system. When the desired sensor element 14 temperature range is closer to steady-state NSP temperature than steady-state CAP temperature, smaller gaps produce favorable duty cycles, spending more time in NSP mode. A shown in Equation 3 above, the average system power is a function of this duty cycle, balanced against the energy overhead and frequency of switches. Thus, Tlow should be chosen to create a gap that optimizes average system power.",
                        "As defined earlier, the duty cycle is the proportion of time spent in NSP mode. For the seasonal migration policy, the relationships can be derived from standard charging models. After the rapid drop or rise in temperature Tjump, which takes approximately timejump amount of time, the 3D stacked vision sensor 20 follows an RC charging curve towards the steady state temperature of the NSP or CAP mode. Altogether, this can be used to analytically model duty cycle d and frequency of migration fmigration.",
                        "\\(\\begin{matrix}\n{{time}_{warming} = {{{RC} \\times {\\ln \ue8a0\\left( \\frac{T_{steady}^{NSP} - \\left( {T_{low} + T_{jump}} \\right)}{T_{steady}^{NSP} - T_{high}} \\right)}} + {time}_{jump}}} & {{Equation}\ue89e\\mspace{14mu} \ue89e4} \\\\\n{{time}_{cooling} = {{{RC} \\times {\\ln \ue8a0\\left( \\frac{\\left( {T_{high} - T_{jump}} \\right) - T_{steady}^{CAP}}{T_{low} - T_{steady}^{CAP} - T_{jump}} \\right)}} + {time}_{jump}}} & {{Equation}\ue89e\\mspace{14mu} \ue89e5} \\\\\n{\\mspace{79mu} \ue89e{d = {{time}_{warming}\ue89e\\text{/}\ue89e\\left( {{time}_{warming} + {time}_{cooling}} \\right)}}} & {{Equation}\ue89e\\mspace{14mu} \ue89e6} \\\\\n{\\mspace{79mu} \ue89e{f_{migration} = {2\ue89e\\text{/}\ue89e\\left( {{time}_{warming} + {time}_{cooling}} \\right)}}} & {{Equation}\ue89e\\mspace{14mu} \ue89e7}\n\\end{matrix}\\)",
                        "Depending on implementation, the seasonal migration policy could suffer from switching latency and energy overhead resulting from state transfer and synchronization in shifting processing from one computational unit to another. However, reducing this migration overhead is a well-studied problem in distributed systems. Several reported techniques mitigate migration latency (e.g., pre-copy-based migration), which promote smooth execution performance while incurring energy overhead by keeping both computational units on while preparing for migration. Similarly, in this implementation, prior to migration, the system is prepared by preemptively starting up the target computational unit and initiating its context so it is prepared for execution.",
                        "FIG. 8A is a schematic diagram of an exemplary near-sensor vision system 58 which includes a Stagioni runtime controller 60 for ensuring image fidelity. The near-sensor vision system 58 is similar to the near-sensor vision system 18 of FIG. 1B, with the 3D stacked vision sensor 20 connected to and thermally isolated from a remote processing unit (e.g., the SoC 28).",
                        "An exemplary aspect proposes the Stagioni runtime controller 60 to execute the control policies at runtime. The runtime controller 60 is responsible to guarantee the fidelity demands of the application, coordinating state transfer between the operating modes of the 3D stacked vision sensor 20 to ensure smooth transition. The runtime controller 60 could be designed in a multitude of ways, e.g., a dynamically linked library, a runtime operating system (OS) service, or dedicated hardware. In an exemplary aspect, the runtime controller 60 is a runtime OS service that sits on the VPU 22 and/or the memory 24, allowing the remote processing unit (e.g., the SoC 28) to sleep. In some examples the VPU 22 also hosts the application context, though this is not required. Many existing migration controller designs would sufficiently and equivalently serve the purposes of decision-making. An exemplary set of modules that would achieve the goals is described below. Different aspects are discussed, including how the runtime controller 60 receives application inputs to meet fidelity demands.",
                        "Application Programming Interface (API) for Application-Specific Fidelity Needs:",
                        "A vision application only needs to provide three pieces of information to the controller: (1) continuous image fidelity requirement for vision, (2) on-demand image fidelity requirement for imaging, and (3) when to trigger on-demand fidelity. A simple API can enable developers to specify requirements from their applications. For example, a class may include the following methods:\n\n\n- - setVisionSNR(float): specify continuous fidelity\n  - setImagingSNR(float): specify on-demand fidelity\n  - triggerOnDemandFidelity( ): request high fidelity",
                        "The Stagioni runtime controller 60 translates expectations into effective thermal management, sidestepping any form of developer burden. To do this, the runtime controller 60 applies application-specific requirements into appropriate policy parameters through characterized device models. The runtime controller 60 also continuously adapts the policy parameters to situational settings, i.e., ambient temperature and ambient lighting, to meet ongoing quality requirements.",
                        "For example, based on a lower image fidelity requirement, the runtime controller 60 can operate in the NSP mode during at least a portion of an image capture operation (e.g., performing a vision task, capturing one or more images, capturing a video, etc.), up to operating at full NSP duty cycle during the image capture operation. However, during a subsequent image capture operation (e.g., capturing a higher quality image) the runtime controller 60 can receive a higher fidelity constraint from the vision application. This higher fidelity constraint can cause the runtime controller 60 to reduce the NSP duty cycle, or it may cause the 3D stacked vision sensor 20 to operate in the CAP mode throughout the subsequent image capture operation.",
                        "The runtime controller 60 orchestrates the execution pattern in runtime, which consists of several system-level events. For the stop-capture-go policy, the runtime controller 60 would use simple power gating mechanisms such as clock gating. For the seasonal migration policy, the runtime controller 60 would handle the communication between two chips (e.g., the VPU 22 and the SoC 28).",
                        "To this end, the runtime controller 60 can use simple message passing schemes to synchronize states between the 3D stacked vision sensor 20 and the host (e.g., the SoC 28). An exemplary scheme operates as follows: (i) The sensor element 14 temperature monitor detects a thermal trigger and raises an interrupt. (ii) The runtime controller 60 sends a signal to the remote processing unit (e.g., the SoC 28) controller to prepare for migration. (iii) In return, the remote processing unit controller starts the application and sends an acknowledgement to the source conveying that it is ready to accept the tasks. (iv) The runtime controller 60 then transfers application context data from the source's memory 24 to the host's memory (e.g., memory in or connected to the SoC 28). (v) Once the data transfer is done, both migration handlers notify their corresponding applications. The offloaded tasks can now run in the new context loading the state from the memory. This sequence of steps can be scheduled prior to the migration event, such that immediate migration is possible.",
                        "FIG. 8B is a flow diagram illustrating an exemplary process 800 for thermally managing a vision system. The process 800 begins at operation 802, with receiving an indication of operating temperature for a stacked vision sensor. The process 800 further includes operation 804, with transitioning the stacked vision sensor between the CAP mode and the NSP mode based on the operating temperature and an image fidelity constraint for the stacked vision sensor. The image fidelity constraint can be received form a vision application, as described above.",
                        "Exemplary control policies for the Stagioni runtime controller 60 have been implemented through simulation and emulation. The simulation framework is built around the characterized energy, noise, and thermal models described above. The simulation tool operates on these models and reports system metrics such as average system power, performance for different policy schedules. To practically realize the policies, an emulation platform is built around an FPGA. Stagioni is designed and implemented as a runtime controller 60 and integrated into the system to study execution patterns of different control policies.",
                        "Simulation Framework:",
                        "The simulation framework is built as a tool. The tool can be used to evaluate the thermal, energy, and noise of the near-sensor vision system 58 with the 3D stacked vision sensor 20 on the proposed control policies across a range of workloads. The tool takes device models and policy details as inputs and provides different system metrics as outputs while running sensor-driven applications. Users may wish to override default characterization models to suit their needs. In this case, users can provide vision task, camera settings, thermal policies to apply, and the desired capture temperature for images. The tool solves for the policy parameters such as rise and fall times that govern the control policies. Finally, the tool generates the temperature and fidelity traces and also reports the power and performance of the system.",
                        "Emulation Framework:",
                        "In addition to the simulation tool, an FPGA-based emulation platform is built on two ZCU102 boards. One of them emulates the 3D stacked vision sensor 20, while the other emulates the remote processing unit (e.g., the SoC 28). A 1 gigabit per second (Gbps) Ethernet is used for communication, simulating a standard CSI interface that has similar bandwidth characteristics.",
                        "Stagioni is designed around the CHaiDNN library. The Stagioni runtime controller 60 takes the type of control policy and its associated parameters as inputs. The parameters then generate a mode schedule that governs the task execution in runtime. The runtime controller 60 also handles high fidelity capture requests and services them to deliver high quality images through appropriate mechanisms. For the stop-capture-go policy, the execution of the neural network invocation is gated. For the seasonal migration policy, message passing over Ethernet is performed for state transfer and producer-consumer queues are implemented for synchronization.",
                        "With reference to FIGS. 9A-10B, the effectiveness of the control policies (e.g., stop-capture-go and seasonal migration) are evaluated for meeting fidelity demands while performing vision tasks of the case study. The near-sensor vision system 58 implementing these control policies can deliver up to 36% savings in average system power compared to the traditional vision system 10 with far-sensor processing (referred to as a full-far policy herein), for the case study. The savings primarily stem from maximizing near-sensor task operation. Furthermore, the savings varies with the fidelity requirements of the application. The policies achieve the savings by incurring a latency overhead of only 100 \u03bcs, which is negligible in comparison to ms-scale image capture times.",
                        "To evaluate different system metrics, the simulation and emulation frameworks described above are used.",
                        "Vision Tasks:",
                        "Image classification for the vision task is studied, identifying objects in a scene. The control policies are evaluated on the GoogLeNet ConvNet, modified to use 16-bit quantized weights for efficiency. In addition, the control policies are evaluated on other vision tasks, such as you only look once (YOLO)-based object detection with identical findings, omitted for brevity.",
                        "Metrics and Policies:",
                        "The major objective for evaluating a control policy is: effectiveness in regulating sensor element 14 temperature for capture fidelity, while optimizing power of the near-sensor vision system 58 with minimal performance overhead. Signal-to-noise ratio (SNR) is used to gauge image quality and frame drops for performance overhead. In addition to the stop-capture-go policy and seasonal migration policy, a full-far policy (the status quo) is considered for comparison.",
                        "Environment Conditions:",
                        "A wide range of lighting conditions are evaluated, from bright outdoor to dark indoor environments. Such lighting translates into different camera settings (e.g., exposure and ISO). The flexible CapraRawCamera camera app is used to automatically determine appropriate camera settings based on the scene lighting. The following camera settings for three sensor illuminations are used.",
                        "Outdoor daylight (32000 lux): Exp.=16 ms, ISO=100",
                        "Indoor office light (320 lux): Exp.=32 ms, ISO=400",
                        "Dimly lit office light (3.2 lux): Exp.=64 ms, ISO=800",
                        "For evaluating ambient temperature effects, a 20\u00b0 C. to 40\u00b0 C. range is used, representing cool indoor to hot outdoor situations.",
                        "FIGS. 9A and 9B illustrate power impact of the stop-capture-go, seasonal migration, and full-far policies. The stop-capture-go and seasonal migration policies substantially reduce system power compared to the full-far policy (status quo). Average system power largely depends on duty cycle. Naturally, maximal power savings can be obtained by operating at a maximum duty cycle. However, the achievable duty cycle is limited by the placement of thermal boundaries. The thermal boundary placement determines the steepness or gradualness of warming and cooling phases. Thermal boundaries closer to the steady-state temperature of the warming phase results in higher duty cycles. The fidelity requirements, dictated by application and ambient situation, decide the placement of thermal boundaries. High fidelity expectations result in lower thermal boundaries, and therefore, lower duty cycles. Here the implication of different fidelity requirements on system power is evaluated.",
                        "FIG. 9A is a graphical representation of average system power for the different control policies for different application fidelity needs. Stop-capture-go consumes the lowest amount of power among all the control policies. This is because the stop-capture-go policy operates entirely on the near-sensor VPU 22 for whole program execution in both NSP and CAP modes. In contrast, the seasonal migration policy operates on the remote processing unit (e.g., the SoC 28) during CAP mode and on the near-sensor VPU 22 during NSP mode. So, it consumes more power than the stop-capture-go policy but less than the full-far policy, which always operates on the remote processing unit.",
                        "System power changes with fidelity demands, due to change in duty cycle; high fidelity pulls down the duty cycle, reducing efficiency. This is evident in simulations of the seasonal migration policy; higher power for high app fidelity is achieved in comparison to the power with low app fidelity. Meanwhile, for the stop-capture-go policy, a lower duty cycle increases VPU 22 sleep time. Therefore, power decreases while moving from low to high app fidelity. Finally, for the full-far policy, there is no change in system power as it doesn't create fidelity issues.",
                        "FIG. 9B is a graphical representation of average system power for different control policies under different lighting conditions. Similar trends are observed for various control policies with fidelity changes forced by lighting, as illustrated in FIG. 9B. Here outdoor daylight behaves similarly to a low fidelity case, while indoor dimly lit office light behaves similar to a high fidelity case.",
                        "Policy Execution Overhead:",
                        "While the near-sensor vision system 58 executes the seasonal migration policy, it switches between the near-sensor VPU 22 and the remote processing unit (e.g., the SoC 28), incurring an overhead. Switching overhead strongly relates to the number of frame drops. From the emulation setup, the switching overhead is 100 \u03bcs, which is much less than frame capture/inference times (33 ms). Therefore, the seasonal migration policy has negligible overhead and no impact on application performance.",
                        "For the stop-capture-go policy, stop time determines the number of frame drops. At the same time, lower stop times also promote higher efficiency through higher duty cycles. Furthermore, the sufficient temperature drop can be achieved in less than a frame period. Therefore, the system can operate at the minimum stop time (one frame time) for efficiency reasons.",
                        "FIGS. 10A and 10B illustrate situational awareness features to dynamic ambient settings of the Stagioni runtime controller 60. The runtime controller 60 smoothly adapts thermal boundaries to match ambient temperature and lighting situations.",
                        "FIG. 10A is a graphical representation of warming and cooling times as a function of changes in ambient temperature. Ambient temperature determines steady-state temperatures, which determine the warming and cooling times. Higher ambient temperatures push TsteadyNSP far from Tlow and push TsteadyCAP close to Thigh. This forces the warming phase to take a steeper rise and the cooling phase to take a gradual fall in the exponential curve. Thus, increasing ambient temperature decreases duty cycle and vice-versa. The change in ambient temperature in the emulation platform is simulated, as shown in FIG. 10A. Decreasing ambient temperature increases rise times and reduces fall times in the simulated temperature trace. In addition, the runtime controller 60 smoothly adjusts to the changes in ambient temperature.",
                        "FIG. 10B is a graphical representation of warming and cooling times as a function of changes in lighting conditions. Lighting dictates fidelity requirements, changing Thigh and Tlow. Again, the runtime controller 60 adapts to these changes with light variation. Change in illumination is simulated to generate a trace with random juggling between lighting scenarios. This trace is provided as an input to the runtime controller 60 and the temperature trace is collected. FIG. 10B shows the temperature trace overlaid with Thigh and Tlow. Smooth variation of temperature with changes in light intensity can be observed.",
                        "Table 3 lists the power profile of several VPU 22 choices. The VPU 22 power profile determines the extent to which the near-sensor vision system 58 can leverage near-sensor processing. For the low power profiles that do not degrade fidelity (e.g., Eyeriss+EIE), tasks on the 3D stacked vision sensor 20 can be fully executed (e.g., at 100% duty cycle). For VPUs 22 that cause fidelity issues (e.g., Neurostream), the Stagioni runtime controller 60 enables near-sensor processing to leverage energy-efficiency benefits, determining duty cycles to maximize power savings.",
                        "Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the present disclosure. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow. For example, a collection of significant extensions is envisioned to unlock the benefits of 3D stacked integration.",
                        "Fine-Grained Temperature Management:",
                        "The seasonal migration policy executes at coarse granularity, migrating the entire workload between near-sensor VPUs 22 and remote processing units (e.g., the SoC 28). Migration at a fine granularity (e.g., OpenVX task graph nodes) can help achieve fine-grained task migration towards precise temperature management and associated optimization.",
                        "Enhancing Near-Sensor Burst Performance:",
                        "Temperature management for near-sensor processing unlocks the ability to leverage near-sensor VPUs 22 for efficiency, but could also provide burst performance benefits under a temperature \u201cbudget\u201d. Adapting temperature management for burst performance would need a deeper semantic awareness of application workload requirements. For non-trivial workloads, this may require reactive programming or other sophisticated techniques to, for example, reconfigure on-demand sensor operations and expectations when the visual task requires it.",
                        "Stacked Sensor Architecture Design/Validation:",
                        "While implications of stacked sensor architectures are modeled and simulated, future efforts can include specifically designed stacked hardware. Tunable components and interfaces will be implemented and evaluated with different scenarios.",
                        "Near-sensor processing has a great potential towards energy-efficient imaging and vision, as demonstrated by recent academic and industrial efforts on stacked image sensors. However, doing so hampers sensor fidelity due to thermal noise, thereby limiting the adoption of near-sensor processing. The characterization reveals that immediate drop in temperatures can be realized within short duration. This observation is used to design principles for managing sensor temperature for efficient temperature regulation and high fidelity temperatures, while optimizing for system power. To implement the control policies, the Stagioni runtime controller 60 is designed and implemented to manage sensor temperature, while fulfilling imaging needs. This work is the first runtime solution for stacked sensor thermal management. This work will form the foundation for future imaging-aware DTM techniques."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "introduce embodiments of the disclosure",
                        "define terms used in the disclosure",
                        "describe the structure of the document",
                        "motivate near-sensor processing",
                        "describe limitations of traditional vision processing",
                        "introduce 3D stacked image sensors with near-sensor VPUs",
                        "characterize thermal implications of near-sensor processing",
                        "describe the relationship between near-sensor processing power and sensor temperature",
                        "relate near-sensor processing power to image fidelity through temperature simulation",
                        "observe the effect of removing near-sensor processing power on sensor temperature",
                        "describe the application of near-sensor processing to vision/imaging applications",
                        "introduce a lifelogger case study",
                        "describe the thermal implications of using 3D stacked vision sensors with near-sensor VPUs",
                        "study the relationship of near-sensor processing with system energy, sensor element temperature, and image noise",
                        "confirm that near-sensor processing minimizes off-chip data movements",
                        "relate near-sensor processing power to image fidelity through temperature simulation",
                        "observe the effect of removing near-sensor processing power on sensor temperature",
                        "describe the construction of a coarse energy profile model",
                        "motivate the need for near-sensor processing",
                        "describe sensing, processing, and storage energy consumption",
                        "describe communication interface energy consumption",
                        "construct a linear-regression model to estimate energy per pixel",
                        "describe the energy model for traditional vision systems",
                        "compare power estimates of several example systems",
                        "describe the near-sensor vision system",
                        "describe the 3D stacked vision sensor package",
                        "describe the thermal RC model of the 3D stacked vision sensor package",
                        "derive RC component values for the thermal RC model",
                        "describe the thermal behavior of near-sensor processing architectures",
                        "simulate temperature profiles of the sensor element junction and the 3D stacked vision sensor package",
                        "evaluate the thermal behavior of near-sensor processing architectures",
                        "describe the application of thermal management control policies",
                        "introduce stop-capture-go and seasonal migration control policies",
                        "describe the runtime controller (Stagioni)",
                        "evaluate the effectiveness of the control policies",
                        "demonstrate the robustness of the embodiments",
                        "describe the implications of near-sensor processing for vision/imaging applications",
                        "introduce a lifelogger case study",
                        "describe the thermal implications of using 3D stacked vision sensors with near-sensor VPUs",
                        "relate near-sensor processing power to image fidelity through temperature simulation",
                        "conclude the detailed description",
                        "introduce thermal management for 3D stacked vision sensor",
                        "describe inter-layer resistances and power consumption",
                        "explain steady-state temperature and transient temperature",
                        "illustrate transient temperature with FIG. 3A",
                        "expand on transient temperature with FIG. 3B",
                        "discuss thermal characterization of sensor element",
                        "illustrate noise sensitivity to temperature, exposure, and ISO with FIG. 4",
                        "explain influence of noise on vision tasks",
                        "discuss need for high fidelity images",
                        "describe thermal characterization experiment",
                        "illustrate thermal noise with FIG. 5A and FIG. 5B",
                        "analyze histograms of images with FIG. 5C",
                        "summarize insights for near-sensor processing",
                        "motivate need for novel dynamic thermal management strategies",
                        "introduce imaging-specific control policies for thermal management",
                        "discuss limitations of traditional DTM mechanisms",
                        "introduce two potential control policies: stop-capture-go and seasonal migration",
                        "outline principles for managing sensor temperature",
                        "explain situational temperature regulation",
                        "explain on-demand fidelity",
                        "explain system power minimization through duty cycle",
                        "discuss vision task requirements and temperature management",
                        "illustrate power consumption at various duty cycles with FIG. 6",
                        "model average system power",
                        "discuss tradeoff between duty cycle and frequency of switches",
                        "introduce stop-capture-go technique for near-sensor processing",
                        "explain temporal slack and capture fidelity regulation",
                        "conclude stop-go techniques are architecturally simple",
                        "introduce stop-capture-go policy",
                        "motivate temperature regulation",
                        "describe policy parameters",
                        "discuss limitations of stop-capture-go",
                        "introduce seasonal migration policy",
                        "describe policy parameters",
                        "discuss thermal isolation",
                        "derive duty cycle and frequency of migration",
                        "discuss implementation considerations",
                        "introduce Stagioni runtime controller",
                        "describe API for application-specific fidelity needs",
                        "discuss runtime controller operation",
                        "describe message passing scheme",
                        "illustrate process for thermally managing vision system",
                        "introduce simulation framework",
                        "describe emulation framework",
                        "evaluate control policies",
                        "discuss vision tasks",
                        "describe metrics and policies",
                        "discuss environment conditions",
                        "illustrate power impact of policies",
                        "discuss power savings",
                        "discuss latency overhead",
                        "illustrate situational awareness features",
                        "discuss ambient temperature effects",
                        "discuss lighting condition effects",
                        "list power profile of VPU choices",
                        "discuss fine-grained temperature management",
                        "discuss enhancing near-sensor burst performance",
                        "discuss stacked sensor architecture design/validation",
                        "motivate near-sensor processing",
                        "discuss characterization of temperature drop",
                        "introduce design principles for thermal management",
                        "discuss Stagioni runtime controller implementation",
                        "discuss significance of work",
                        "discuss future directions",
                        "describe FIG. 7",
                        "describe FIG. 8A",
                        "describe FIG. 8B",
                        "describe FIG. 9A",
                        "describe FIG. 9B",
                        "describe FIG. 10A",
                        "describe FIG. 10B",
                        "discuss Table 3",
                        "discuss extensions to preferred embodiments",
                        "discuss improvements and modifications",
                        "discuss scope of concepts disclosed",
                        "discuss claims",
                        "discuss significance of disclosure",
                        "conclude disclosure"
                    ],
                    "num_characters": 60774,
                    "outline_medium": [
                        "introduce embodiments of the disclosure",
                        "define terms and concepts used in the disclosure",
                        "describe the problem of energy-expensive off-chip data movements",
                        "motivate near-sensor processing for energy efficiency",
                        "characterize thermal implications of using 3D stacked image sensors with near-sensor VPUs",
                        "reveal opportunities for regulating temperature based on dynamic visual task requirements",
                        "propose and investigate two thermal management control policies",
                        "present parameters that govern policy decisions",
                        "explore trade-offs between system power and policy overhead",
                        "evaluate novel dynamic thermal management strategies",
                        "describe a runtime controller for controlling an operational mode of a vision or imaging system",
                        "translate fidelity demands into effective thermal management",
                        "apply application-specific requirements into policy parameters",
                        "activate temperature reduction mechanisms",
                        "continuously adapt policy parameters to situational settings",
                        "characterize relationships between near-sensor processing power and sensor temperature",
                        "reveal a consequential insight: removing near-sensor power results in an immediate and dramatic reduction in transient junction temperature",
                        "describe imaging-specific control policies for thermal management",
                        "evaluate the effectiveness of control policies for managing sensor temperature",
                        "demonstrate the robustness of exemplary embodiments in smoothly handling dynamic fidelity needs",
                        "introduce thermal management for 3D stacked vision sensor",
                        "motivate thermal noise impact on image quality",
                        "describe thermal characterization of sensor element",
                        "illustrate noise sensitivity to temperature, exposure, and ISO",
                        "discuss image fidelity needs for vision and imaging tasks",
                        "summarize insights for near-sensor processing",
                        "motivate need for novel dynamic thermal management strategies",
                        "introduce control policies for thermal management",
                        "describe principles for managing sensor temperature",
                        "discuss situational temperature regulation",
                        "discuss on-demand fidelity and system power minimization",
                        "illustrate power consumption at various duty cycles",
                        "describe stop-capture-go control policy for near-sensor processing",
                        "discuss seasonal migration control policy for thermal management",
                        "introduce stop-capture-go policy",
                        "motivate temperature regulation",
                        "describe policy parameters",
                        "discuss limitations of stop-capture-go",
                        "introduce seasonal migration policy",
                        "describe policy parameters",
                        "discuss thermal isolation",
                        "derive duty cycle and frequency of migration",
                        "discuss implementation considerations",
                        "introduce Stagioni runtime controller",
                        "describe API for application-specific fidelity needs",
                        "discuss runtime controller operation",
                        "illustrate process for thermally managing vision system",
                        "describe simulation framework",
                        "describe emulation framework",
                        "evaluate control policies",
                        "discuss vision tasks",
                        "discuss metrics and policies",
                        "discuss environment conditions",
                        "illustrate power impact of control policies",
                        "discuss policy execution overhead",
                        "illustrate situational awareness features",
                        "discuss power profile of VPU choices",
                        "discuss future extensions",
                        "conclude near-sensor processing benefits"
                    ],
                    "outline_short": [
                        "define terms and concepts",
                        "introduce near-sensor processing and its benefits",
                        "describe thermal implications of near-sensor processing",
                        "characterize relationships between processing power, sensor temperature, and image noise",
                        "propose runtime controller for controlling operational mode of vision system",
                        "describe thermal management control policies (stop-capture-go and seasonal migration)",
                        "evaluate effectiveness of control policies for managing sensor temperature",
                        "demonstrate robustness of embodiments in handling dynamic fidelity needs",
                        "describe energy profile model and its application to near-sensor processing",
                        "provide thermal resistance-capacitance model of 3D stacked vision sensor package",
                        "describe thermal dynamics of 3D stacked vision sensor",
                        "motivate need for dynamic thermal management",
                        "summarize insights for near-sensor processing",
                        "introduce principles for managing sensor temperature",
                        "describe stop-capture-go control policy",
                        "describe seasonal migration control policy",
                        "discuss power consumption and duty cycle optimization",
                        "introduce thermal management for near-sensor processing",
                        "describe stop-capture-go policy",
                        "describe seasonal migration policy",
                        "introduce Stagioni runtime controller",
                        "describe API for application-specific fidelity needs",
                        "describe runtime controller operation",
                        "introduce simulation framework",
                        "introduce emulation framework",
                        "evaluate control policies for meeting fidelity demands",
                        "discuss vision tasks and metrics",
                        "discuss environment conditions and results",
                        "discuss future extensions and improvements"
                    ]
                }
            ],
            "outline_long": [],
            "num_characters": 0,
            "outline_medium": [],
            "outline_short": []
        }
    ],
    "claims": [
        "1. A vision system, comprising:\na stacked vision sensor operable in a capture (CAP) mode and a near-sensor processing (NSP) mode; and\na runtime controller coupled to the stacked vision sensor and configured to:\nreceive an image fidelity constraint from a vision application; and\ncycle the stacked vision sensor between the CAP mode and the NSP mode based on the image fidelity constraint.",
        "2. The vision system of claim 1, wherein the stacked vision sensor comprises:\na sensor element;\na vision processing unit (VPU) stacked with the sensor element; and\na memory stacked with the sensor element and the VPU.",
        "3. The vision system of claim 2, wherein during the CAP mode the runtime controller causes a system clock to be disabled for the VPU and the memory and enabled for the sensor element.",
        "4. The vision system of claim 3, wherein during the NSP mode the system clock is enabled for the VPU and the VPU performs image processing tasks.",
        "5. The vision system of claim 1, further comprising a remote processing unit thermally isolated from the stacked vision sensor.",
        "6. The vision system of claim 5, wherein:\nduring the CAP mode, an image processing function is disabled for the stacked vision sensor and transferred to the remote processing unit; and\nduring the NSP mode, the image processing function is enabled for the stacked vision sensor.",
        "7. The vision system of claim 5, wherein the remote processing unit is a system-on-chip (SoC) electrically connected to the stacked vision sensor.",
        "8. The vision system of claim 1, wherein the runtime controller is further configured to:\ndetect an operating temperature of the stacked vision sensor; and\nchange a duty cycle between the NSP mode and the CAP mode based on the image fidelity constraint and the operating temperature of the stacked vision sensor.",
        "9. The vision system of claim 8, wherein the runtime controller is further configured to:\ndecrease the duty cycle of the NSP mode when the operating temperature exceeds a first threshold; and\nincrease the duty cycle of the NSP mode when the operating temperature reaches a second threshold below the first threshold.",
        "10. The vision system of claim 9, wherein the first threshold represents a maximum operating temperature at which the image fidelity constraint is met.",
        "11. The vision system of claim 1, wherein when the runtime controller receives a lower image fidelity constraint for a first image capture operation, the runtime controller is configured to operate in the NSP mode during at least a portion of the first image capture operation.",
        "12. The vision system of claim 11, wherein when the runtime controller receives a higher image fidelity constraint for a second image capture operation, the runtime controller is configured to reduce an operating temperature of the stacked vision sensor by operating in the CAP mode throughout the second image capture operation.",
        "13. A method for thermally managing a vision system, comprising:\nreceiving an indication of operating temperature for a stacked vision sensor; and\ntransitioning the stacked vision sensor between a capture (CAP) mode and a near-sensor processing (NSP) mode based on the operating temperature and an image fidelity constraint for the stacked vision sensor.",
        "14. The method of claim 13, wherein transitioning the stacked vision sensor to the CAP mode comprises disabling an image processing function of the stacked vision sensor.",
        "15. The method of claim 14, wherein transitioning the stacked vision sensor to the NSP mode comprises enabling the image processing function of the stacked vision sensor.",
        "16. The method of claim 13, wherein the transitioning the stacked vision sensor between the CAP mode and the NSP mode comprises:\ndecreasing a duty cycle of the NSP mode relative to the CAP mode when the operating temperature exceeds a first threshold; and\nincreasing the duty cycle of the NSP mode relative to the CAP mode when the operating temperature reaches a second threshold below the first threshold.",
        "17. Vision circuitry, comprising:\na stacked vision sensor, comprising:\na sensor element; and\na vision processing unit (VPU); and\n\na runtime controller coupled to the stacked vision sensor and configured to dynamically manage a temperature of the stacked vision sensor by selectively offloading image processing from the VPU to a remote processing unit.",
        "18. The vision circuitry of claim 17, wherein the VPU is operable in:\na near-sensor processing (NSP) mode wherein the VPU performs the image processing; and\na capture (CAP) mode in which the VPU offloads the image processing to the remote processing unit.",
        "19. The vision circuitry of claim 18, wherein the runtime controller is configured to dynamically manage the temperature of the stacked vision sensor by controlling a duty cycle of the VPU between the NSP mode and the CAP mode.",
        "20. The vision circuitry of claim 17, wherein the runtime controller is configured to dynamically manage the temperature of the stacked vision sensor to meet an image fidelity constraint and reduce power consumption of the vision circuitry."
    ]
}