{
    "id": "US20090326961",
    "authors": [
        "Rade Petrovic",
        "Dai Yang"
    ],
    "title": "EFFICIENT AND SECURE FORENSIC MARKING IN COMPRESSED DOMAIN",
    "date": "2009-06-19 00:00:00",
    "abstract": "Methods, devices, and computer program products enable the embedding of forensic marks in a host content that is in compressed domain. These and other features are achieved by preprocessing of a host content to provide a plurality of host content versions with different embedded watermarks that are subsequently compressed. A host content may then be efficiently marked with forensic marks in response to a request for such content. The marking process is conducted in compressed domain, thus reducing the computational burden of decompressing and re-compressing the content, and avoiding further perceptual degradation of the host content. In addition, methods, devices and computer program products are disclosed that obstruct differential analysis of such forensically marked content.",
    "sections": [
        {
            "title": "DESCRIPTION",
            "paragraphs": [],
            "subsections": [
                {
                    "title": "FIELD OF INVENTION",
                    "paragraphs": [
                        "The present invention generally relates to the field of digital watermarking. More particularly, the present invention relates to efficient and secure embedding and detection of watermarks in a content that is in compressed domain."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "define field of invention"
                    ],
                    "num_characters": 231,
                    "outline_medium": [
                        "define field of invention"
                    ],
                    "outline_short": [
                        "define digital watermarking"
                    ]
                },
                {
                    "title": "BACKGROUND OF THE INVENTION",
                    "paragraphs": [
                        "This section is intended to provide a background or context to the invention that is recited in the claims. The description herein may include concepts that could be pursued, but are not necessarily ones that have been previously conceived or pursued. Therefore, unless otherwise indicated herein, what is described in this section is not prior art to the description and claims in this application and is not admitted to be prior art by inclusion in this section.",
                        "Digital watermarks have been proposed and used for copyright protection of signals such as audio, video, and images. An objective of such watermarking systems is to hide an auxiliary signal within a host signal in such a way that it is substantially imperceptible, and at the same time, difficult to remove without damaging the host signal. The auxiliary signal may carry information that is used to carry out copyright protection mechanisms to varying degrees. For example, the auxiliary signal may merely comprise a \u201cno copy allowed\u201d indication that, once detected and interpreted by a compliant copying device, prevents copying of the host signal. Additionally, or alternatively, the embedded auxiliary signal may carry information that identifies one or more of the rightful owner, author, title or serial number of the host signal. The information contained in the auxiliary signal can also be used for other applications, such as to monitor the usage of embedded content, resolve ownership disputes, keep track of royalties, and the like.",
                        "Another application related to digital watermarking involves distinguishing different copies of the same host signal by embedding a unique watermark value into individual copies of a host signal. These applications are sometimes referred to as forensic marking (because the unique watermarks may be used to trace the content to an offending party), transaction marking (because the unique watermarks can identify each legitimate transaction), or fingerprinting (because the unique watermarks can identify perceptually similar host signals, much like fingerprints can identify individuals). Once a content is forensically marked, the embedded watermarks may be used to identify the original source (i.e., legitimate purchaser) of a content, and monitor the subsequent spread of that content through piracy channels. For example, a pirate may purchase a music track over the Internet from a legitimate distributor, directly or using a proxy. Then, the pirate may resell or otherwise redistribute the content in an unauthorized fashion. A similar scenario can occur in the distribution of video or other types of content such as still photos, computer graphics, computer games, and the like that may be distributed over the Internet, or in case of video or music, over \u201cpay-per-view\u201d channels in a cable or satellite TV network. Similarly, copyrighted content that is distributed internally within a content production/distribution entity, or to reviewers or critics prior to their public release, may be illegally used or redistributed. In all of the above cases, it is important to identify the offending party and recover and/or prevent further unauthorized dissemination of the content. Often the fact that forensic marks are present in the content is enough to deter such illegal activities.",
                        "Efficient design of a forensic marking procedure is often an important consideration of forensic marking systems since the same host signal often needs to be marked many times. On the other hand, efficient detection of embedded marks may not be a critical consideration for forensic marking systems since watermark detection often takes place only when an illicit activity is detected or suspected. This feature of forensic marking systems may be contrasted to copy-control watermarking systems, where the emphasis is typically on providing a simple extraction method that is easily implemented and carried out in consumer devices, while the embedding (or marking) procedure can be more elaborate and computationally expensive.",
                        "Efficiency of a forensic marking system is further complicated due to the fact that a host content (e.g., music, image or video), especially a content that is distributed over the Internet, is often stored and distributed in a compressed format (e.g., MP3 format for music files). In a conventional marking system, the forensic marks are typically applied by first decompressing the host content, embedding the appropriate marks, and re-compressing the content prior to distribution or storage. This procedure has several disadvantages. First, since most compression algorithms involve lossy operations, each round of content decompression and re-compression may further degrades the perceptual quality of the host content. Second, decompression, and, particularly, compression operations are computationally expensive. Therefore, it may not be computationally feasible to decompress and re-compress a content in response to each individual purchase request of that content. It is thus advantageous to apply forensic marks without decompressing and re-compressing the host content."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "introduce digital watermarks",
                        "motivate copyright protection",
                        "describe watermarking systems",
                        "summarize forensic marking",
                        "describe copy-control watermarking",
                        "limitations of conventional marking systems",
                        "motivate efficient forensic marking",
                        "describe compressed domain challenges",
                        "summarize importance of forensic marks",
                        "describe forensic marking applications"
                    ],
                    "num_characters": 5117,
                    "outline_medium": [
                        "motivate digital watermarking",
                        "describe objectives of watermarking systems",
                        "describe forensic marking applications",
                        "describe limitations of conventional marking systems",
                        "motivate efficient forensic marking"
                    ],
                    "outline_short": [
                        "motivate digital watermarks",
                        "limitations of conventional marking systems"
                    ]
                },
                {
                    "title": "SUMMARY OF THE INVENTION",
                    "paragraphs": [
                        "The present invention relates to systems, methods, devices, and computer program products that enable the application of forensic marks to a host content that is in compressed domain. One aspect of the present invention is related to a method for embedding forensic marks in a host content in compressed domain, comprising: receiving metadata associated with a request for the host content, generating a code in accordance with the metadata, selecting a plurality of tributary segments that are in compressed domain in accordance with the code, and assembling the segments to produce a forensically marked host content in compressed domain. In one example embodiment, the metadata comprises information for identifying the request, while in another example embodiment, the information comprises at least one of a transaction identification, intended destination of the forensically marked host content, and time, date, and source of the request.",
                        "In accordance with another example embodiment, the transaction metadata and the code are stored in a database. In yet another example embodiment, the plurality of tributaries are generated by a preprocessing module and stored in a storage unit. According to another embodiment, the tributaries comprise one or more versions of the host content, each version having been embedded with a string of unique watermark symbols and compressed thereafter. In a different embodiment, the watermark symbols are embedded contiguously in each of the versions. Still, in a different embodiment, the tributaries comprise an unmarked host content and at least one version of the host content that is embedded with a string of unique watermark symbols.",
                        "According to another embodiment, the tributaries comprise compression units, each compression unit having been embedded with a unique string of watermark symbols. In one example embodiment, the compression units span the entirety of the host content with no intervening unmarked segments. In another embodiment, a watermark symbol interval spans an integer multiple number of the compression units, and in a different embodiment, a watermark symbol interval boundary matches the boundary of an integer number of the compression units. According to another embodiment, the compression units correspond to at least one of a time, a space, and a time-and-space domains. In yet another embodiment, watermarking parameters are adjusted in accordance with compression techniques used for compressing the tributaries. In another example embodiment, the host content is an audio content, and the tributaries are produced using at least one of an AAC, AACplus, and MP3 compression techniques. In still a different embodiment, assembling comprises back-to-back concatenation of the segments.",
                        "In another embodiment, the host content is an audio content, the tributaries are compressed using a AAC compressor, and the selecting comprises: selecting a first segment from a first tributary in accordance with a first symbol of the code, selecting a second segment in accordance with a second symbol of the code, wherein if the second symbol is the same as the first symbol, selecting the second segment from the first tributary, and if the second symbol is different from the first symbol, selecting the second segment from a second tributary. According to another embodiment, if selecting the second segment from a second tributary creates perceptual artifacts, selecting the second segment from the first tributary.",
                        "According to yet another embodiment, the tributaries are distorted to obstruct differential analysis of the forensically marked host content. In one example embodiment, the distortion comprises non-linear amplitude modification of the host content samples, while in another example embodiment, the distortion comprises applying a different random phase offset to samples of each of the plurality of tributaries prior to the selecting. In still another example embodiment, the distortion comprises modifying the Dynamic Range Control (DRC) bits associated with the tributaries that are in AAC format.",
                        "Another aspect of the present invention relates to a device for embedding forensic marks in a host content in compressed domain, comprising: a receiving means configured to receive metadata associated with a request for the host content; a code generator configured to generate a code in accordance with the metadata; a selector configured to select a plurality of tributary segments that are in compressed domain in accordance with the code; and an assembly means configured to assemble the segments to produce a forensically marked host content in compressed domain. Yet another aspect of the present invention relates to a computer program product, embodied on a computer readable medium, for embedding forensic marks in a host content in compressed domain, the computer program product comprising: a computer code for receive metadata associated with a request for the host content; a computer code for generating a code in accordance with the metadata; a computer code for selecting a plurality of tributary segments that are in compressed domain in accordance with the code; and a computer code for assembling the segments to produce a forensically marked host content in compressed domain.",
                        "These and other advantages and features of various embodiments of the present invention, together with the organization and manner of operation thereof, will become apparent from the following detailed description when taken in conjunction with the accompanying drawings."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "introduce forensic marking method",
                        "describe metadata processing",
                        "generate code",
                        "select tributary segments",
                        "assemble forensically marked content",
                        "describe database storage",
                        "describe preprocessing module",
                        "describe tributary versions",
                        "describe compression units",
                        "describe watermark symbol intervals",
                        "describe device and computer program product"
                    ],
                    "num_characters": 5561,
                    "outline_medium": [
                        "introduce forensic marking in compressed domain",
                        "describe method for embedding forensic marks",
                        "describe example embodiments of metadata",
                        "describe example embodiments of tributaries",
                        "describe example embodiments of assembling"
                    ],
                    "outline_short": [
                        "introduce forensic marking method",
                        "embodiment of forensic marking system"
                    ]
                },
                {
                    "title": "DETAILED DESCRIPTION OF CERTAIN EMBODIMENTS",
                    "paragraphs": [
                        "In the following description, for purposes of explanation and not limitation, details and descriptions are set forth in order to provide a thorough understanding of the present invention. However, it will be apparent to those skilled in the art that the present invention may be practiced in other embodiments that depart from these details and descriptions.",
                        "The various embodiments of the present invention enable the application of forensic marks to a host content that is in compressed domain. The detection and recovery of such forensic marks from the host content may be carried out using either conventional watermark detection systems (e.g., computationally inexpensive detectors that are implemented in consumer devices) or may be accomplished with more sophisticated forensic detectors with enhanced detection capabilities.",
                        "One consideration in designing and applying the forensic marks to a host content is resiliency of the embedded marks against collusion attacks and differential analysis. For example, an attacker may obtain two copies of a host content with different embedded marks, subtract the two copies, analyze the difference signal in order to gain information regarding the watermarking technique, and devise sophisticated attacks to remove or interfere with the embedded watermarks. Furthermore, an attacker may average a number of copies of a host content in order to weaken individual marks within each content, make them interfere, and eventually render them undetectable. An attacker may also cut different segments from different copies of a host content and splice them together to produce a single copy with multiple forensic marks. This type of attack makes it difficult to identify a single source of piracy.",
                        "Commonly owned U.S. Pat. No. 6,430,301, entitled \u201cFormation and Analysis of Signals with Common and Transaction Watermarks,\u201d describes a technique that allows the application of forensic marks in compressed domain while providing substantial immunity against collusion attacks. However, the technique disclosed in U.S. Pat. No. 6,430,301 requires the presence of \u201cCommon Watermarks\u201d within a host content that are interleaved with \u201cTransaction Watermarks.\u201d The Common Watermark intervals are situated between adjacent symbols of Transaction Watermarks and occupy substantial portions of the host content, however, they do not contain transactional information. The forensic marking techniques described in accordance with the various embodiments of the present invention similarly provide for the embedding of forensic watermarks into a content that is in compressed format but they eliminate the need for Common Watermark intervals, thus improving the density of Transaction Watermark symbols, and efficiency of forensic marking. These and other features of the various embodiments of the present invention are achieved while avoiding perceptual artifacts beyond those inherent to the watermarking technology itself.",
                        "Furthermore, while the U.S. Pat. No. 6,430,301 discloses a technique that allows identifying multiple offending parties involved in a collusion attack, it doesn't thwart the threat of a differential analysis attack. Such an attack may reveal information regarding the deployed watermarking technology and may lead to the design of attacks that destroy (e.g., erase or jam) the embedded watermarks. The forensic marking techniques described in accordance with the various embodiments of the present invention have the further advantage of obstructing an attacker's attempts to reverse engineer the deployed watermarking technology, thus thwarting potential differential analysis attack.",
                        "FIG. 1 illustrates a block diagram for embedding forensic marks in a host content 41 in accordance with an example embodiment of the present invention. The forensic marking system 10 includes a preprocessing module 12, a marking module 14 and a database 16. The preprocessing stage, which typically comprises computationally expensive operations such as watermark embedding and compression, may be carried out at a different time, and/or at a different location, than the marking stage. The preprocessing module 12 comprises one or more embedder modules 18 to 22 that embed a host signal 41 with a plurality of marks. Each embedder 18 to 22 embeds a distinct string of symbols in the host content 41. For example, a first embeddor 18 may embed a first logical value, while a second embedder 20 may embed a second logical value in the host content 41 to produce two different versions of the host content. Note that some symbols may be the same in the different versions of the embedded host content (e.g. headers), and one version of the embedded host content may comprise a first string of symbols, for example, the binary pattern \u201c0101 . . . \u201d while another may comprise, for example, the binary string \u201c1010 . . . \u201d It should be noted that while the example embodiment of the present invention as shown in FIG. 1 illustrates separate embedders 18 to 22 that are deployed in parallel for embedding each distinct watermark symbol, a single embedder module may be used to embed all symbols, for example, in a serial fashion. Alternatively, the embedding of the plurality of symbols may be carried out by separate embedders that share one or more components or modules.",
                        "It should also be noted that the embedding of the different symbols may, but is not required to, be conducted using the same embedding technology or algorithm. Thus, for example, a first symbol may be embedded using a first watermarking technology while a second symbol may be embedded using a second embedding technology. However, the important restriction is that all watermark symbols use the same symbol interval, and be embedded synchronously within the host content 41. As a result, the outputs of embedders 18 to 22 comprise different versions of a host content, which although perceptually similar, comprise different embedded watermarks. The term \u201csymbol interval\u201d is generically used herein to refer to the extent of a host content that is used to carry an individual watermark symbol. For example, when embedding a one dimensional host content, such as an audio signal, a symbol interval may correspond to the duration of the host content that accommodates the embedding of a watermark symbol. Analogously, when embedding a two dimensional host content, such as a still image, a symbol interval may correspond to the spatial extent of the host content that accommodates the embedding of a watermark symbol. For a multi-dimensional host content, such as a video signal, a symbol interval may comprise a temporal, spatial, or combination of temporal and spatial, extent of the host content that accommodates the embedding of a watermark symbol. Furthermore, a symbol interval may comprise an extent of a host content that can accommodate the embedding of a watermark symbol in a different domain, such as in frequency domain.",
                        "Referring back to FIG. 1, after embedding of the host content 41 with a plurality of watermark symbols, the different versions of marked host content are compressed by compressors 24 to 28 using one or more perceptual compression techniques, such as MPEG, JPEG, and the like. The compressed content may then be saved in a storage unit 32 that comprises, for example, one or more hard disks, RAMs, optical disks, flash memory devices, and the like. In addition, the un-marked host content 41 may optionally be compressed in compressor 30, and saved in the storage unit 32, as well. It should be noted that while the example embodiment of the present invention as shown in FIG. 1 illustrates separate compressors 24 to 30 that are deployed in parallel for embedding different versions of the host content, a single compressor 24 may be used for compression the different versions of the host content, for example, in a serial fashion. Alternatively, the different versions of the host content may be compressed using separate compressors that share one or more components or modules. The term \u201ctributary\u201d is used herein to refer to the different versions of the host content that have been compressed and are made available to the marking module 14. It should be noted that while the exemplary embodiment of the present invention as shown in FIG. 1 illustrates a memory unit 32 that is located within the preprocessing module, such memory unit 32 may reside outside of the preprocessing module 12. Furthermore, in an example embodiment of the present invention, the need for a permanent storage unit may be eliminated by saving the tributaries in temporary storage, such as in RAM, or run-time memory. This configuration may be used, for example, for a one-time generation of a number of forensically marked content that are distributed to content reviewers.",
                        "In accordance with an example embodiment of the present invention, at the end of the preprocessing stage, at least two distinct versions of the host content that are at least partially overlapping are produced. For example, at the end of the preprocessing stage, the storage unit 32 may contain a complete compressed copy of the unmarked content together with a partial copy of the host content that is marked by a first embedder 18. Alternatively, the storage unit 32 may contain two full copies of the host content, one marked by a first embedder 18, and the other marked by a second embedder 20, but without a compressed version of the unmarked host content. Note that marked and unmarked versions of the host content are perceptually similar, and thus either version, or a composite version that is produced by splicing different segments of each version, may be presented to the user. The particular selection of candidate segments from the plurality tributaries forms the basis of forensic marking in accordance with the various embodiments of the present invention. For example, with only two distinct versions of the host content at the output of the preprocessing stage, the marking module 14 can create a marked content 40 that comprises binary watermark symbols. However, if M distinct tributaries are created by the pre-processing module 12, each comprising a different watermark symbol, the marking module 14 can generate a marked content 40 with M-ary watermark symbols.",
                        "The preprocessing operations in accordance with an example embodiment of the present invention is further described in the flow diagram of FIG. 3. In Step 300, a host content is received at the preprocessing module. In Step 302, the received host content is embedded with one or more strings of watermark symbols to create different versions of the embedded host content. Note that some embedded symbols in the different versions of the embedded host content may be the same among different copies, yet the overall string of embedded symbols may be unique for each version. In Step 304, the different versions of the embedded host content, including the unmarked host content, are compressed to form a plurality of tributaries. Finally, in Step 306, the plurality of tributaries are stored in a storage unit that is accessible to the marking module.",
                        "Referring back to FIG. 1, the marking module 14 is responsible for creating forensically marked content 40 in compressed domain using relatively inexpensive operations. This task may be accomplished by combining portions of two or more tributaries using a multiplexer (MUX) 34. In one example embodiment, the generation of the forensically marked content 40 may be initiated as a single transaction, for example, upon a user's request to purchase a content, while in a different example embodiment, the marking may be initiated by a batch process that results in the creation of a plurality of uniquely marked content for subsequent distribution. In either example embodiment, the marking request is associated with transaction metadata 38 that describes the details of transaction, such as the intended destination of the marked content, time, date and source of the request, or other information that uniquely identifies the transaction. Each request for the creation of a marked content 40 may trigger the generation of a unique code in Code Generator 36. This code that is ultimately embedded in the marked content 40, is also saved in database 16, along with the associated transaction metadata 38. The database 16 may later be used to link the codes that are extracted from a marked content to the transaction that caused the creation of that particular content. It should be noted that the marked content may alternatively, or additionally, be viewed and/or transmitted to a remote location for viewing. For example, the marked content may be viewed in real time subsequent to, or during, the forensic marking process. The forensically marked content may also be saved on different kinds of computer readable media, including, but not limited to, DVDs, CDs, Flash memory devices and the like.",
                        "The code generated by the code generator 36 controls the operation of the MUX 34, and governs the selection of content segments from different tributaries. It should be noted that the MUX 34 has access to some or all of the tributaries. As such, the MUX may select the appropriate tributaries from the available tributaries. Alternatively, or additionally, the MUX may request and receive the desired tributaries, or portions thereof, from one or more entities that have access to and/or contain the tributaries. Further, the MUX 34 may comprise various components and subcomponents that allow the selection, retrieval, and assembly of a plurality of content segments. For example, the MUX may be equipped with a processor, memory, and communication ports that allow the implementation and execution of the various data manipulations, as well as data and command input/output operations. To this end, the MUX 34 may be implemented as software, hardware, firmware or combinations thereof. The operation of the MUX 34 may be further illustrated using an example embodiment of the present invention depicted in FIG. 2, in which two one-dimensional tributaries are available for marking a host content using binary watermark symbols. In the example embodiment of FIG. 2, a first tributary 42 may correspond to a compressed version of a host content that is embedded repeatedly and consecutively with all-zero watermark symbols, and a second tributary 44 may correspond to a compressed version of a host content that is embedded repeatedly and consecutively with all-one watermark symbols. Generally, perceptual compression algorithms, such as MPEG or JPEG, divide the host content into compression units or frames, where each compression unit is independently processed and stored. The compression units 48-1, 48-2, . . . , 48-K corresponding to the first tributary 42, and the compression units 50-1, 50-2, . . . , 50-K corresponding to the second tributary 44 are illustrated in FIG. 2. Once a transaction request is initiated, the code generator 36 generates a unique transaction code in accordance with the transaction metadata 38 associated with the transaction request. For example, the code generator 36 may generate a binary code \u201c00101\u201d associated with a particular request. The MUX 34 then selects the appropriate compression units from tributaries according to the code provided by the code generator 36, and assembles the marked content 40 as concatenations of the various segments of the two tributaries. This technique is often referred to as a cut-and-splice procedure.",
                        "The cut-and-splice procedure for forming the forensically marked content 40 corresponding to the exemplary binary code \u201c00101\u201d involves selecting the first compression unit 48-1 from the first tributary 42, the second compression unit 48-2 from the first tributary 42, the third compression unit 50-3 from the second tributary 44, the fourth compression unit 48-4 from the first tributary, and the fifth compression unit 50-5 from the second tributary 44. The forensically marked content 40 may be produced by back-to-back concatenation of the above noted compression units.",
                        "Note that each compression unit should contain information that can be independently interpreted by the matching perceptual decoder to reconstruct the host content. Moreover, the length of the watermark symbol interval should be equal to the length of one or more compression units. That is, a watermark symbol interval may span an integer multiple number of compression units. Additionally, a symbol boundary may substantially match the boundary of a compression unit (or an integer number of compression units). For instance, the example embodiment of FIG. 2 illustrates the case where the bit interval matches the length of one compression unit. Although the above example embodiment have been described using a binary watermarking alphabet, those skilled in the art can readily generalize this procedure to deliver M tributaries to the marking module 14, generate M-ary codes using the code generator 36, and assemble a forensically marked content with M-ary symbols using the MUX.",
                        "In accordance with another example embodiment, only portions of the content may be marked using the above described cut-and-splice technique. In such an example embodiment, the forensically marked content may comprise unmarked sections that are selected from the unmarked tributary (i.e., the output of compressor 30). The unmarked segments of the content may be used, for example, to embed another forensic mark at a different node within the sales/distribution chain of the content.",
                        "FIG. 4 illustrates the marking operations in accordance with an example embodiment of the present invention. Once a request for a particular host content is submitted, the transaction metadata associated with that request is received by the marking module in Step 400. In Step 402, a unique code associated with the received transaction metadata is generated, and in Step 404, this code, along with the appropriate transaction metadata is stored in one or more databases. In Step 406, segments of different tributaries associated with the requested host content are selected in accordance with the generated code. In Step 408, the marked content is generated by back-to-back concatenation of the tributary segments in accordance with the particular order that corresponds to the generated code.",
                        "The above-described cut-and-splice procedure may be adapted to operate with different perceptual compression technologies that utilize compression units of different size. This approach requires more flexibility in selecting and designing the particular parameters associated with watermark embedding technologies. For example, different watermark symbol intervals may need to be selected for Advanced Audio Coding (AAC) audio compression as opposed to MPEG audio compression algorithm. However, this is not a significant restriction since the list of candidate compression technologies is finite. Thus, a set of watermarking parameters that are suitable for use with the most commonly used (or even with an exhaustive list of) compression technologies can be created. Once a compression technology for compression of the host content is selected, the marking of different symbols at the preprocessing stage can be readily conducted in accordance with the watermarking parameters that are suited for that particular compression technology. The extraction of the embedded forensic marks can be similarly conducted using the above-noted list of watermarking parameters. If the content is still in compressed format (or the compression technology is otherwise known), the appropriate watermark parameters associated with that compression technology can be retrieved and used for extracting the embedded watermarks. If the content is not in compressed format (and the compression technology is not otherwise known), watermark extraction may be conducted by selecting candidate watermark parameters, one at a time, in multiple attempts to extract the embedded forensic marks. However, since the code extraction is likely to be conducted in a forensic environment, watermark parameters for a particular content is likely to be known prior to the extraction process (e.g., stored in a database along with transaction metadata). For example, a music track that is released by a certain music studio is likely to be released in only one or two different compressed formats. Accordingly, when such a music track is discovered in a piracy network, watermark parameters associated with one or two candidate compression technologies are merely needed to successfully extract the embedded watermarks.",
                        "By the way of example, and not by limitation, the following provides an detailed example of how watermarking parameters may be adjusted for use with a particular perceptual compression technology. In accordance with this example embodiment, audio watermarking parameters are tailored to be used with AAC compression technology. In AAC, as in most other audio compression technologies, time domain audio samples are first transformed to frequency domain samples. The transformation used in AAC is Modified Discrete Cosine Transform (MDCT) with 50% windowed overlap. The compressed bitstream contains all information needed to reconstruct the spectrum. Frequency domain values in each bitstream unit are independent from those of other units. Note that, with AAC, this occurs when the inter-frame prediction is disabled (prediction can be inter-frame or intra-frame, i.e., between adjacent frames or within one frame). In order to reconstruct the time domain audio samples, an Inverse Modified Discrete Cosine Transform (IMDCT) is performed with 50% windowed overlap. Details of AAC compression and decompression algorithms may be found in various references, for example, in \u201cDai Tracy Yang, Chris Kyriakakis, and C.-C. Jay Kuo, \u201cHigh Fidelity Multichannel Audio Coding\u201d, EURASIP book series on Signal Processing and Communications, 2004.\u201d FIG. 5 illustrates an example string of overlapping windows 60 for compression units with matching watermarking bits.",
                        "Note that in the example embodiment of FIG. 5, two compression units (or frames) are used for embedding one watermark bit. More specifically, in AAC compression, each frame comprises exactly 2048 samples converted into MDCT domain, but in accordance with an example embodiment of the present invention, the start of each frame is shifted by 1024 samples in order to create a 50% overlap. Each frame is 2048 samples, but with 50% overlap, the next frame starts 1024 samples after the start of the current frame. By having a bit interval with 2048 samples, each watermark bit may be selected to span two consecutive frames of a tributary. This way, the middle 1024 samples, where the two frames overlap, carry the undisturbed watermark symbol. On each side, of the undisturbed portion, there are 1024-sample tails that transition into the adjacent bit intervals. Due to the window shape, the watermark bit is dominant in half of the tail on each side of the 1024-sample undisturbed portion, making each bit interval 1024+2*512=2048 samples long. Using this technique, up to 1024 samples of each bit interval may produce interference with the adjacent bit intervals if the adjacent bits are selected from different tributaries. However, if adjacent bits are selected from the same tributary as the current bit tributary, the overlapping bit segments do not produce any interference. In the example case where an audio sampling rate of 44.1 kHz is used, the watermarking bit rate of the forensic mark is 44100/2048=21.533 bits per second.",
                        "Referring back to FIG. 1, the MUX 34 selects the appropriate frames from the tributaries in accordance with the code generated by the code generator 36. Transition from one tributary to another takes place when there is a transition in the generated code from one symbol to another. This transition does not produce noticeable artifacts as long as the tributaries are perceptually similar, and the window shapes associated with the compression technologies of all tributaries are substantially similar to each other. However, if the window shapes are appreciably different, it is possible to create perceptible artifacts at symbol transition points within the marked content.",
                        "In accordance with another example embodiment of the present invention, these perceptible artifacts may be avoided even if the window shapes are not the same. FIG. 6 illustrates the various window shapes that are utilized in the AAC compression algorithm. The top portion of FIG. 6 contains a sequence of the so-called long windows 80. The long windows 80 provide good audio quality for slowly changing audio signals, such as tonal music. However, in the presence of fast changing audio signals, such as a percussion attack, the long windows 80 may introduce undesirable effects of a pre-echo in the audio signal. In this case, a better audio quality is achieved by using the so-called short windows 84-1 to 84-8 that are shown in FIG. 6. The AAC compressor is capable of automatically detecting audio attacks and changing the window shape from long to short, as needed, to provide the desirable audio quality. Note that one compression unit (or frame) carries data that is associated with one long window, or eight short windows. In order to smooth the transition points from a long to a short window, and from a short to a long window, and to avoid audible artifacts, the AAC algorithm introduces two additional windows: a long-start window 82, and a long-stop window 86, as also illustrated in FIG. 6. In AAC, the criterion for design of the transition window is that the squared sum of the first half of the window and the second half of the window should equal to one. Therefore, if a short window is required after several long windows, then the last window before the start of the short window should be a long start window. Similarly, when short window is followed by a long window, the first window after the short window should be a long stop window.",
                        "When AAC audio compression is used to carry out forensic marking according to the various embodiments of the present invention, the transition points from one tributary to another may trigger the selection of a different window type. Typically different tributaries that are created in accordance with the various embodiments of the present invention are perceptually similar. Therefore, the AAC window selection mechanism is likely to detect audio attacks (and switch to short windows) at the same locations within the compression frames of all tributaries. However, occasionally the AAC compressor may select different window types for different tributaries. This disparity of window selection between the different tributaries may create audible artifacts in the forensically marked content. For example, the transition from a tributary frame with a long window to another tributary with a short window, without the intermediate long-start window, may create an audible artifact in the output audio stream since such transition violates the window transition criterion discussed above. One example scenario may involve the case where the percussion attack in the second tributary is detected slightly earlier than in the first tributary, and as a result the position of the short windows are shifted by one frame. So, for example, the first tributary may comprise the following sequence of windows: long, long-start, short, long-stop, while the second tributary may comprise the following sequence: long-start, short, long-stop, long. If now the embedding of the forensic marks necessitates a transition from the first tributary to a second tributary between the first and the second unit of the sequence of windows, the resulting window sequence will be long, short, long-stop, long, which can potentially produce an audio artifact in the middle of the window sequence.",
                        "In order to avoid such perceptible artifacts, the MUX 34 of FIG. 1, in accordance with an example embodiment of the present invention, may be configured to receive information regarding the various window shapes that are employed in frames of different tributaries, whenever a switch between different tributaries is mandated by the generated code. In this example embodiment, if the MUX 34 detects a window mismatch between the tributary frames, switching to the new tributary may be inhibited by asserting a \u201cswitch abandon\u201d action. The switch abandon, when asserted, effectively introduces a symbol error in the embedded forensic marks that are embedded in the host content. FIG. 7 illustrates a block diagram of the different steps involved in determination of a switch abandon assertion. The process starts in Step 700 of FIG. 7 when a transition in the generated forensic mark code value is detected. In Step 702, information regarding the window utilized by the compressor for at least the tributary corresponding to the new symbol value is retrieved. The window information, such as window shape information, is compared to the window information corresponding to the currently used tributary in Step 704. If the window information is the same, switching to the tributary that corresponds to the new symbol value is permitted in Step 708. If the window information is not the same, it is determined, in Step 706, whether or not switching to a different tributary results in perceptible artifacts. For example, if the switching occurs from one tributary having long and long windows, to another tributary with long and long-start windows, there is no need to hold switching, since at the transition moment, long and long-start windows have the same tails. Furthermore, if the transition region coincides with a \u201csilent\u201d portion of the audio content, switching to a different tributary with a different window shape may not produce perceptible artifacts. When no perceptible artifacts are produced, switching to a different tributary is permitted in Step 708. If switching produces perceptible artifacts, the switching may be abandoned in Step 710. As a result of Step 710, the use of the current tributary persists until switching to a new tributary is initiated by another transition in the code value.",
                        "According to the experimental results conducted for audio signals, bit errors introduced as a result of abandon switch assertions are fairly rare, and can be corrected by error correction codes that are normally used in the formation of watermark bit streams. Alternatively, or additionally, bit error locations due to switch abandon assertions can be saved in a database that is accessible to the forensic mark extractor. This information can be used during the extraction process to identify and correct these bit errors.",
                        "The abandon switch may be asserted whenever the concatenation of content segments from different tributaries is likely to create perceptible artifacts. As such, the abandon switch may be asserted not only when window shapes differ (e.g., a mismatch between long and short windows), but also when different types of windows are used. For example, an abandon switch action may be asserted when one tributary is using a Kaiser-Bessel Derived (KBD) window, while the other tributary is using a Sine window. Experimental results on audio signals have confirmed that the number of switch abandon instances depend strongly on the type of perceptual compressor and the operation mode selection used in a particular application. Note that AAC compressor may allow the use of a mixture of KBD and Sine window types, or the use Sine windows only. Since some perceptual compressors do not use Kaiser-Bessel Derived windows at all, the mismatch with Sine window is avoided altogether when such compressors are utilized. Accordingly, if there is some flexibility in selecting a perceptual compressor, it may be advantageous to test multiple compressor candidates to determine which compressor is likely to produce the minimum number, and density, of switch abandon events.",
                        "In the case of a multi-channel content (such as a multi-channel audio content), each channel may be embedded independently, but synchronously, with the same forensic mark. However, in such cases, it may be possible that abandon switch action is asserted in some, but not all, of the channels. This is an undesirable situation since it may lead to the embedding of different symbols in different channels, which may cause audio artifacts. For example, such a mismatch in the embedding of the left and right channels of a stereo signal may cause a shift in space of the sound source, which may or may not result in a significant audio artifact. Furthermore, if an attacker attempts to use a channel mixdown attack (i.e., when two or more channels are mixed into a single channel) to weaken or remove the embedded watermarks, the differing symbols embedded in the corresponding locations of the different channels are likely to interfere with each other. Therefore, in accordance with an example embodiment of the present invention, the assertion of an abandon switch action in one channel may automatically trigger an abandon switch assertion in all other channels at the same content location. Additionally, or alternatively, many perceptual compressors may be configurable to use the same set of compression parameters, such as window shapes, for all channels. By selecting this configuration option, the number and density of abandon switch activations may be further reduced.",
                        "The procedures described above in connection with AAC compression algorithm can be readily applicable to other compression techniques. For example, MPEG-1, 2 and 4 audio compression techniques all use a similar frame structure. In particular, while the frame size of AAC compression is 1024 samples, AACplus frames contain 2048 samples, and MP3 frames contain 1152 samples. Many popular speech codecs, such as CELP, EVRC, AMR, and the like, also use a frame-based compression architecture (e.g., the general frame size is 20 ms), and therefore can be readily adapted for forensic marking in accordance with the various embodiments of the present invention. Typical image and video compression techniques are also similarly designed in accordance with fixed block-size architectures. For example, JPEG compression technique is based on 8\u00d78 DCT transform blocks, which may be treated as one compression unit. JPEG2000 uses wavelet transforms, which are not block based in time domain. However, it is still possible to carryout similar cut-and-splice operations in a compressed transformed domain to apply the forensic marks in accordance with the various embodiments of the present invention to JPEG2000 content. Forensic marking techniques in accordance with the various embodiments of the present invention may also be readily adapted for use with video compression techniques. For example, in MPEG compression algorithm, a video stream is comprised of three different Intra-coded (I), Bi-directional (B), and Predicted (P) frames. P and B frames are predicted from other frames. But I frames are independently compressed and decompressed, and thus can be treated as independent units (or as a still image with multiple independent units) for the purposes of forensic marking in accordance with the various embodiments of the present invention."
                    ],
                    "subsections": [
                        {
                            "title": "Differential Analysis Obstruction",
                            "paragraphs": [
                                "An attacker may attempt to defeat a forensic watermarking system by obtaining two or more copies of the same content marked by distinct forensic marks. By subtracting one copy from the other, the attacker may find content locations that carry different forensic symbols, and obtain the difference between the embedded symbols. By analyzing this difference signal, an attacker may be able to reverse engineer the watermarking technology and find the secret information (i.e., the stego key) used for embedding the forensic marks. Using this information, the attacker may be able to further devise attacks to remove, jam, or even forge the embedded watermarks. In accordance with example embodiments of the present invention, differential analysis attacks on forensically marked content may be thwarted. The disclosed methods may be used separately, or in combination with each other, to obstruct the differential analysis of forensically marked contents.",
                                "In accordance with one example embodiment, one or more signal distortions may be introduced in different tributaries during the preprocessing stage. These distortions, which do not convey any watermark information, must be different in each tributary, and at the same time, must be perceptually insignificant. The introduced distortions effectively mask the presence of the embedded watermarks. An attacker is then faced with the challenge of distinguishing between the components of the difference signal that are truly related to the watermark technology and those that are merely due to the introduced distortion. By the way of example, and not by limitation, non-linear amplitude modification of the content is one such distortion that may be introduced as part of each embedder 18 to 22 functionality in FIG. 1. This distortion may be applied, for example, to each version of the host content, either before or after embedding of the symbol values. This technique produces different distortions in each tributary but has insignificant impact on the embedded host quality.",
                                "FIG. 8(A) shows an example embodiment of the present invention illustrating the application of nonlinear amplitude modification to input samples of a host content. In FIG. 8(A), each input sample 92 of a host content is modified by the non-linear amplitude modifier 90 to produce an output sample 94. FIG. 8(B) illustrates an example plot in the form of an input-output sample characteristic deviating from a straight line that is associated with the non-linear modifier 90 of FIG. 8(A). The straight line 96 is produced when the input and output samples are equal. When non-linear amplitude modification is applied, the output samples deviate from the input samples as illustrated by the characteristic (curved) line 98 of FIG. 8(B). In order to thwart differential analysis of the embedded content, a different characteristic line must be produced for each version of the host content that is subjected to non-linear amplitude modification. However, it is also desirable to make the variations due to non-linear amplitude modification to change slowly and randomly with time to make reverse engineering of the applied distortion more difficult.",
                                "Another candidate distortion for thwarting differential analysis is the introduction of random phase offsets into the host content that is disclosed in the commonly owned U.S. Pat. No. 6,145,081. This distortion may be applied independently to each version of the host content as part of the embedder 18 to 22 functionality. Similar to the above-described non-linear amplitude modification, the introduction of random phase offsets does not produce perceptible artifacts but creates a large difference between the different versions of the host content. This large difference obstructs differential analysis of the content that may be conducted by an attacker to gain insights into the watermarking technology. Note that the technique disclosed in U.S. Pat. No. 6,145,081 introduces a different phase offset into each copy (not tributary) of the fully embedded host content, with the objective to produce annoying artifacts when averaging or splicing attacks are used. In accordance with the example embodiments of the present invention, however, each tributary is subjected to a random phase offset. Accordingly, a forensically marked content may comprise a plurality of sections, where each section has undergone a different random phase modification. Therefore, an attacker is faced with the challenge of defeating a plurality of phase offset distortions.",
                                "In accordance with another embodiment of the present invention, differential attack obstruction may be effected by using two or more distinct watermarking technologies for embedding the same symbol in the same compression unit(s). This way, an attacker is further frustrated by facing the challenge of determining which of the plurality of features of the difference signal is associated with a particular embedding technology.",
                                "In accordance with another embodiment of the present invention, differential analysis obstruction through the introduction of host signal variations may be implemented at the marking stage, after the multiplexing. In devising different techniques to obscure differential analysis of embedded content, the objective is to increase the difference between distinct copies of the marked content by manipulating parameters of compressed domain stream differently for each copy. In accordance with another example embodiment of the present invention, this task may be accomplished in an AAC compressor by introducing small, random amplitude modifications using AAC Fill elements, without introducing noticeable audio artifacts. This process doesn't require decompression of the host content, and thus is computationally inexpensive. At the same time, it effectively masks the watermark features that may be otherwise detectable in the difference signal. Furthermore, the random nature of modifications makes it difficult to reverse engineer the obstruction methodology.",
                                "In one example embodiment, changing the Dynamic Range Control (DRC) in the Fill element of a compressed AAC bitstream may effect masking of the watermark symbols. Note that DRC is part of the regular bitstream for each frame and is used by the AAC decompressor to produce de-compressed audio samples with a proper dynamic range. With DRC bits enabled, the final decompressed audio content is produced according to Equation (1):",
                                "sound_data\u2032=sound_data*\u0394\u2003\u2003(1)",
                                "where sound_data\u2032 represents the decompressed audio samples after applying DRC, sound_data represents the decompressed audio samples before applying DRC, and A is a factor (i.e., a number) that is calculated from the DRC bits in order to produce decompressed audio samples with a proper dynamic range. A detailed description of the various DRC data elements may be found, for example, in \u201cInternational Organisation For Standardisation Organisation Internationale De Normalisation ISO/IEC JTC1/SC29/WG11 Coding Of Moving Pictures And Audio, MPEG-4 Audio.\u201d Note that the absence of DRC bits in the bitstream (i.e., the DRC signaling bit is 0) may be treated as having a \u0394 value of 1. The value of \u0394 can be changed from one compression frame to another, or even from one sub-frame to another sub-frame, depending on the bit information in the DRC bitstream. The higher the number of the sub-frames, the more bits are inserted in the DRC portion of the bitstream. In accordance with an example embodiment of the present invention, in order to obstruct differential analysis of a decompressed content, the value of \u0394 associated with each tributary may be varied from its original value by a small amount in order to effect random amplitude modifications in the decompressed audio samples. Since A is calculated from the DRC bits of the compressed bitstream, by changing and/or inserting a few bits into the DRC portion of each compressed tributary, the final value of the decompressed audio samples may be changed. Since a compressed AAC tributary may not have any DRC bits (i.e., DRC signaling bit is 0), DRC bits may be added to the compressed bitstream in accordance with another example embodiment of the present invention. For example, at least 39 bits per frame may be added to a compressed AAC bitstream to allow the extraction of a \u0394 value from the compressed bit stream (while setting the DRC signaling bit to 1). Note that the addition of such additional bits (e.g., 39 bits) only amounts to about one percent increase in the total number of bits in a frame. If the DRC bits are already present in the bitstream, the modification of these bits to produce a different A value, in accordance to the example embodiments of the present invention, may or may not result in an increase in the total number of bits per frame. Any increase, however, is likely to be very small.",
                                "It is understood that the various embodiments of the present invention may be implemented individually, or collectively, in devices comprised of various hardware and/or software modules and components. These devices, for example, may comprise a processor, a memory unit, an interface that are communicatively connected to each other, and may range from desktop and/or laptop computers, to consumer electronic devices such as media players, mobile devices and the like. For example, referring back to FIG. 1, the Preprocessing and Marking modules may be implemented in software, hardware, firmware, or combinations thereof. Similarly, the various components or sub-components within each module may be implemented in software, hardware, firmware. The connectivity between the modules and/or components within the modules may be provided using any one of the connectivity methods and media that is known in the art, including, but not limited to, communications over the Internet, wired, or wireless networks using the appropriate protocols.",
                                "Various embodiments described herein are described in the general context of methods or processes, which may be implemented in one embodiment by a computer program product, embodied in a computer-readable medium, including computer-executable instructions, such as program code, executed by computers in networked environments. A computer-readable medium may include removable and non-removable storage devices including, but not limited to, Read Only Memory (ROM), Random Access Memory (RAM), compact discs (CDs), digital versatile discs (DVD), etc. Generally, program modules may include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Computer-executable instructions, associated data structures, and program modules represent examples of program code for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps or processes.",
                                "The foregoing description of embodiments has been presented for purposes of illustration and description. The foregoing description is not intended to be exhaustive or to limit embodiments of the present invention to the precise form disclosed, and modifications and variations are possible in light of the above teachings or may be acquired from practice of various embodiments. The embodiments discussed herein were chosen and described in order to explain the principles and the nature of various embodiments and its practical application to enable one skilled in the art to utilize the present invention in various embodiments and with various modifications as are suited to the particular use contemplated. The features of the embodiments described herein may be combined in all possible combinations of methods, apparatus, modules, systems, and computer program products."
                            ],
                            "subsections": [],
                            "outline_long": [
                                "thwart differential analysis attacks",
                                "introduce signal distortions in preprocessing stage",
                                "distortions must be different in each tributary",
                                "distortions must be perceptually insignificant",
                                "introduce non-linear amplitude modification",
                                "apply non-linear amplitude modification to input samples",
                                "produce different distortions in each tributary",
                                "introduce random phase offsets into host content",
                                "apply random phase offsets independently to each version",
                                "create large difference between versions of host content",
                                "use two or more distinct watermarking technologies",
                                "embed same symbol in same compression unit(s)",
                                "introduce host signal variations at marking stage",
                                "manipulate parameters of compressed domain stream",
                                "introduce small, random amplitude modifications",
                                "use AAC Fill elements to introduce modifications",
                                "change Dynamic Range Control (DRC) in Fill element",
                                "effect masking of watermark symbols",
                                "vary value of \u0394 associated with each tributary",
                                "change and/or insert bits into DRC portion of bitstream",
                                "add DRC bits to compressed bitstream",
                                "implement embodiments in devices with hardware/software modules",
                                "execute steps of methods using computer-executable instructions"
                            ],
                            "num_characters": 11886,
                            "outline_medium": [
                                "thwart differential analysis attacks",
                                "introduce signal distortions in preprocessing stage",
                                "apply non-linear amplitude modification to host content",
                                "illustrate non-linear amplitude modification using FIG. 8(A) and FIG. 8(B)",
                                "introduce random phase offsets into host content",
                                "use distinct watermarking technologies for embedding same symbol",
                                "introduce host signal variations at marking stage",
                                "implement differential analysis obstruction using AAC compressor",
                                "change Dynamic Range Control in Fill element of compressed AAC bitstream",
                                "describe implementation of various embodiments in devices and modules",
                                "discuss computer program product and computer-readable medium"
                            ],
                            "outline_short": [
                                "thwart differential analysis attacks",
                                "introduce signal distortions in preprocessing stage",
                                "apply non-linear amplitude modification to host content",
                                "introduce random phase offsets into host content",
                                "use distinct watermarking technologies for embedding symbols"
                            ]
                        }
                    ],
                    "outline_long": [
                        "introduce forensic marks in compressed domain",
                        "describe detection and recovery of forensic marks",
                        "motivate resiliency against collusion attacks and differential analysis",
                        "describe limitations of prior art",
                        "introduce technique of U.S. Pat. No. 6,430,301",
                        "describe limitations of U.S. Pat. No. 6,430,301",
                        "introduce present invention's technique",
                        "describe advantages of present invention's technique",
                        "illustrate block diagram of forensic marking system",
                        "describe preprocessing module",
                        "describe marking module",
                        "describe database",
                        "describe embedder modules",
                        "describe symbol interval",
                        "describe compression of marked host content",
                        "describe storage unit",
                        "describe tributaries",
                        "describe marking module's operation",
                        "describe code generator",
                        "describe transaction metadata",
                        "describe database's role",
                        "describe MUX's operation",
                        "describe MUX's components",
                        "illustrate example embodiment of MUX's operation",
                        "describe compression units",
                        "describe cut-and-splice procedure",
                        "describe assembly of marked content",
                        "describe advantages of present invention's technique",
                        "describe applications of present invention",
                        "describe variations of present invention",
                        "describe benefits of present invention",
                        "conclude description of present invention",
                        "describe compression unit",
                        "define watermark symbol interval",
                        "illustrate example embodiment of FIG. 2",
                        "generalize procedure to M-ary codes",
                        "describe cut-and-splice technique",
                        "illustrate marking operations in FIG. 4",
                        "generate unique code",
                        "store code and transaction metadata",
                        "select tributary segments",
                        "generate marked content",
                        "adapt cut-and-splice procedure to different compression technologies",
                        "select watermarking parameters",
                        "extract embedded forensic marks",
                        "describe example of watermarking parameters for AAC compression",
                        "illustrate example string of overlapping windows",
                        "describe embedding watermark bits",
                        "describe transition from one tributary to another",
                        "avoid perceptible artifacts",
                        "illustrate window shapes in AAC compression",
                        "describe long and short windows",
                        "describe long-start and long-stop windows",
                        "smooth transition points",
                        "detect audio attacks",
                        "select different window types",
                        "create audible artifacts",
                        "inhibit switching to new tributary",
                        "assert switch abandon action",
                        "determine switch abandon assertion",
                        "permit switching to new tributary",
                        "correct bit errors",
                        "save bit error locations",
                        "assert abandon switch in multi-channel content",
                        "configure perceptual compressors",
                        "apply procedures to other compression techniques",
                        "describe MPEG-1, 2, and 4 audio compression",
                        "describe speech codecs",
                        "describe image and video compression techniques",
                        "apply forensic marking to JPEG2000 and video compression"
                    ],
                    "num_characters": 35396,
                    "outline_medium": [
                        "introduce forensic marks in compressed domain",
                        "describe detection and recovery of forensic marks",
                        "motivate resiliency against collusion attacks and differential analysis",
                        "summarize limitations of prior art (U.S. Pat. No. 6,430,301)",
                        "introduce advantages of present invention over prior art",
                        "describe block diagram for embedding forensic marks (FIG. 1)",
                        "explain preprocessing module and embedder modules",
                        "describe compression of marked host content",
                        "define symbol interval and its application",
                        "explain marking module and its operation",
                        "describe flow diagram of preprocessing operations (FIG. 3)",
                        "introduce code generator and transaction metadata",
                        "explain operation of multiplexer (MUX) and selection of content segments",
                        "illustrate example embodiment of MUX operation (FIG. 2)",
                        "describe cut-and-splice procedure for forming marked content",
                        "summarize advantages of present invention",
                        "describe compression unit structure",
                        "explain watermark symbol interval",
                        "illustrate example embodiment of FIG. 2",
                        "describe cut-and-splice technique for partial marking",
                        "illustrate marking operations in FIG. 4",
                        "describe adaptation to different compression technologies",
                        "explain watermark extraction process",
                        "provide detailed example of watermarking parameters for AAC compression",
                        "illustrate example string of overlapping windows in FIG. 5",
                        "describe MUX operation in FIG. 1",
                        "explain avoidance of perceptible artifacts",
                        "illustrate window shapes in AAC compression in FIG. 6",
                        "describe transition window design criterion",
                        "explain avoidance of audible artifacts in AAC compression",
                        "illustrate determination of switch abandon assertion in FIG. 7",
                        "describe error correction and bit error location saving",
                        "explain abandon switch assertion in multi-channel content",
                        "describe applicability to other compression techniques",
                        "provide examples of image and video compression techniques"
                    ],
                    "outline_short": [
                        "introduce forensic marking in compressed domain",
                        "motivate resiliency against collusion attacks and differential analysis",
                        "describe limitations of prior art (U.S. Pat. No. 6,430,301)",
                        "summarize advantages of present invention over prior art",
                        "illustrate block diagram for embedding forensic marks",
                        "describe preprocessing stage (embedding and compression)",
                        "explain marking module operation (combining tributaries)",
                        "illustrate example embodiment of marking process using binary watermark symbols",
                        "describe compression unit structure",
                        "illustrate watermark embedding procedure",
                        "explain watermark extraction process",
                        "discuss adapting watermarking parameters for AAC compression",
                        "describe avoiding perceptible artifacts in marked content",
                        "illustrate window shapes in AAC compression",
                        "explain switch abandon mechanism",
                        "discuss applying forensic marking to multi-channel content",
                        "generalize forensic marking to other compression techniques"
                    ]
                }
            ],
            "outline_long": [],
            "num_characters": 0,
            "outline_medium": [],
            "outline_short": []
        }
    ],
    "claims": [
        "1. A method comprising:\nreceiving metadata associated with a request for a host content at a marking module;\ngenerating a code with a code generator in accordance with the metadata;\nselecting a plurality of content segments from a plurality of tributaries that are in compressed domain in accordance with the code, the tributaries comprising one or more versions of the host content having been contiguously embedded with a unique string of watermark symbols and compressed thereafter;\nassembling the segments to produce a forensically marked host content in compressed domain; and\ndelivering the forensically marked host content to at least one of a content handling device or a computer readable storage medium.",
        "2. The method of claim 1, wherein the metadata comprises information for identifying the request, the information comprising at least one of a transaction identification, intended destination of the forensically marked host content, and time, date, and source of the request",
        "3. The method of claim 1, wherein the tributaries comprise an unmarked host content.",
        "4. The method of claim 1, wherein the tributaries comprise compression units, each compression unit having been embedded with a watermark symbol, and each compressing unit corresponding to at least one of a time, a space, and a time-and-space domains.",
        "5. The method of claim 4, wherein the watermark symbol spans an integer multiple number of the compression units.",
        "6. The method of claim 1, wherein the host content is an audio content, and the tributaries are produced using at least one of an AAC, AACplus, and MP3 compression techniques.",
        "7. The method of claim 1, wherein the host content is an audio content, the tributaries are compressed using a AAC compressor, and the selecting comprises:\nselecting a first segment from a first tributary in accordance with a first symbol of the code;\nselecting a second segment in accordance with a second symbol of the code, wherein:\nif the second symbol is the same as the first symbol, selecting the second segment from the first tributary, and\nif the second symbol is different from the first symbol, selecting the second segment from a second tributary.",
        "8. The method of claim 7, wherein if selecting the second segment from a second tributary creates perceptual artifacts, selecting the second segment from the first tributary.",
        "9. The method of claim 1, wherein the tributaries are modified in accordance with one or more distortions.",
        "10. The method of claim 9, wherein the distortions comprise at least one of non-linear amplitude modifications of the host content samples, phase offsets applied to the plurality of tributaries, and modifying Dynamic Range Control (DRC) bits associated with the tributaries that are in AAC format.",
        "11. An apparatus comprising:\na receiver configured to receive metadata associated with a request for a host content;\na code generator configured to generate a code in accordance with the metadata;\na selector configured to select a plurality content segments from a plurality of tributaries that are in compressed domain in accordance with the code, the tributaries comprising one or more versions of the host content having been contiguously embedded with a unique string of watermark symbols and compressed thereafter; and\nan assembly means configured to assemble the segments to produce a forensically marked host content in compressed domain.",
        "12. The apparatus of claim 11, wherein the metadata comprises information for identifying the request, the information comprising at least one of a transaction identification, intended destination of the forensically marked host content, and time, date, and source of the request.",
        "13. The apparatus of claim 11, wherein the selector is configured to select one or more content segments from a tributary that comprise an unmarked host content.",
        "14. The apparatus of claim 11, wherein the selector is configured to select one or more content segments from the tributaries comprising compression units, each compression unit having been embedded with a watermark symbol, and each compressing unit corresponding to at least one of a time, a space, and a time-and-space domains.",
        "15. The apparatus of claim 14, wherein the watermark symbol spans an integer multiple number of the compression units.",
        "16. The apparatus of claim 11, wherein the host content is an audio content, and the tributaries are produced using at least one of an AAC, AACplus, and MP3 compression techniques.",
        "17. The apparatus of claim 11, wherein the host content is an audio content, the tributaries are produced using a AAC compressor, and the selector is configured to:\nselect a first segment from a first tributary in accordance with a first symbol of the code; and\nselect a second segment in accordance with a second symbol of the code, wherein:\nif the second symbol is the same as the first symbol, the selector is configured to select the second segment from the first tributary, and\nif the second symbol is different from the first symbol, the selector is configured to select the second segment from a second tributary.",
        "18. The apparatus of claim 17, wherein if selecting the second segment from a second tributary creates perceptual artifacts, the selector is configured to select the second segment from the first tributary.",
        "19. The apparatus of claim 11, further configured to modify the tributaries in accordance with one or more distortions.",
        "20. The apparatus of claim 19, wherein the distortions comprise at least one of non-linear amplitude modifications of the host content samples, phase offsets applied to the plurality of tributaries, and modifying Dynamic Range Control (DRC) bits associated with the tributaries that are in AAC format.",
        "21. A computer program product, embodied on a computer readable medium, the computer program product comprising:\na computer code for receive metadata associated with a request for a host content;\na computer code for generating a code in accordance with the metadata;\na computer code for selecting a plurality of content segments from a plurality of tributaries that are in compressed domain in accordance with the code, the tributaries comprising one or more versions of the host content having been contiguously embedded with a unique string of watermark symbols and compressed thereafter; and\na computer code for assembling the segments to produce a forensically marked host content in compressed domain.",
        "22. The computer program product of claim 21, wherein the metadata comprises information for identifying the request, the information comprising at least one of a transaction identification, intended destination of the forensically marked host content, and time, date, and source of the request.",
        "23. The computer program product of claim 21, wherein the tributaries comprise an unmarked host content.",
        "24. The computer program product of claim 21, wherein the tributaries comprise compression units, each compression unit having been embedded with a watermark symbol, and each compressing unit corresponding to at least one of a time, a space, and a time-and-space domains.",
        "25. The computer program product of claim 24, wherein the watermark symbol spans an integer multiple number of the compression units.",
        "26. The computer program product of claim 21, wherein the host content is an audio content, and the tributaries are produced using at least one of an AAC, AACplus, and MP3 compression techniques.",
        "27. The computer program product of claim 21, wherein the host content is an audio content, the tributaries are produced using a AAC compressor, and the selecting comprises:\nselecting a first segment from a first tributary in accordance with a first symbol of the code;\nselecting a second segment in accordance with a second symbol of the code, wherein:\nif the second symbol is the same as the first symbol, selecting the second segment from the first tributary, and\nif the second symbol is different from the first symbol, selecting the second segment from a second tributary.",
        "28. The computer program product of claim 27, wherein if selecting the second segment from a second tributary creates perceptual artifacts, selecting the second segment from the first tributary.",
        "29. The computer program product of claim 21, wherein the tributaries are modified in accordance with one or more distortions.",
        "30. The computer program product of claim 29, wherein the distortions comprise at least one of non-linear amplitude modifications of the host content samples, phase offsets applied to the plurality of tributaries, and modifying Dynamic Range Control (DRC) bits associated with the tributaries that are in AAC format.",
        "31. A method comprising:\nembedding a host content contiguously with a first watermark symbol at a preprocessing module to produce a first embedded host content;\ncompressing the first embedded host content to produce a first tributary;\nproducing a second tributary comprising a compressed content; and\nmaking available the first and the second tributaries to a marking module on a processing device, wherein selection and assembly by the marking module of a plurality of content segments from the first and second tributaries in accordance with a generated code produces a forensically marked host content in compressed domain.",
        "32. The method of claim 31, wherein the second tributary is produced by compressing an unmarked host content.",
        "33. The method of claim 31, wherein the second tributary is produced by:\nembedding the host content contiguously with a second watermark symbol to produce a second embedded host content; and\ncompressing the second embedded host content.",
        "34. An apparatus comprising:\nan embedder configured to embed a host content contiguously with a first watermark symbol to produce a first embedded host content;\na compressor configured to compress the first embedded host content and a second content to produce a first tributary and a second tributary, respectively, wherein selection and assembly of a plurality of content segments from the first and second tributaries in accordance with a generated code produces a forensically marked host content in compressed domain.",
        "35. The apparatus of claim 34, wherein the second content comprises an unmarked host content.",
        "36. The apparatus of claim 34, wherein the embedder is configured to produce the second content by embedding the host content contiguously with a second watermark symbol.",
        "37. A computer program product, embodied on a computer readable medium, comprising:\nprogram code for embedding a host content contiguously with a first watermark symbol at a preprocessing module to produce a first embedded host content;\nprogram code for compressing the first embedded host content to produce a first tributary;\nprogram code for producing a second tributary comprising a compressed content, wherein selection and assembly of a plurality of content segments from the first and second tributaries in accordance with a generated code produces a forensically marked host content in compressed domain.",
        "38. The computer program product of claim 37, comprising program code for producing the second tributary by compressing an unmarked host content.",
        "39. The computer program product of claim 37, comprising\nprogram code for embedding the host content contiguously with a second watermark symbol to produce a second embedded host content; and\nprogram code for producing the second tributary by compressing the second embedded host content."
    ]
}