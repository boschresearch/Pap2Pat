{
    "id": "https://semopenalex.org/work/W2081947144",
    "authors": [
        "Toshio Haga",
        "Fatih Porikli",
        "Yuri Ivanov"
    ],
    "title": "Robust Abandoned Object Detection Using Dual Foregrounds",
    "date": "2007-10-22",
    "abstract": "As an alternative to the tracking-based approaches that heavily depend on accurate detection of moving objects, which often fail for crowded scenarios, we present a pixelwise method that employs dual foregrounds to extract temporally static image regions. Depending on the application, these regions indicate objects that do not constitute the original background but were brought into the scene at a subsequent time, such as abandoned and removed items, illegally parked vehicles. We construct separate long- and short-term backgrounds that are implemented as pixelwise multivariate Gaussian models. Background parameters are adapted online using a Bayesian update mechanism imposed at different learning rates. By comparing each frame with these models, we estimate two foregrounds. We infer an evidence score at each pixel by applying a set of hypotheses on the foreground responses, and then aggregate the evidence in time to provide temporal consistency. Unlike optical flow-based approaches that smear boundaries, our method can accurately segment out objects even if they are fully occluded. It does not require on-site training to compensate for particular imaging conditions. While having a low-computational load, it readily lends itself to parallelization if further speed improvement is necessary.",
    "sections": [
        {
            "title": "INTRODUCTION",
            "paragraphs": [
                "Conventional approaches on abandoned item detection can be grouped as motion detectors [1][2][3], object classifiers [4], and tracking-based analytics approaches [5][6][7][8][9][10].",
                "In [2], a dense optical flow map is estimated to infer the foreground objects moving in opposite directions, moving in a group, and staying stationary by predetermined rules. In [3], a pixel-based method for characterizing objects introduced into the static scene by comparing the background image estimated from the current frame with the previous ones is described. This approach requires storing as many backgrounds as the minimum detection duration in the memory and causes ghost detections even after the abandoned item is removed from the scene.",
                "Recently, an online classifier [4] that incorporates a boosting-based feature selection to label image blocks as background, valid objects, and unidentified regions is presented. This method adapts itself to the depicted scene, however, fails short of discriminating moving objects from stationary ones. Classifier-based methods face with the challenge of dealing with unknown object type as such objects can vary from small luggage to ski bags.",
                "A considerable amount of effort has been devoted to hypothesize abandoned items by analyzing object trajectories [5-7, 9, 10] in multicamera setups. In principle, these methods require solving a harder problem of object initialization and tracking as an intermediate step in order to identify the parts of the video frames corresponding to an abandoned object. It is often assumed that the background scene is nearly static or periodically varying, while the foreground comprises groups of pixels that are different from the background. However, object detection in crowded scenes, especially for uncontrolled real-life situations, is problematic due to the partial occlusions, heavy shadows, people entering the scene together, and so forth. Moreover, object appearance is often indiscriminative as people tend to dress in similar colors, which leads inaccurate tracking results.",
                "For static camera setups, background subtraction provides strong cues for apparent motion statistics. Various background generation methods have been employed in a quest for a system that is robust to changing illumination conditions, appearance variations, shadows, camera jitter, and severe noise. Parametric mixture models are employed to handle such variations. Stauffer and Grimson [11] propose an expectation maximization-(EM-) based adaptation method to learn a mixture of Gaussians with predetermined number of models at each pixel using fixed learning parameters. The online EM update causes a weak model, which has a larger variance, to be dissolved into a dominant model, which has a smaller variance in case the mean value of the weak model is close to the mean of the dominant one. To address this issue, Porikli and Tuzel [12] develop an online Bayesian update mechanism for adaptation multivariate Gaussian distributions. This method estimates the number of necessary layers for each pixel and the posterior distributions of mean and covariance of each layer by assuming the data to be normally distributed with mean and covariance as random variables.",
                "There are other variants of the mixture of models that use modified feature spaces, image gradients, optical flow, and region segmentation [13][14][15]. Instead of iteratively updating models as mixture methods, nonparametric kernel density estimation [16] stores a large number of previous frames and estimates weights of multiple kernel functions. Since both memory and computational complexity proportionally increases with the number of stored frames, kernel methods are usually impractical for real-time applications.",
                "There exists a class of problems that cannot be solved by the traditional foreground-background detection methods. For instance, objects deliberately abandoned in public places, such as suitcases, packages, do not fall into either of these two categories. They are static; therefore, they should be labeled as background. On the other hand, they should not be ignored as they do not belong to the original scene background. Depending on the learning rate, the pixels corresponding to the temporary static objects can be mistaken as a part of the scene background (in case of a high-learning rate), or grouped with the moving regions (low-learning rate). A single background is not sufficient to separate the temporarily static pixels from the scene background.",
                "In this paper, we propose a pixel-based method that employs dual foregrounds. Our motivation is that by changing the background learning rate, we can adjust how soon a static object should be blended into the background. Therefore, temporarily static image regions can be distinguished from the longer term background and moving regions by analyzing multiple foregrounds of different learning rates. This simple idea is wrapped into our adaptive background estimation algorithm, where the slowly adapting background and the fast adapting foreground are aggregated into an evidence image. We impose different learning rates by processing video at different temporal resolutions. The background models have identical initial parameters, thus they require minimal fine tuning in the setup stage. The evidence statistics are used to extract temporarily static image areas, which may correspond to abandoned items, illegally parked vehicles, objects removed from the scene, and so forth, depending on the application.",
                "Our method does not require object initialization, tracking, or offline training. It accurately segments objects even if they are fully occluded. It has a very low-computational load and readily lends itself to parallelization if further speed improvements are necessary. In the subsequent sections, we give details of the dual foregrounds, show Bayesian adaptation method, and present results on real-world data."
            ],
            "subsections": []
        },
        {
            "title": "DUAL FOREGROUNDS",
            "paragraphs": [
                "To detect an abandoned item (or an illegally parked vehicle, removed article, etc.), we need to know how it alters the temporal and spatial statistics of the video data. We built our method on the fact that an abandoned item is not a part of the original scene, it was brought into the scene not that long ago, and it remained still after it has been left. In other words, it is a temporarily static object which was not there before. This means that by learning the prolonged static scene and the moving foreground regions, we can hypothesize on whether a pixel corresponds to an abandoned item or not.",
                "A scene background can be determined by maintaining a statistical model that captures the most consistent modes of the color distribution of each pixel in extended durations of time. From this background, the changed pixels that do not fit into the statistical models are obtained. However, depending on the learning rate, the pixels corresponding to the temporary static objects can be mistaken as a part of the scene background (higher-learning rates), or grouped with the moving regions (lower-learning rates). A single background is not sufficient to separate the temporarily static pixels from the scene background.",
                "As opposed to single background approaches, we use two backgrounds to obtain both the prolonged (long-term) background B L and the temporarily static (short-term) background B S . Note that it is possible to improve the temporal granularity by employing more than two backgrounds at different learning rates. Each of these backgrounds is defined as a mixture of Gaussian models. We represent a pixel as layers of 3D multivariate Gaussians where each dimension corresponds to a color channel. Each layer models to a different appearance of the pixel. We perform our operations on the RGB color space. We apply a Bayesian update mechanism. At each update, at most one layer is updated with the current observation. This assures the minimum overlap over the layers. We also determine how many layers are necessary for each pixel and use only those layers during the foreground segmentation phase. This is performed with  an embedded confidence score. Both of the backgrounds have identical initial parameters, such as the initial mean and variance of the marginal posterior distribution, the degrees of freedom, and the scale matrix, except the number of the prior measurements, which is used as a learning parameter.",
                "At every frame, we estimate the long and short term foregrounds by comparing the current frame I by the background models B L and B S . We obtain two binary foreground masks F L and F S , where F(x, y) = 1 indicates that the pixel (x, y) is changed. The long term foreground mask F L shows the color variations in the scene that were not there before including moving objects, temporarily static objects, as well as moving cast shadows and illumination changes that the background models fail to adapt. The short-term foreground mask F S contains the moving objects, noise, and so forth. Depending on the foreground mask values, we postulate the following hypotheses as shown in Figure 1.",
                "(1) F L (x, y) = 1 and F S (x, y) = 1, where (x, y) is a pixel that may correspond to a moving object since I(x, y) does not fit any backgrounds.",
                "(2) F L (x, y) = 1 and F S (x, y) = 0, where (x, y) is a pixel that may correspond to a temporarily static object.",
                "(3) F L (x, y) = 0 and F S (x, y) = 1, where (x, y) is a scene background pixel that was occluded before.",
                "(4) F L (x, y) = 0 and F S (x, y) = 0, where (x, y) is a scene background pixel since its value I(x, y) fits both backgrounds B L and B S .",
                "The short term background is updated at a higherlearning rate than the long-term background. Thus, the short-term background adapts to the underlying distribution faster and the changes in the scene are blended more rapidly. In contrast, the long-term background is more resistant against the changes.",
                "Sort layers according to confidence measure defined in (11). i \u2190 1."
            ],
            "subsections": []
        },
        {
            "title": "While i < k",
            "paragraphs": [
                "Measure Mahalanobis distance:",
                "then update model parameters according to (6), and stop. else update model parameters according to (13). i \u2190 i + 1 Delete layer k, initialize a new layer having parameters defined in (7)."
            ],
            "subsections": []
        },
        {
            "title": "Algorithm 1",
            "paragraphs": [
                "In case a scene background pixel changes temporarily then sets back to its original value, the long-term foreground mask will be zero; F L (x, y) = 0. The short term background is pliant and adapts itself during this time, which causes F S (x, y) = 1. We assume it takes more time to adapt the long-term background to the newly observed color than the change period. A changed pixel will be blended into the short-term background, that is, F S (x, y) = 0, if it keeps its new color long enough. If this duration is not prolonged enough to blend it, the long term-foreground mask will be one; F L (x, y) = 1. This is the common case for the abandoned items. If no change is observed in neither of the backgrounds F L (x, y) = 0 and F S (x, y) = 0, the pixel is considered as a part of the static scene background as the pixel has the same value for much longer periods of time.",
                "The dual foreground mechanism is illustrated in Figure 2. In this simplified drawing, the horizontal axis corresponds to time and the vertical axis to the confidence of the background model. Action indicates that the pixel color has significantly changed. Label represents the result of the above hypotheses. For pixels with relatively short duration of change, the confidences of the long-or short-term models do not increase enough to make them valid backgrounds. Thus, such pixels are labeled as moving object. Whenever the short-term model blends the pixel in the background but the long-term model still marks it as foreground, the pixel is considered to belong to the abandoned item. Finally, if the pixel change takes even longer, the pixel is labeled as a scene background. Sample foregrounds that show these cases are given in Figure 3.",
                "We aggregate the framewise detection results into an evidence image E(x, y) by updating the pixelwise values at each frame as",
                "where max e and k are positive numbers. The evidence image enables removing noise in the detection process. It also controls the minimum time required to assign a static pixel as an abandoned item. For each pixel, the evidence image collects the motion statistics. Whenever it elevates up to a preset level E(x, y) > max e , we mark the pixel as an abandoned item pixel and raise an alarm flag. The evidence threshold max e is defined in term of the number of frames and it can be chosen depending on the desired responsiveness and noise characteristics of the system. In case the foreground detection process produces noisy results, higher values of max e should be preferred. High values of max e lower the false alarm rate. On the other hand, the higher the preset level gets, the longer the minimum duration a pixel takes to be classified as a part of an abandoned item. A typical range of the evidence threshold max e is 300 frames. The decay constant k determines how fast the evidence should decrease. In other words, it decides what should happen in case a pixel that is marked as an abandoned item is blended into the scene background or gets its original value before the marking. To set the alarm flag off immediately after the removal of object, the value of decay should be large, for example, k = max e . This means that there is only a single parameter to set for the likelihood image. In our experiments, we observed that the larger values of decay constant generate satisfying results.",
                "In the following section, we describe the adaptation of the long-and short-term background models by a Bayesian update mechanism."
            ],
            "subsections": []
        },
        {
            "title": "BAYESIAN UPDATE",
            "paragraphs": [
                "Our background model [12] is similar to adaptive mixture models [11] but instead of mixture of Gaussian distributions, we define each pixel as layers of 3D multivariate Gaussians. Each layer corresponds to a different appearance of the pixel. Using Bayesian approach, we are not estimating the mean and variance of the layer, but the probability distributions of mean and variance. We can extract statistical information regarding these parameters from the distribution functions. For now, we are using expectations of mean and variance for change detection, and variance of the mean for confidence."
            ],
            "subsections": [
                {
                    "title": "Layer model",
                    "paragraphs": [
                        "Data is assumed to be normally distributed with mean \u03bc and covariance \u03a3. Mean and variance are assumed unknown and  modeled as random variables. Using Bayesian theorem, joint posterior density can be written as",
                        "To perform recursive Bayesian estimation with the new observations, joint prior density p(\u03bc, \u03a3) should have the same form with the joint posterior density p(\u03bc, \u03a3 | X). Conditioning on the variance, joint prior density is written as",
                        "The above condition is realized if we assume inverse Wishart distribution for the covariance and, conditioned on the covariance, multivariate normal distribution for the mean. Inverse Wishart distribution is a multivariate generalization of scaled inverse \u03c7 2 -distribution. The parametrization is",
                        "where \u03c5 t-1 and \u039b t-1 are the degrees of freedom and scale matrix for inverse Wishart distribution, \u03b8 t-1 is the prior mean, and \u03ba t-1 is the number of prior measurements. With these assumptions, joint prior density becomes",
                        "\u00d7 e (-(1/2)tr(\u039bt-1\u03a3 -1 )-(\u03bat-1)/2(\u03bc-\u03b8t-1) T \u03a3 -1 (\u03bc-\u03b8t-1)) (",
                        "for three-dimensional feature space. Let this density be labeled as normal inverse Wishart (\u03b8 t-1 , \u039b t-1 /\u03ba t-1 ; \u03c5 t-1 , \u039b t-1 ). Multiplying prior density with the normal likelihood and arranging the terms, joint posterior density becomes normal inverse Wishart (\u03b8 t , \u039b t /\u03ba t ; \u03c5 t , \u039b t ) with the parameters updated:",
                        "where x is the mean of new samples and n is the number of samples used to update the model. If update is performed at each time frame, n becomes one. To speed up the system, update can be performed at regular time intervals by storing the observed samples. During our tests, we update one quarter of the background at each time frame, therefore n becomes four. The new parameters combine the prior information with the observed samples. Posterior mean \u03b8 t is a weighted average of the prior mean and the sample mean. The posterior degrees of freedom is equal to prior degrees of freedom plus the sample size. System is started with the following initial parameters:",
                        "where I is the three-dimensional identity matrix.",
                        "Integrating joint posterior density with respect to \u03a3, we get the marginal posterior density for the mean",
                        "where t \u03c5t-2 is a multivariate t-distribution with \u03c5 t -2 degrees of freedom. We use the expectations of marginal posterior distributions for mean and covariance as our model parameters at ",
                        "whereas expectation of marginal posterior covariance (expectation of inverse Wishart distribution) becomes",
                        "Our confidence measure for the layer is equal to one over determinant of covariance of \u03bc | X:",
                        "If our marginal posterior mean has larger variance, our model becomes less confident. Note that variance of multivariate t-distribution with scale matrix \u03a3 and degrees of freedom \u03c5 are equal to \u03c5/(\u03c5 -2)\u03a3 for \u03c5 > 2.",
                        "System can be further speeded up by making independence assumption on color channels. Update of full covariance matrix requires computation of nine parameters. Moreover, during distance computation, we need to invert the full covariance matrix. To speed up the system, we use three univariate Gaussians corresponding to each color channel. After updating each color channel independently, we join the variances and create a diagonal covariance matrix",
                        "In this case, for each univariate Gaussian, we assume scaled inverse \u03c7 2 -distribution for the variance and conditioned on the variance univariate normal distribution for the mean."
                    ],
                    "subsections": []
                },
                {
                    "title": "Background update",
                    "paragraphs": [
                        "We initialize our system with k-layers for each pixel. Usually, we select three-five layers. In more dynamic scenes, more layers are required. As we observe new samples for each pixel, we update the parameters for our background model. We start our update mechanism from the most confident layer in our model. If the observed sample is inside the 99% confidence interval of the current model, parameters of the model are updated as explained in (6). Lower confidence models are not updated.",
                        "For background modeling, it is useful to have a forgetting mechanism so that the earlier observations have less effect on the model. Forgetting is performed by reducing the number of prior observation parameter of unmatched model. If current sample is not inside the confidence interval, we update the number of prior measurements parameter,",
                        "and proceed with the update of next confident layer. We do not let \u03ba t become less than initial value 10. If none of the models is updated, we delete the least confident layer and initialize a new model having current sample as the mean and an initial variance (7). The update algorithm for a single pixel can be summarized as shown in Algorithm 1 With this mechanism, we do not deform our models with noise or foreground pixels, but easily adapt to smooth intensity changes like lighting effects. Embedded confidence score determines the number of layers to be used and prevents unnecessary layers. During our tests, usually secondary layers correspond to shadowed form of the background pixel or different colors of the moving regions of the scene. If the scene is unimodal, confidence scores of layers other than first layer become very low."
                    ],
                    "subsections": []
                },
                {
                    "title": "Foreground segmentation",
                    "paragraphs": [
                        "Learned background statistics are used to detect the changed regions of the scene. We determine how many layers are necessary for each pixel and use only those layers during foreground segmentation phase. The number of layers required to represent a pixel is not known beforehand, so background is initialized with more layers than needed. Usually, we select three to five layers. In more dynamic scenes, more layers are required. Using the confidence scores, we determine how many layers are significant for each pixel. As we observe new samples for each pixel, we update the parameters for our background model. At each update, at most one layer is updated with the current observation. This assures the minimum overlap over layers. We order the layers according to   confidence score and select the layers having confidence value greater than the layer threshold. We refer to these layers as confident layers. We start the update mechanism from the most confident layer. If the observed sample is inside the 2.5\u03c3 of the layer mean, which corresponds to 99% confidence interval of the current model, parameters of the model are updated. Lower confidence models are not updated."
                    ],
                    "subsections": []
                }
            ]
        },
        {
            "title": "EXPERIMENTAL RESULTS",
            "paragraphs": [
                "To evaluate the dual foreground method, we used several public datasets from PETS 2006, i-LIDS 2007, and Advanced Technology Center. We tested a total of 32 sequences grouped into 10 sets. The videos have assorted resolutions; 180 \u00d7 144, 320 \u00d7 240, and 640 \u00d7 480. The scenarios ranged from lunch rooms to underground train stations. Half of these sequences depict scenes that are not crowded. Other sequences contain complex scenarios with multiple people sitting, standing, and walking at variable speeds. Some sequences show vehicles parked. The abandoned items are left in different durations from 10 seconds to 2 minutes. Some sequences contained small abandoned items. A few sequences have multiple abandoned items.",
                "The sets AB-Easy, AB-Medium, and AB-Hard, which are included in i-LIDS challenge, are recorded in an underground train station. Set PETS is a large closed space platform with restaurants. Sets ATC-1 and ATC-2 are recorded from a wide angle camera of a cafeteria. Sets ATC-3 and ATC-4 are different cameras from a lunch room. Set ATC-5 is a waiting lounge. Since the proposed method is a pixelwise scheme, it is not difficult to set detection areas in the initialization time. We manually marked the platform in   AB-easy, AB-medium, and AB-hard sets, the waiting area in PETS 2006 set, and the illegal parking spots in PV-easy, PVmedium, and PV-hard sets. For the ATC sets, all of the image area is used as the detection area. For i-LIDS sets, we replaced the beginning parts of the video sequences with 4 frames of the empty platform.",
                "For all results, we set the learning rate of the short-term background at 30 times the learning rate of the long-term background. We assigned the evidence threshold max e in the range [50, 500] depending on the desired responsiveness time that controls how soon an abandoned item is detected as an alarm. We used k = 1 as the decay parameter.",
                "Figure 4 shows the detection results for the i-LIDS datasets. We reported the performance scores of all sets in Table 1, where T all is the total number of frames in a set and T event is the duration of the event in terms of the number of frames. We measure the duration right after an item has been left behind. It is also possible to measure the duration after the person moved away or after some preset waiting time in case additional tracking information is incorporated. Events indicates the number of abandoned objects (for PV-medium, the number of the illegally parked vehicles). TD means the correctly detected objects. A detection event is considered to be both spatially and temporally continuous. In other words, there might be multiple detections for a frame if the objects are spatially disconnected. FA shows the falsely detected objects. T true and T false are the duration of the correct and false detections. T miss is the duration that an abandoned item could not be detected. Since we start an event as soon as an object is left, this score does not consider any waiting time. This means that we overestimate our miss rate.",
                "As our results show, we successfully detected almost all abandoned items while achieving a very low false alarm rate. Our method performed satisfactory when the initial frame  showed the actual static background. The detection areas have not included any people at the initialization time in the ATC sets, thus the uncontaminated backgrounds are easily learned. This is also true for the PV and AB-easy sets. However, the AB-medium and AB-hard sets contained several stationary people in the initial frames. This resulted in false detections when those people moved away. Since the background models eventually learn the statistically dominant color values, such false alarms should not occur in the long run due to the fact that the background will be more visible than the people. In other words, the ratio of the false alarms should decrease in time. We do not learn the color distribution of the abandoned items (or parked vehicles), thus the proposed method can detect them even if they are occluded. As long as the occluding object, for example, a passing by person, has different color than the long-term back-ground, our method still shows the boundary of the abandoned item.",
                "Representative detection results are given in Figures 56789101112. As visible, none of the moving objects, moving shadows, people that are stationary in shorter durations was falsely detected. Besides, there are no ghost false detections due the inaccurate blending of the abandoned items in the longterm background. Thanks to the Bayesian update, the changing illumination conditions as in PV-medium are properly adapted in the backgrounds.",
                "Another advantage of this method is that the alarm is immediately set of as soon as the abandoned item is removed from its previous position. Although we do not know whether the person who left the object is moved away from the object or not, we consider this property as a superiority over the tracking-based approaches that require a decision  There is significant motion all around the scene. To make things more challenging, the person who leaves his back bag after stays still for an extended period of time.  net of heuristic rules and context-depended priors to detect such event.",
                "One shortcoming is that it cannot discriminate the different types of objects, for example, a person who is stationary for a long time can be detected as an abandoned item. This can be, however, an indication of another suspicious behavior as it is not common. To determine object types and reduce the false alarm rate, object classifiers, that is, a human or a vehicle detector, can be used. Since such classifiers are only for verification purposes, their computation time should be negligible. Since no tracking is integrated, trajectory-based semantics, for example, who left the item or how long the item left before the person moves away can not be extracted. Still, our method can be used as a preprocessing stage to improve the tracking-based video analytics.",
                "The computational load of the proposed method is low. Since we only employ pixelwise operations and make pixel-wise decisions, we can take advantage of the parallel processing architectures. By assigning each image pixel to a processor on the GPU using CUDA programming, since each processor can execute in parallel, the speed improves more than 14 \u00d7 in comparison to the corresponding CPU implementation. For instance, full background update for 360 \u00d7 288 images takes 74.32 milliseceonds on CPU (P4 DualCore 3 GHz), however on CUDA, it only needs 6.38 milliseceonds. We observed that the detection can be comfortably employed in quarter spatial resolution by processing the short-term background at 5 fps while updating the long term at every 5 seconds (0.2 fps) with the same learning rates."
            ],
            "subsections": []
        },
        {
            "title": "CONCLUSIONS",
            "paragraphs": [
                "We present a robust method that uses dual foregrounds to find abandoned items, stopped objects, and illegally parked vehicles in static camera setups. At every frame, we adapt the dual background models using Bayesian update, and aggregate evidence obtained from dual foregrounds to achieve temporal consistency.",
                "This method does not depend on object initialization and tracking of every single object, hence its performance is not upper bounded to these error prone tasks that usually fail for crowded scenes. It accurately outlines the boundary of items even if they are fully occluded. Since it executes pixelwise operations, it can be implemented on parallel processors."
            ],
            "subsections": []
        },
        {
            "title": "ACKNOWLEDGMENT",
            "paragraphs": [
                "The authors thank their colleagues Jay Thornton and Keisuke Kojima for their constructive comments."
            ],
            "subsections": []
        }
    ]
}