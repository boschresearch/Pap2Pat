{
    "id": "US20170344667",
    "authors": [
        "Ming Zhou",
        "Raphael Fleury"
    ],
    "title": "FAILSAFE TOPOLOGY OPTIMIZATION",
    "date": "2016-08-29 00:00:00",
    "abstract": "Failsafe robustness of critical load carrying structures is an important design philosophy for aerospace industry. The basic idea is that a structure should be designed to survive normal loading conditions when partial damage occurred. Such damage is quantified as complete failure of a structural member, or a partial damage of a larger structural part. This paper establishes for the first time the concept and formulation of failsafe requirement within the context of topology optimization. Efficient computational scheme and computer implementation are carried out. Several examples are shown to demonstrate the impact of failsafe requirement to design concept generated by topology optimization.",
    "sections": [
        {
            "title": "DESCRIPTION",
            "paragraphs": [],
            "subsections": [
                {
                    "title": "FIELD OF THE INVENTION",
                    "paragraphs": [
                        "The invention relates to failsafe topology optimization."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "define field of invention"
                    ],
                    "num_characters": 56,
                    "outline_medium": [
                        "define field of invention"
                    ],
                    "outline_short": [
                        "define field of invention"
                    ]
                },
                {
                    "title": "BACKGROUND",
                    "paragraphs": [
                        "Topology optimization has long been an active research area within the field of engineering optimization. For example, topology optimization is described in Topology Optimization\u2014Theory, Methods and Applications, by Bends\u00f8e and Sigmund, Springer, Berlin (2004).",
                        "In general, this disclosure relates to design involving uncertainties, known generally as reliability based design optimization (RBDO). Since mid-2000 there has been increasing research on reliability based topology optimization (RBTO) considering uncertainties in loads, material, boundary geometry or fabrication. However, failsafe design has not been directly addressed in relation to topology optimization. Failsafe refers to structures that demonstrate sustained structural integrity under the condition that an arbitrary structural element fails. Designing structures to be failsafe is important in applications where structural failure is catastrophic, such as in aircraft and nuclear power plants, for example. Failsafe design philosophy is an important reason why flying is considered so safe today. Indeed, relatively few catastrophic aircraft accidents are due to structural failures",
                        "Topology optimization has seen fast growing adoption throughout many major industries since the turn of the millennium. This includes successful aerospace applications during development of the new generation airliners such as A380, 350 and B787. However, the inability of taking failsafe requirement into consideration is a significant limitation. In fact, as optimization process pushes material utilization to maximum efficiency, design tends to be less redundant in general. For example, results of topology optimization are often benchmarked against Michell trusses which, while highly efficient, are statically determinate with zero structural redundancy."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "introduce topology optimization",
                        "discuss reliability based design optimization",
                        "motivate failsafe design"
                    ],
                    "num_characters": 1820,
                    "outline_medium": [
                        "summarize topology optimization"
                    ],
                    "outline_short": [
                        "summarize topology optimization"
                    ]
                },
                {
                    "title": "SUMMARY",
                    "paragraphs": [
                        "In the context of topology optimization, the first challenge for failsafe consideration lies in defining member failure test before structural members emerge from the optimization process. The second challenge lies in creating a computational scheme that is efficient enough to solve real world problems.",
                        "The present disclosure features a formulation for failsafe design in the context of topology optimization of a structural continuum. The problem of failsafe design is mathematically represented by a structure containing a given size damage (i.e., a volume of the structural continuum devoid of material) randomly located within the structural domain. An approximate treatment of the original problem is constructed with a predefined finite damage population. A simple formulae for maximum material survival rate under a given damage population size for cube damage is disclosed.",
                        "An efficient computational scheme for the failsafe design problem involving a large number of structural cases each with damage located at a different position is also disclosed. The number of structural cases, while large, is finite and the disclosure features defining finite damage populations which provide computational efficiency (e.g., relative to approaches using an infinite damage population) and a practical level of structural redundancy to ensure that a resulting topology is failsafe to a desired degree.",
                        "The scheme may be implemented using a Message Passing Interface (MPI) parallel implementation using commercially-available analysis software. As each of the structural cases are independent of each other, a MPI parallel implementation may be used for efficient solution.",
                        "An automatic procedure for placing damage cubes for a chosen domain and population level can also be implemented. The algorithm creates models representing each structural case and initiates a MPI solution process. High Performance Computing (HPC) resources are widely available today, making it possible to solve this problem with very efficient turnaround time.",
                        "From an engineering perspective, the needs for redundant load paths may be sufficiently represented by a base layer of damage population constructed as gapless fill of cubes or spheres throughout the structural domain. This is termed Level-1 damage population P1. Additional damage populations may also be used for more thorough analysis. For example, Level-2 population P2 may be constructed by doubling the damage placement density, increasing the damage population eight times in a 3D domain.",
                        "In some implementations, a partial set of damage populations can be constructed. For example, a partial set of Level-2 damage population PB2 can be used that only doubles the Level-1 population.",
                        "Added damage layers can be chosen to occupy the best hideout locations of Level-1 damages, e.g., centered at the junctures of the base layer damages. Such partial population of a given level may provide superior results because it can yield just a slightly higher material survival rate with a quarter of the full level damage population. It is believed that for engineering practice, partial Level-2 damage population can provide reliable modeling of structural survival under damage.",
                        "Various aspects of the invention are summarized below.",
                        "In general, in a first aspect, the invention features a computer-implemented method for designing a failsafe structure, the method including: (i) defining a structural continuum in a computational environment, the structural continuum corresponding to a homogenous distribution of a solid material through a design volume; (ii) defining a damage volume in the structural continuum, the damage volume corresponding to a portion of the structural continuum devoid of the material at an arbitrary location within the design volume; and (iii) computationally optimizing a topology for a design of the failsafe structure subject to the damage volume and to one or more designated load cases. The optimized topology for the design corresponds an inhomogeneous distribution of the solid material through the design volume such that the design volume is composed of portions of the solid material and voids, the solid material portions defining the failsafe structure which will continue to support all the designated load cases when the material is removed from a damage volume at any location in the design volume. The computational optimization includes performing a computational structural analysis on the structural continuum with a finite damage population, the finite damage population corresponding to locating the damage volume at a first series of different locations in the structural continuum, the damage volumes located at adjacent locations in the first series of different locations being non-overlapping damage volumes.",
                        "Implementations of the method can include one or more of the following features and/or features of other aspects. For example, the computational structural analysis can include analyzing a plurality of analysis models, each analysis model comprising the structural continuum with a corresponding instance of damage from the finite damage population. Each analysis model can be analyzed in parallel on a computer cluster.",
                        "The finite damage population can span the structural continuum.",
                        "For the first series, damage volumes at adjacent locations can contact each other at at least one point in the structural continuum. For the first series, there can be no gap between damage volumes at the adjacent locations. For the first series, there can be no overlap between damage volumes at adjacent locations.",
                        "The finite damage population can exclude a damage volume from a location of a point load.",
                        "For each location in the first series, the damage volume can have the same shape (e.g., cube, rectangle, sphere) and dimensions.",
                        "The computational optimization can further include performing a computational structural analysis on the structural continuum for a second finite damage population, the second finite damage population corresponding to locating damage volumes at a second series of different locations, different from the first series, in the structural continuum. The second series can have twice as many locations in each dimension as the first series. Damage volumes of the second finite damage population can overlap with damage volumes of the first damage population.",
                        "The computational optimization can include comparing a structural parameter of the structural continuum with the damage volume under the one or more designated load cases. The structural parameter of the structural continuum with the damage volume under the one or more designated load cases can be compared to a structural parameter of an undamaged structural continuum under the one or more designated load cases. The structural parameter can be a stress. The stress can be below a threshold for the solid material for maintaining structural integrity of the structural continuum. In some embodiments, the structural parameter is a compliance. The computational optimization can include minimizing a largest compliance associated with each damage location of the finite damage population.",
                        "The computational structural analysis can be performed using a computational analysis method selected from the group consisting of finite element analysis (FEA), a boundary element method, and a meshless analysis method.",
                        "A dimension of the damage volume can be established based on design requirement for maximum damage size. The damage volume can have a shape selected from the group consisting of spherical, cubic, rectangular, prismatic, cylindrical, and conic.",
                        "The damage volume can be contained within the structural continuum or can extend through the structural continuum.",
                        "The structural members can be discrete structural members. A maximum member cross-sectional dimension can be constrained to no more than half of the maximum damage dimension. The structural members can be part of a monolithic component.",
                        "In general, in another aspect, the invention features a system, include: a data processing apparatus configured to receive information defining: (i) a structural continuum in a computational environment, the structural continuum corresponding to a homogenous distribution of a solid material through a design volume; and (ii) a damage volume in the structural continuum, the damage volume corresponding to a portion of the structural continuum devoid of the material at an arbitrary location within the design volume. The data processing apparatus is programmed to optimize a topology for a design of a failsafe structure subject to the damage volume and to one or more designated load cases. The optimized topology for the design corresponds to an inhomogeneous distribution of the solid material through the design volume such that the design volume is composed of portions of the solid material and voids, the solid material portions defining the failsafe structure which will continue to support all the designated load cases when the material is removed from a damage volume at any location in the design volume. The optimization includes performing a computational structural analysis on the structural continuum with a finite damage population, the finite damage population corresponding to locating the damage volume at a series of different locations in the structural continuum, the damage volumes located at adjacent locations in the first series of different locations being non-overlapping damage volumes.",
                        "Embodiments of the system can include one or more feature of other aspects.",
                        "In general, in a further aspect, the invention features a non-transitory computer readable medium storing a program causing a computer to execute a process for designing a failsafe structure, the process including: defining a structural continuum in a computational environment, the structural continuum corresponding to a homogenous distribution of a solid material through a design volume; defining a damage volume in the structural continuum, the damage volume corresponding to a portion of the structural continuum devoid of the material at an arbitrary location within the design volume; and computationally optimizing a topology for a design of the failsafe structure subject to the damage volume and to one or more designated load cases. The optimized topology for the design corresponds an inhomogeneous distribution of the solid material through the design volume such that the design volume is composed of portions of the solid material and voids, the solid material portions defining the failsafe structure which will continue to support all the designated load cases when the material is removed from a damage volume at any location in the design volume. The computational optimization includes performing a computational structural analysis on the structural continuum with a finite damage population, the finite damage population corresponding to locating the damage volume at a series of different locations in the structural continuum, the damage volumes located at adjacent locations in the first series of different locations being non-overlapping damage volumes."
                    ],
                    "subsections": [],
                    "outline_long": [
                        "introduce failsafe design challenge",
                        "introduce computational scheme",
                        "define failsafe design problem",
                        "introduce finite damage population",
                        "introduce simple formulae for material survival rate",
                        "introduce efficient computational scheme",
                        "discuss MPI parallel implementation",
                        "introduce automatic damage cube placement",
                        "discuss HPC resources",
                        "introduce Level-1 damage population",
                        "introduce Level-2 damage population",
                        "introduce partial damage population",
                        "discuss added damage layers",
                        "introduce computer-implemented method",
                        "define structural continuum",
                        "define damage volume",
                        "introduce computational optimization",
                        "discuss finite damage population",
                        "introduce analysis models",
                        "discuss computational structural analysis",
                        "introduce system",
                        "introduce non-transitory computer readable medium"
                    ],
                    "num_characters": 11183,
                    "outline_medium": [
                        "motivate failsafe design",
                        "identify challenges",
                        "formulate failsafe design",
                        "approximate problem",
                        "disclose formula for material survival rate",
                        "describe efficient computational scheme",
                        "implement using MPI parallel implementation",
                        "automate damage cube placement",
                        "use HPC resources",
                        "represent redundant load paths",
                        "summarize various aspects of invention"
                    ],
                    "outline_short": [
                        "motivate failsafe design",
                        "describe failsafe design challenges",
                        "introduce failsafe design formulation",
                        "describe computational scheme",
                        "summarize invention features"
                    ]
                },
                {
                    "title": "DETAILED DESCRIPTION",
                    "paragraphs": [
                        "While the concept and practice of failsafe is easy to follow when the layout of load carrying structural members is already established, the definition of failure for design concept generation process, i.e., topology optimization, has yet to be established. The presumption of failsafe requires that failure test of a single member needs to progress through all structural members without exception. However, a dilemma lies in defining failure test before discrete members emerge during the iterative process of topology optimization. The failure test of \u2018a member\u2019 needs to be valid for any member shaped at any arbitrary location.",
                        "Referring to FIG. 1A, to meet this requirement the failure test of all structural members within a 3D box-shaped structural domain \u03a9 can be established as a spherical damage 110 of diameter d randomly located in the given domain. Here, damage of a given shape and volume throughout the paper is defined as a location being entirely devoid of material. Random location means that the spherical damage be tested at any possible location in structural domain \u03a9, one instance at a time. No discrete structural member would survive a failure test as long as its cross-section doesn't exceed length scale d. If the cross-section of a structural part shaped by topology optimization is bigger than length scale d, the damage due to the presence of the given spherical damage results in partial failure in monolithic structure.",
                        "To help visualize the effect of the damage volume, one can picture the sphere as a magic eraser that only erases material where it currently occupies but doesn't leave trace behind. In other words, the material would recover from void to solid when the eraser is moved away.",
                        "The topology optimization problem for failsafe design can be defined as follows:",
                        "Minimize \u0192(x)",
                        "Subject to(gj(x)\u2212gjU\u22660, j=1, . . . , M) for(S\u2208\u03a9\u0302S\u2209Drandom)\u2003\u2003(1)",
                        "0.0\u2266xi=\u22661.0, i=1, . . . , N",
                        "where \u0192(x) represents the objective function, gj(x) and gjU the j-th constraint response and its upper bound, respectively. For failsafe design stress constraints should be primary focus, while displacement and other constraints could also be included if crucial for the survivability of the structure.",
                        "There are generally multiple load cases involved. For simplicity of notation, one may consider that the total number of constraints M included constraints from all load cases considered. All M constraints should hold for the residual structure S excluding a randomly located damage Drandom. In essence, this represents an infinite number of structural cases. xi is the normalized material density of the i-th element. Using the SIMP topology optimization approach (see, e.g., Optimum shape design as a material distribution problem, by M. Bends\u00f8e Strut. Optim. 1:193-202 (1989), and The COC algorithm, Part II: topological, geometry and generalized shape optimization, by M. Zhou and GIN Rozvany, Comp. Meth. Appl. Mech. Eng. 89:197-224 (1991)) where a power law penalty is applied to the stiffness density relationship:",
                        "i(xi)=xipKi\u2003\u2003(2)",
                        "where i and Ki represent the penalized and the real stiffness matrix at full density of the i-th element, respectively, and p is the penalization power that is larger than 1.0. Typically p takes value between 2 and 4. A small lower bound, e.g., 0.01, is typically applied on the density variables to prevent singularity in the stiffness matrix. Note that the effect of elements at density lower bound is further significantly weakened by the power law.",
                        "For a structure with discrete members (e.g., a truss or frame-like structure), if damage D is larger than or equal to the largest structural member size in the design, it can completely destroy an arbitrary member as it moves through the structure to \u2018erase\u2019 a target. For a spread-out structural component, e.g., a plate with area larger than D, the damage produces a hole in the structure of the given size at the given location.",
                        "Before turning to solution strategy for failsafe topology optimization, it should be noted that alternative damage shapes can be used. For example, referring to FIG. 1B, a cube shaped damage 120 of edge length d is used. Though spherical damage is directionless and more generic, damage of a cube can also represent a practical use case without losing generality. As interactions of cubes are more easily illustrated and analyzed, cube form damage is primarily used for establishing a mathematical and engineering foundation. However, in general, any damage shape may be used.",
                        "From an engineering perspective, cube form damage with edge length equal to the diameter d of the spherical damage can be used as a more conservative representation as the devoid material volume contains the subset of the sphere at the same location. Therefore, one can assume that general qualitative observations drawn based on cube damage are valid for sphere damage as well.",
                        "The orientation of damage cubes may have quantitative implications. For example, the diagonal section of a cube can cause a larger sectional cut of a structural member in its most vulnerable cross-section. The orientation factor may be regarded as varying degrees of reserves relative to sphere damage. From application perspective, one should place cube orientation according to insights into the structure's directional vulnerability. When directional neutrality of damage is important, one may resort to sphere damage in actual modeling.",
                        "Turning to the solution strategy for failsafe topology optimization, it is noted that random placement of damage of a given size within a structural domain is challenging even for analysis because of the number of possible placement alternatives for the damage. One approach is to generate a structural model with damage placed at every element of the structural continuum. However, such an approach may become computationally unwieldy when the continuum is divided into a very large number of elements (e.g., 105 or more elements). It is believed that strategic selection of damage locations can provide robust results with discrete, computationally manageable damage populations.",
                        "For convenience, cube-shaped damage is used in this section. In the following a serial process of damage population increase is introduced to explore the relationship between the damage population size and the maximum material survival rate within a random cube of the same size as the damage. From an engineering perspective it makes sense to start with a base damage population with damage cubes occupying the structural domain \u03a9 evenly without gap and overlap. Referring to FIG. 2A, cubes 210, 220, 230, and 240 represent a base population ND. First, a series of damage population size levels is established, termed Damage Series A (DS-A), with each level increase doubling the density of damages in each dimension.",
                        "Damage Series A can be divided into L different levels as follows:",
                        "(a) Level 1: A total number of ND damage cubes of size d are distributed evenly to cover the entire structural domain \u03a9. Cubes 210, 220, 230 and 240 in FIG. 2A are representatives of the base Level 1 damage population. The centers of damages are evenly spread in \u03a9, with diagonal distanced \u221a{square root over (3)}d between neighboring cubes. The population size of Level 1 is PA1=ND. Each adjacent cube is in contact, leaving no gaps between the cubes.",
                        "(b) Level 2: The aim with Level 2 is to double the density of damage zones in each dimension to create evenly spread damage zones with distance between neighbors reduced to \u221a{square root over (3)}d/2. To achieve that, it is only needed to double the grid points of square centers along X, Y and Z, resulting in a damage population PA2=23\u00d7ND=8\u00d7ND. The eight-fold increase in population size is due to the doubled density in each of three dimensions.",
                        "(c) Level L: The aim with Level L is to double in each dimension the evenly spread damage population size from Level (L\u22121), producing a damage population PAL=23(L-1)\u00d7ND. It can be readily established that for a 3D domain the total population of level L is always eight times the population of the previous level, i.e., PAL=8\u00d7PA(L-1). Thus the increase of population to the next levels is always \u0394PAL=7\u00d7PA(L-1).",
                        "A second damage series, termed DS-B, is constructed as a partial set of DS-A at all levels except Level 1. For DS-B:",
                        "(a) Level 1: The damage population starts exactly the same as DS-A, i.e., PB1=PA1.",
                        "(b) Level 2: Only a subset of Level 2 population in DS-A is retained. PA2 in DS-A can be constructed by moving seven copies of PA1 into bisection combinations along XYZ. The maximum distance \u221a{square root over (3)}d/2 between neighboring cubes does not change when only the copy moving diagonally in space is kept, shown as cube 250 in FIG. 2A. The resulting damage population is PB2=2\u00d7PA1=PA2/4.",
                        "(c) Level L: Following the logic in (b) PBL is constructed as PA(L-1) enriched with its copy shifted diagonally into bisection location in space, i.e., in all three dimensions XYZ. The total damage population is PBL=2\u00d7PAL-1)=PAL/4. Therefore, the population size of the partial set for DS-B is only a quarter of the complete set of DS-A at any level in the series.",
                        "The population size is summarized in Table 1 for varying damage levels.",
                        "For a given finite damage population size PL (i.e., PAL or PBL) established at Level L, the design problem given in Eq. 3 can be formulated as follows:",
                        "Minimize \u0192(x)",
                        "Subject to(gj(x)\u2212gjU\u22660, j=1, . . . , M) for(S\u2208\u03a9\u0302S\u2209Dl), l=1, . . . , PL",
                        "0.0\u2266xi\u22661.0, i=1, . . . , N\u2003\u2003 (3)",
                        "As discussed above, a simplified problem formulation for numerical examples is used in order to focus on the key phenomenon about failsafe. The Min(Max) compliance formulation for the failsafe problem becomes the following:",
                        "Minimize Max(Cl(x)), for(S\u2208\u03a9\u0302S\u2209Dl), l=1, . . . , PL",
                        "Subject to V\u2212VU\u22660\u2003\u2003(4)",
                        "0.0\u2266xi\u22661.0, i=1, . . . , N",
                        "where Cl represents the sum of compliances, termed total compliance herein, of all static load cases for the structure S\u2209Dl. The analysis and sensitivity calculation of a structural case involving a damage zone is a standard process except that the model (e.g., FEA model) has elements contained in the damage zone removed. In other words, load carrying capacity and sensitivity contribution from elements within Di are zero for the structural case S\u2209Dl.\n\nTherefore, the optimization problem shown in Eq. (4) essentially aims to minimize the adverse impact of damages to the structural problem.",
                        "Compared to Eq. 1 the problem in Eq. 3 or Eq. 4 becomes numerically feasible, though computationally expensive.",
                        "The relationship between the damage population size and the maximum material survival rate is important for measuring the confidence level in the model because random failure corresponds to zero material survival of a random cube in the entire structural domain. Therefore the lower the maximum material survival rate of a random cube is, the closer the problem defined by a constructed finite damage population reflects the original problem.",
                        "It is believed that the problem defined by Damage Series A or B shown in Eq. 3 is equivalent to the original problem in Eq. 1 as the damage population PL approaches infinity. Because damages defined by DS-A and DS-B are evenly spread in the entire structural domain \u03a9 with distance from one damage zone to another not exceeding \u221a{square root over (3)}d/2(L-1), the distance between damage zones approaches zero when L approaches infinity. In a visual display, when L approaches infinity every possible point in the space \u03a9 would have defect that removes material of a cube of the given size d.",
                        "For a given damage population, it is important to understand the reliability of the model for capturing a random failure. From an engineering perspective, an unsafe scenario corresponds to a surviving cube with maximum residual material. In other words, one should find the best hideout location for a given damage population and calculate the material volume surviving damages intersecting with the cube. For PA1=PB1, it can be observed that the cube 250 shown in FIG. 2A represents the best hideout, with a volumetric survival rate of 87.5%. From the perspective of structural mechanics, the sectional residual is arguably a more important measure as forces are transferred directionally. It is easy to calculate that the sectional survival rate for cuts orthogonal to the coordinate system is 75% for the base damage population PA1=PB1.",
                        "Referring to FIGS. 2B and 2C, visualization becomes much more crowded when damage population increases eight times from PA1 to PA2. For visual clarity, only the most damaging cubes in these images are shown. From analyzing geometric interactions it can be determined that cube 260 in FIG. 2B represents the best hideout for PA2, with a sofa-corner shaped surviving volume at ( 37/64)=57.81% and sectional survival rate at 43.75%. For PB2, a slightly better hideout can be found shown as cube 270 in FIG. 2C. The survival volume of cube 270 has a L-shape, or sofa-section shape, with a surviving volume and cross-section of 62.50% and 50%, respectively. This shows that DS-B is superior to DS-A in terms of computational efficiency since at any level about Level 2 one achieves just a slightly worse material survival rate with a quarter of the damage population.",
                        "For the damage population of the L-th level, it is believed that the above observation regarding the best hideout positions and surviving volume shapes holds true, albeit with thicknesses of the surviving sofa-corner (FIG. 2B) and sofa-section (FIG. 2C) halving to the next damage population level. The maximum sectional and volumetric survival rates for Level 1 to Level 5 are shown in Table 1, including exact formulae for Level L. These results were obtained by analyzing geometric interaction of intersecting cubes. The results were confirmed through numerical simulation with a billion random cube locations.",
                        "Accordingly, it may be concluded that for the case with infinite damage population: (1) failure test holds for any discrete member with maximum cross-sectional dimension smaller than damage size d; (2) for members with larger dimensions the presence of a size d damage establishes partial failure in monolithic structure. This conclusion may guide practical application of the failsafe analysis, specifically, the design engineer should define damage size d according to the target size for structural members classified as individual members. Obviously, as a practical matter, the fail-safe design problem should be solved under finite damage population, with as low a population size as possible. As damage population size increases exponentially with respect to population level, Level 2 may be considered a practical limit for many applications.",
                        "As noted above, Table 1 shows that the maximum sectional survival rate of a member with cross-sectional size d is 43.8% for full Level 2 damage population PA2, and slightly higher at 50% for partial Level 2 damage population PB2. Now, consider a reduction of the maximum cross-sectional length scale to d/2. Referring to FIG. 2D, the material survival rate for a representative cube 280 of size d/2 does not change for PA1. FIG. 2E shows the best hideout location for the half edge length cube 285 under PB2 (cube 290) that carries a volumetric and sectional survival rate of 50%. The sectional survival rates are directional, with 50% along two axes and 0% along the third axis. At full Level 2 damage population PA2 no survivable hideout place for the small size cube is evident. That suggests that the damage population series converge at Level 2 when maximum cross-sectional length scale is half of the damage cube size. This may present practical benefits as, at only eight times base damage population size, failure test of discrete members is strictly satisfied if damage size d is defined as twice the maximum length scale for topology optimization.",
                        "In the context of finite element analysis, the optimization problem in Eq. 1 involves PL structural cases with distinct Finite Element Analysis (FEA) models. The solution is computationally expensive. However, since each FEA model is completely independent from another, the analysis and sensitivity analysis can be solved entirely in parallel. Therefore, given a large enough computer cluster (e.g., an HPC cluster) with PL computing nodes the failsafe optimization problem can be solved at the same turnaround time as the base design problem without failure modes. The failsafe topology design framework may be implemented using commercial FEA software products, such as OptiStruct from Altair (Troy, Mich.), based on the multiple model optimization (MMO) framework. The MMO capability is a general feature aimed at optimizing structures of varying configurations, yet sharing some common design components. An example of MMO scenario is a car chassis platform on which three variations\u2014sedan, van and SUV\u2014are built. The MMO optimization problem involves three FEA models with a set of independent variables for each model, but also sharing common design variables on the chassis. In OptiStruct, MMO is implemented as a Message Passing Interface (MPI) parallel algorithm, with the master process orchestrating the optimization solution by assembling the analysis and sensitivity results from all models involved.",
                        "Referring to FIG. 3, an iterative scheme of failsafe algorithm 300 is shown. Algorithm 300 is implemented as a MPI application with (PL+1) processes, including a master process 301, which runs each model in parallel. Other parallel processing protocols may also be used.",
                        "In an initial step, damage population 310 of master process 301, with user input the algorithm establishes the size and shape of the continuous structural domain, \u03a9. The continuous structural domain corresponds to a homogeneous distribution of solid material through the domain volume, defined via user-established boundaries. The algorithm also establishes the distribution of nodes within the domain and one or more damage population for the failsafe calculation. Each damage population is defined by a damage size, shape, and orientation, and series of damage locations, as discussed previously. The user also defines the material (or materials) forming the domain, boundary conditions for the structural domain and one or more load cases (e.g., composed of internal and/or external loads).",
                        "The computer system running master process 301 distributes each of the models to a different computing node for analysis 362. Initially, each model (1 . . . PL), including 360 and 370, is composed of the structural domain with damage at a corresponding location in the domain. Analysis of the undamaged model is also performed for performance reference. Analysis 362 involves solving the minimization problem of Eq. 1, above, where \u0192(x) is an objective function, such as stress or compliance.",
                        "Results of the analysis for each model is returned to the master process 301, which applies convergence and constraint screening 330 the analyses. This step involves identifying which models are critical, e.g., as having the highest compliance or stress and/or as exceeding a threshold compliance or stress. Stress, for example, should be maintained below the threshold for maintaining the structural integrity of the solid material of the structural continuum.",
                        "Based on the results of screening 330, a sensitivity analysis 364 is conducted on each model at the corresponding computing node. Sensitivity analysis involves analyzing how much the structure responds to small changes.",
                        "Next, master process 301 conducts and approximation and optimization process 340.",
                        "Master process 301 evaluates the results of approximation and optimization process 340 at 350 to assess whether the model analyses have sufficiently converged on a solution (e.g., based on a user defined convergence threshold) that is within a threshold value for the objective function (e.g., a threshold compliance or threshold stress). The threshold value may be defined by the designer. If the solution has not sufficiently converged, the master process 301 updates the design at step 320 and repeats the analysis and sensitivity analysis for a refined design.",
                        "If sufficient convergence is achieved, master process 301 outputs the design 350 and the optimization ends 380.",
                        "Typically, several practical measures are implemented for damage zone generation. For example, damage zones containing any point load are eliminated to preserve load conditions. If a damage zone increases the compliance by a significant margin compared to that of the undamaged structure at the start, the process may terminate. Such case can indicate that the structure's function depends on a narrow pathway that doesn't allow redundancy to be built. The margin threshold can be defined by the user (e.g., 10 times increase may be set).",
                        "For reducing computation cost, a threshold on the material volume inside a damage cube can be applied to reduce the total damage population. For example, a 10% threshold is used for the numerical examples discussed below.",
                        "For preserving load conditions one may freeze out a sufficiently large non-design domain around the loading points.",
                        "In general, implementations can accommodate any level of DS-A and DS-B damage population generation. However, for practical purposes, damage not exceeding Level 2 of DS-B can be used.",
                        "Parallel processing implementations, such as MPI, can utilize computing resources flexibly. When the number of computing nodes NC is smaller than NMPI, several MPI processes are distributed onto each computing node. The operating system on each node manages multiple processes in the same manner as a computer handles multiple tasks. On a homogeneous HPC cluster one may choose NMPI as a multiple of NC for best computing resource utilization. Optimally, a sufficiently large HPC cluster with (PL+1) computing nodes for shortest run time, as shown in FIG. 3, is used.",
                        "Before turning to exemplary implementations, it is instructive to consider the concept of failsafe design using a simple three-bar truss 400, as shown in FIG. 4A. Truss 400 is formed from bars 410, 420, and 430, respectively. The X and Y dimensions of the truss is 100\u00d750; the material properties are: E=2.1\u00d7105 and \u03c5=0.3; a horizontal load 440 of 1.0\u00d7103 is applied at the junction node of the three bars.",
                        "Design constraints for failsafe should primarily be stress and may include displacements. However for all examples in this application, a simplified optimization formulation\u2014minimizing the compliance with a volume constraint\u2014is used. This makes it relatively easy to study and compare results as this is the most used formulation for papers on topology optimization. It also allows one to study fundamental behaviors of a new type of problem on a well-behaved simple optimization problem. Compliance provides a clear global performance measure for comparison between various structural configurations involving failure scenarios. For the three-bar truss, minimizing compliance under a volume constraint is considered:",
                        "Minimize C(x)",
                        "Subject to V(x)\u2212VU\u22660\u2003\u2003(5)",
                        "xiL\u2266xi\u2266xiU, i=1,2,3",
                        "in which the upper bound of the volume constraint VU=1000; the lower bounds of bar cross-sectional areas are set to zero, allowing truss members to vanish.",
                        "The optimization problem was solved using OptiStruct (Altair, Troy, Mich.). To obtain a fully converged solution, a very low convergence tolerance on the objective at 0.0001 was used and the run converged after 12 iterations. The optimal design, referred to as the Standard case, is given in Table 2. The middle bar 420 vanishes and the structure reduces to a two-bar truss. It is known that this design corresponds to the simplest case of the Michell cantilever truss.",
                        "For a structure with predefined load carrying members, failsafe is defined as sustained structural integrity under the condition that an arbitrary structural member fails. For the given three-bar truss it means that the structure should survive under the three structural configurations shown in FIGS. 4B-4D, representing failure of the right bar 430, the middle bar 420, and the left bar 410, respectively. This design problem now involves three structural cases of distinct structural configurations under the same applied loads. This failsafe optimization problem with compliance as the performance measure can be formulated as follows:",
                        "Minimize Max(Cj(x)), j=1,2,3",
                        "Subject to V(x)\u2212VU\u22660\u2003\u2003(6)",
                        "xiL\u2266xi\u2266xiU, i=1,2,3",
                        "which implies that optimization should target improving compliance of the worst failure cases. Note that Min(Max) compliance wouldn't be meaningful for different load cases since relative quantities of compliances do not have clear engineering implication. However, compliances under the same load conditions for different failure modes are meaningful engineering measures on how a failure impacts the total performance of the structure. For a structure under multiple load cases, one can regard the sum of compliances, termed total compliance, as the global performance measure of the structure. In other words, the compliance in Eq. 6 for each structural case involving one failed structural member becomes the total compliance under all load cases. OptiStruct was used to solve this multiple model optimization (MMO) problem. The same low convergence tolerance was used and the run converged in 21 iterations. The optimal design of the failsafe problem is included in Table 2, which also lists compliances for the three structural cases involving failures. Generally, compliance of a structure under a given load may be defined as the vector product of displacement and load UTP=UTKU, where P is the load vector, U is the displacement vector and K is the stiffness matrix. In the software implementation in OptiStruct used here, compliance is output as the total strain energy defined at \u00bd UTKU.",
                        "FIG. 4E illustrates the standard design and FIG. 4F illustrates the failsafe design. Obviously the structure needs redundant stable load transmission paths, hence all three bars are necessary for a failsafe design. The compliance of undamaged state is the same as that of the second failure case with vanishing middle bar. This can be understood as, given symmetry, there is no vertical displacement at the loading point, hence the vertical bar has zero strain under linear FEA assumption. The performance under the first and the third failure cases are significantly worse than the 45\u00b0 two-bar configuration that corresponds to the optimal Michell truss. The optimization is driven by these two structural cases, which are referred to as the active structural cases for failsafe as they correspond to active constraints in the bound formulation for the Min(Max) problem."
                    ],
                    "subsections": [
                        {
                            "title": "EXAMPLES",
                            "paragraphs": [
                                "Two 2D examples and one 3D example are discussed below to show the effect of failsafe on topology results. All examples use the same material properties: E=2.1\u00d7105 and \u03c5=0.3. OptiStruct was used with default objective convergence tolerance at 0.005. For penalty value in Eq. 2 OptiStruct has a built-in gradual increase, with the default final penalty values at 3.0 for 2D and 4.0 for 3D structures. The minimum member size (minimum length scale) takes default value equal to three times the average mesh size.",
                                "**Example 1: Rectangular Plate Under Shear Force**",
                                "The failsafe scenario discussed in the three-bar truss example is reproduced using the damage model described above. The 2D domain has dimensions 100\u00d750 with a thickness of 1.0, modeled with 200\u00d7100=20,000 quadratic elements. The load is the same as for the three-bar truss example: P=1000 is applied at the center of the bottom edge while the upper edge is fixed. The finite element model is shown in FIG. 5A, with dimension 50 in the y-direction and 100 in the x-direction. The same volume constraint of 1000 is used, which represents a 20% volume fraction of the design domain. A relatively large square damage size of 25\u00d725 is considered.",
                                "The models corresponding to damage population PB1 are illustrated in FIG. 5B. For reference purpose damage populations PB1 (510) and PB2 (520) are shown in FIGS. 5C and 5D, respectively. For PB1 510, damage zones are labelled 511-518. For PB2, damage zones are labelled 521-535. Zone 532 of PB2 was eliminated because it cut off the point load.",
                                "Referring to FIG. 6A, the optimum for this standard problem is a two-bar truss-like structure 610. The failsafe designs with PB1 (620) and PB2 (630) damage populations are shown in FIGS. 6B and 6C, respectively. The runs took 26, 39 and 39 iterations for the results FIGS. 6A-6C, respectively.",
                                "To provide a clear view on how the structure preserves certain level of structural integrity under each damage instance, models for damage population PB1 are shown in FIGS. 7A-H with final failsafe topology result. The compliances of the standard and the failsafe design for PB1 are listed in Table 3, including the compliances for all eight failure modes. In Table 4 the compliances for damage population PB2 are listed, excluding smaller zones that were insignificant to the results. The compliance of the final standard design is 29.36, which is 23% above the compliance 23.80 of the two-bar truss discussed in section 2. This difference is due to several factors: (a) 1D vs. 2D modeling; (b) the penalty effect on the remaining semi-dense elements. It was found that the actual difference is about 18% due to factor (a) alone. In the comparisons, the results are accepted as they are obtained numerically with penalty effect included. The compliances, 42.14 and 41.48, for undamaged state under PB1 and PB2 are about 44% higher than the standard solution. At the final designs there are four active failure zones in the center (2, 3, 6, 7) for PB1, with an additional zone (10) becoming active for PB2.",
                                "One may question why the compliances of active zones are not exactly the same. This is expected: while the bound is the same for all active compliances within the problem formulated by convex approximation, the design variables are still changing slightly at the end, resulting in small differences after final analysis. From results in Table 3 and Table 4 it was noticed that a maximum compliance increase of about 120% compared to the undamaged state. This is less than the 170% increase observed for the three-bar truss design shown in Table 1. This indicates that the increased redundancy helped to improve risk mitigation.",
                                "Referring to FIGS. 8A-8B, in order to study damage location dependency, the same example for PB1 and PB2 was run with locations shifted by \u00bc of the square size in both X and Y directions. Design 810 resulted for PB1 and design 820 resulted form PB2. Asymmetry of the design is induced by asymmetric damage zone population. Referring to FIGS. 8C-8D, symmetry may also be enforced for topology optimization, resulting in designs 830 (PB1) and 840 (PB2). Globally the designs in FIGS. 8A-D and FIGS. 6A-6C share similar features in terms of load path redundancy. The iteration numbers and compliances of the four solutions are given in Table 5.",
                                "**Example 2: Rectangular Plate Under Bending Force**",
                                "The same design domain and FEA mesh from Example 1 was used, with the load P=1000 now applied at the center of the right edge while the left edge is fixed. The plate was optimized with 50% volume constraint. For failsafe design, a damage square size of 12.5\u00d712.5 was used, and two runs with PB1 and PB2 were carried out. The damage population for PB1 and for PB2 added to PB1 are shown in FIGS. 9A and 9B, respectively. The load was applied at location 901 and, for PB2, the damage volume at this location was excluded from the calculation.",
                                "Final designs for standard (1010), failsafe PB1 (1020) and PB2 (1030) are shown in FIGS. 10A-10C, respectively. These results are obtained with 44, 49 and 49 iterations, and the corresponding compliances are 154.5, 195.1 and 195.3, respectively. For PB1 result the maximum damaged compliance is 315.3, with the active damage zones shown in FIG. 9A, labelled A. For PB2 result the maximum damaged compliance is 315.4, with active zones A shown in both damage layers in FIG. 9B. For this example, the results for base damage population PB1 and increased population PB2 turned out to be almost identical. Note that one should not assume that only the final active damage zones drove the design formation as some other zones could have been active during earlier iterations. Due to non-convexity induced by penalty formulation, results of topology optimization is inherently iteration history dependent.",
                                "The standard design would not survive the given damage size. As expected, the presence of damage population pushed the design towards redundant load paths. One can picture moving a laser cutter of the given damage size through the optimal failsafe design, and observe that the structure can sustain load carrying capacity with the laser pointed at any location except the loading point.",
                                "**Example 3: 3D Control Arm**",
                                "While the foregoing examples are 2D, 3D failsafe designs were also investigated. In particular, a 3D control arm that is available in an OptiStruct tutorial was investigated. The dimensions of the model were approximately 450\u00d7550\u00d7110, and the model contained 327,493 tetrahedron elements. Referring to FIG. 11A, the arm included two regions that were optimized, labeled 1101 and 1102. The arm also included five bearings 1110, 1120, 1130, 1140, and 1150, which were excluded from the optimization. A 30% volume fraction constraint was applied, as well as single draw direction constraint for casting manufacturing.",
                                "Two load cases were considered, shown in FIGS. 11A and 11B, respectively, representing different combinations of bending and torque. The total compliance of the two load cases was the response for the Min(Max) problem in Eq. 6.",
                                "For the failsafe design, a damage cube size of 50\u00d750\u00d750 is imposed. Referring to FIGS. 12A and 12B, the base layer damage population PB1 contained 45 cubes (FIG. 12A), and the enrichment layer for PB2 added 28 more cubes (FIG. 12B).",
                                "The optimal designs for standard (1301) and failsafe (1302) are shown in FIGS. 13A and 13B, respectively. The compliances of standard and failsafe designs are 162.3 and 193.7, and took 46 and 41 iterations, respectively. The maximum compliance of damaged structure is 756.8, corresponding to four active damage zones all close to the two vertical bearings 1310 and 1320 in FIG. 13A. The compliance loss is quite large at almost four times that of the undamaged state. This can be explained by comparing the structure of standard body 1330 with the failsafe body 1340. It is clear that all active failure zones close to bearings 1310 and 1320 will cause significant weakening of the already narrow pathways to the bearings. This clearly suggests to the designer that if failsafe of the structure is required additional bearings should help to widen the pathways for load transfer. Comparing FIGS. 13A and 13B, it is evidence that major failsafe features include an additional large rib 1341 in the middle of body 1340 and more redundancy 1342 and 1343 close to the two vertical bearings.",
                                "Additional Implementations",
                                "In general, the failsafe design techniques disclosed above can be used in a variety of design applications, such as in aircraft design, nuclear power plant design, and more generally in any engineering field where structural failure can result in catastrophic accident. Moreover, while the techniques are discussed with generic sphere and cube shaped damages, in general, damage can occur in different forms. For example, a ballistic impact could cause a penetration of a given shape and size.",
                                "The functional operations described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible non transitory program carrier for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them.",
                                "The term \u201cdata processing apparatus\u201d encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers (e.g., over a computer network, such as the internet). The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.",
                                "A computer program (which may also be referred to or described as a program, software, a software application, a module, a software module, a script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a standalone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub programs, or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.",
                                "The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).",
                                "Computers suitable for the execution of a computer program include, by way of example, can be based on general or special purpose microprocessors or both, or any other kind of central processing unit. Generally, a central processing unit will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few.",
                                "Computer readable media suitable for storing computer program instructions and data include all forms of nonvolatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.",
                                "To send for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can send input to the computer. Other kinds of devices can be used to send for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.",
                                "Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (\u201cLAN\u201d) and a wide area network (\u201cWAN\u201d), e.g., the Internet.",
                                "The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.",
                                "While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.",
                                "Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system modules and components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.",
                                "Certain embodiments have been described. Other embodiments are in the following claims."
                            ],
                            "subsections": [],
                            "outline_long": [
                                "introduce 2D example 1: rectangular plate under shear force",
                                "describe finite element model",
                                "illustrate damage population PB1",
                                "illustrate damage population PB2",
                                "show optimum for standard problem",
                                "show failsafe designs with PB1 and PB2 damage populations",
                                "provide models for damage population PB1",
                                "list compliances of standard and failsafe designs",
                                "list compliances for damage population PB2",
                                "discuss difference in compliances",
                                "introduce example 2: rectangular plate under bending force",
                                "describe design domain and FEA mesh",
                                "optimize with 50% volume constraint",
                                "show damage population for PB1 and PB2",
                                "show final designs for standard and failsafe",
                                "list compliances of standard and failsafe designs",
                                "show active damage zones for PB1 and PB2",
                                "discuss results for base damage population PB1 and increased population PB2",
                                "introduce example 3: 3D control arm",
                                "describe dimensions and model",
                                "apply 30% volume fraction constraint",
                                "consider two load cases",
                                "show base layer damage population PB1",
                                "show enrichment layer for PB2",
                                "show optimal designs for standard and failsafe",
                                "list compliances of standard and failsafe designs",
                                "discuss maximum compliance of damaged structure",
                                "discuss failsafe features",
                                "discuss additional implementations",
                                "discuss use in various design applications",
                                "discuss functional operations",
                                "discuss computer storage medium",
                                "discuss data processing apparatus",
                                "discuss computer program",
                                "discuss computer readable media"
                            ],
                            "num_characters": 17793,
                            "outline_medium": [
                                "introduce 2D examples",
                                "describe rectangular plate under shear force",
                                "illustrate finite element model",
                                "show damage population PB1",
                                "show damage population PB2",
                                "illustrate optimum for standard problem",
                                "show failsafe designs with PB1 and PB2",
                                "provide compliances for standard and failsafe designs",
                                "describe rectangular plate under bending force",
                                "illustrate damage population for PB1 and PB2",
                                "show final designs for standard and failsafe",
                                "provide compliances for standard and failsafe designs",
                                "describe 3D control arm example",
                                "illustrate damage population for PB1 and PB2",
                                "show optimal designs for standard and failsafe",
                                "provide compliances for standard and failsafe designs",
                                "discuss additional implementations"
                            ],
                            "outline_short": [
                                "introduce 2D example: rectangular plate under shear force",
                                "describe finite element model and damage population",
                                "present failsafe designs and compliances for PB1 and PB2",
                                "study damage location dependency and enforce symmetry",
                                "introduce 2D example: rectangular plate under bending force",
                                "describe failsafe design and compliances for PB1 and PB2",
                                "introduce 3D example: control arm and describe failsafe design",
                                "discuss additional implementations and general applicability"
                            ]
                        }
                    ],
                    "outline_long": [
                        "introduce failsafe concept",
                        "define failure test for topology optimization",
                        "describe spherical damage model",
                        "illustrate damage model with FIG. 1A",
                        "define damage volume",
                        "describe effect of damage volume",
                        "formulate topology optimization problem",
                        "define objective function",
                        "define constraints",
                        "introduce SIMP topology optimization approach",
                        "describe power law penalty",
                        "apply lower bound on density variables",
                        "discuss damage shape alternatives",
                        "introduce cube-shaped damage",
                        "illustrate cube damage with FIG. 1B",
                        "discuss orientation of damage cubes",
                        "introduce solution strategy for failsafe topology optimization",
                        "describe random placement of damage",
                        "introduce Damage Series A (DS-A)",
                        "describe base damage population",
                        "illustrate base population with FIG. 2A",
                        "describe damage population increase",
                        "formulate design problem for DS-A",
                        "introduce Damage Series B (DS-B)",
                        "describe partial set of DS-A",
                        "formulate design problem for DS-B",
                        "summarize population size in Table 1",
                        "discuss reliability of model for capturing random failure",
                        "introduce best hideout location concept",
                        "calculate material survival rate",
                        "discuss sectional survival rate",
                        "illustrate best hideout locations with FIGS. 2B and 2C",
                        "compare DS-A and DS-B",
                        "discuss convergence of damage population series",
                        "discuss practical application of failsafe analysis",
                        "introduce finite element analysis",
                        "describe optimization problem in Eq. 1",
                        "discuss computational expense",
                        "introduce parallel processing",
                        "describe Message Passing Interface (MPI) parallel algorithm",
                        "illustrate failsafe algorithm with FIG. 3",
                        "describe master process",
                        "describe damage population generation",
                        "describe analysis and sensitivity analysis",
                        "describe convergence and constraint screening",
                        "describe approximation and optimization process",
                        "describe output and optimization end",
                        "discuss practical measures for damage zone generation",
                        "discuss reducing computation cost",
                        "discuss preserving load conditions",
                        "introduce three-bar truss example",
                        "formulate optimization problem for three-bar truss",
                        "discuss failsafe design results"
                    ],
                    "num_characters": 26826,
                    "outline_medium": [
                        "motivate failsafe design concept",
                        "define failure test for topology optimization",
                        "introduce spherical damage model",
                        "describe damage volume effect",
                        "formulate topology optimization problem",
                        "define objective function and constraints",
                        "introduce SIMP topology optimization approach",
                        "apply power law penalty to stiffness density relationship",
                        "discuss damage population strategy",
                        "introduce cube-shaped damage model",
                        "describe Damage Series A (DS-A) and B (DS-B)",
                        "formulate design problem for failsafe topology optimization",
                        "simplify problem formulation for numerical examples",
                        "discuss relationship between damage population size and material survival rate",
                        "analyze geometric interaction of intersecting cubes",
                        "discuss reliability of model for capturing random failure",
                        "visualize damage population increase",
                        "analyze sectional and volumetric survival rates",
                        "discuss convergence of damage population series",
                        "implement failsafe topology design framework using commercial FEA software",
                        "describe iterative scheme of failsafe algorithm",
                        "distribute models to computing nodes for analysis",
                        "apply convergence and constraint screening",
                        "conduct sensitivity analysis",
                        "approximate and optimize design",
                        "output final design and terminate optimization"
                    ],
                    "outline_short": [
                        "motivate failsafe design concept",
                        "define failure test for topology optimization",
                        "introduce spherical damage model",
                        "formulate topology optimization problem",
                        "introduce cube-shaped damage model",
                        "describe damage series A and B",
                        "formulate simplified problem for numerical examples",
                        "analyze relationship between damage population size and material survival rate",
                        "discuss reliability of model for capturing random failure",
                        "visualize damage population increase",
                        "describe implementation of failsafe topology design framework",
                        "outline iterative scheme of failsafe algorithm",
                        "illustrate failsafe design using a simple three-bar truss example"
                    ]
                }
            ],
            "outline_long": [],
            "num_characters": 0,
            "outline_medium": [],
            "outline_short": []
        }
    ],
    "claims": [
        "1. A computer-implemented method for designing a failsafe structure, the method comprising:\ndefining a structural continuum in a computational environment, the structural continuum corresponding to a homogenous distribution of a solid material through a design volume;\ndefining a damage volume in the structural continuum, the damage volume corresponding to a portion of the structural continuum devoid of the material at an arbitrary location within the design volume; and\ncomputationally optimizing a topology for a design of the failsafe structure subject to the damage volume and to one or more designated load cases,\nwherein the optimized topology for the design corresponds an inhomogeneous distribution of the solid material through the design volume such that the design volume is composed of portions of the solid material and voids, the solid material portions defining the failsafe structure which will continue to support all the designated load cases when the material is removed from a damage volume at any location in the design volume, and\nthe computational optimization comprises performing a computational structural analysis on the structural continuum with a finite damage population, the finite damage population corresponding to locating the damage volume at a first series of different locations in the structural continuum, the damage volumes located at adjacent locations in the first series of different locations being non-overlapping damage volumes.",
        "2. The method of claim 1, wherein the computational structural analysis comprises analyzing a plurality of analysis models, each analysis model comprising the structural continuum with a corresponding instance of damage from the finite damage population.",
        "3. The method of claim 2, wherein each analysis model is analyzed in parallel on a computer cluster.",
        "4. The method of claim 1, wherein the finite damage population spans the structural continuum.",
        "5. The method of claim 1, wherein, for the first series, damage volumes at adjacent locations contact at at least one point in the structural continuum.",
        "6. The method of claim 5, wherein, for the first series, there is no gap between damage volumes at the adjacent locations.",
        "7. The method of claim 5, wherein, for the first series, there is no overlap between damage volumes at adjacent locations.",
        "8. The method of claim 1, wherein the finite damage population excludes a damage volume from a location of a point load.",
        "9. The method of claim 1, wherein, for each location in the first series, the damage volume has the same shape and dimensions.",
        "10. The method of claim 1, wherein the computational optimization further comprises performing a computational structural analysis on the structural continuum for a second finite damage population, the second finite damage population corresponding to locating damage volumes at a second series of different locations, different from the first series, in the structural continuum.",
        "11. The method of claim 10, wherein the second series has twice as many locations in each dimension as the first series.",
        "12. The method of claim 10, wherein damage volumes of the second finite damage population overlap with damage volumes of the first damage population.",
        "13. The method of claim 1, wherein the computational optimization comprises comparing a structural parameter of the structural continuum with the damage volume under the one or more designated load cases.",
        "14. The method of claim 13, wherein the structural parameter of the structural continuum with the damage volume under the one or more designated load cases is compared to a structural parameter of an undamaged structural continuum under the one or more designated load cases.",
        "15. The method of claim 13, wherein the structural parameter is a stress.",
        "16. The method of claim 15, wherein the stress is below a threshold for the solid material for maintaining structural integrity of the structural continuum.",
        "17. The method of claim 13, wherein the structural parameter is a compliance.",
        "18. The method of claim 17, wherein the computational optimization comprises minimizing a largest compliance associated with each damage location of the finite damage population.",
        "19. The method of claim 1, wherein the computational structural analysis is performed using a computational analysis method selected from the group consisting of finite element analysis (FEA), a boundary element method, and a meshless analysis method.",
        "20. The method of claim 1, wherein a dimension of the damage volume is established based on design requirement for maximum damage size.",
        "21. The method of claim 1, wherein the damage volume has a shape selected from the group consisting of spherical, cubic, rectangular, prismatic, cylindrical, and conic.",
        "22. The method of claim 1, wherein the damage volume is contained within the structural continuum.",
        "23. The method of claim 1, wherein the damage volume extends through the structural continuum.",
        "24. The method of claim 1, wherein the structural members are discrete structural members.",
        "25. The method of claim 1, wherein a maximum member cross-sectional dimension is constrained to no more than half of the maximum damage dimension.",
        "26. The method of claim 1, wherein the structural members are part of a monolithic component.",
        "27. A system, comprising:\na data processing apparatus configured to receive information defining:\n(i) a structural continuum in a computational environment, the structural continuum corresponding to a homogenous distribution of a solid material through a design volume; and\n(ii) a damage volume in the structural continuum, the damage volume corresponding to a portion of the structural continuum devoid of the material at an arbitrary location within the design volume;\n\nthe data processing apparatus being programmed to optimize a topology for a design of a failsafe structure subject to the damage volume and to one or more designated load cases,\nwherein the optimized topology for the design corresponds an inhomogeneous distribution of the solid material through the design volume such that the design volume is composed of portions of the solid material and voids, the solid material portions defining the failsafe structure which will continue to support all the designated load cases when the material is removed from a damage volume at any location in the design volume, and\nthe optimization comprises performing a computational structural analysis on the structural continuum with a finite damage population, the finite damage population corresponding to locating the damage volume at a series of different locations in the structural continuum, the damage volumes located at adjacent locations in the first series of different locations being non-overlapping damage volumes.",
        "28. A non-transitory computer readable medium storing a program causing a computer to execute a process for designing a failsafe structure, the process comprising:\ndefining a structural continuum in a computational environment, the structural continuum corresponding to a homogenous distribution of a solid material through a design volume;\ndefining a damage volume in the structural continuum, the damage volume corresponding to a portion of the structural continuum devoid of the material at an arbitrary location within the design volume; and\ncomputationally optimizing a topology for a design of the failsafe structure subject to the damage volume and to one or more designated load cases,\nwherein the optimized topology for the design corresponds an inhomogeneous distribution of the solid material through the design volume such that the design volume is composed of portions of the solid material and voids, the solid material portions defining the failsafe structure which will continue to support all the designated load cases when the material is removed from a damage volume at any location in the design volume, and\nthe computational optimization comprises performing a computational structural analysis on the structural continuum with a finite damage population, the finite damage population corresponding to locating the damage volume at a series of different locations in the structural continuum, the damage volumes located at adjacent locations in the first series of different locations being non-overlapping damage volumes."
    ]
}